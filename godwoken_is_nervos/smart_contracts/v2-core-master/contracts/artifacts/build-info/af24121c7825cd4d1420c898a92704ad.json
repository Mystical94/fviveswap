{
	"id": "af24121c7825cd4d1420c898a92704ad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.16;\r\n\r\nimport './interfaces/IUniswapV2Pair.sol';\r\nimport './UniswapV2ERC20.sol';\r\nimport './libraries/Math.sol';\r\nimport './libraries/UQ112x112.sol';\r\nimport './interfaces/IERC20.sol';\r\nimport './interfaces/IUniswapV2Factory.sol';\r\nimport './interfaces/IUniswapV2Callee.sol';\r\n\r\ncontract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\r\n    using SafeMath  for uint;\r\n    using UQ112x112 for uint224;\r\n\r\n    uint public constant MINIMUM_LIQUIDITY = 10**3;\r\n    bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n\r\n    address public factory;\r\n    address public token0;\r\n    address public token1;\r\n\r\n    uint112 private reserve0;           // uses single storage slot, accessible via getReserves\r\n    uint112 private reserve1;           // uses single storage slot, accessible via getReserves\r\n    uint32  private blockTimestampLast; // uses single storage slot, accessible via getReserves\r\n\r\n    uint public price0CumulativeLast;\r\n    uint public price1CumulativeLast;\r\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\r\n\r\n    uint private unlocked = 1;\r\n    modifier lock() {\r\n        require(unlocked == 1, 'UniswapV2: LOCKED');\r\n        unlocked = 0;\r\n        _;\r\n        unlocked = 1;\r\n    }\r\n\r\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\r\n        _reserve0 = reserve0;\r\n        _reserve1 = reserve1;\r\n        _blockTimestampLast = blockTimestampLast;\r\n    }\r\n\r\n    function _safeTransfer(address token, address to, uint value) private {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED');\r\n    }\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    constructor() public {\r\n        factory = msg.sender;\r\n    }\r\n\r\n    // called once by the factory at time of deployment\r\n    function initialize(address _token0, address _token1) external {\r\n        require(msg.sender == factory, 'UniswapV2: FORBIDDEN'); // sufficient check\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n    }\r\n\r\n    // update reserves and, on the first call per block, price accumulators\r\n    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\r\n        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\r\n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\r\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\r\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\r\n            // * never overflows, and + overflow is desired\r\n            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\r\n            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\r\n        }\r\n        reserve0 = uint112(balance0);\r\n        reserve1 = uint112(balance1);\r\n        blockTimestampLast = blockTimestamp;\r\n        emit Sync(reserve0, reserve1);\r\n    }\r\n\r\n    // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\r\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\r\n        address feeTo = IUniswapV2Factory(factory).feeTo();\r\n        address feeToGrowth = IUniswapV2Factory(factory).feeToGrowth();\r\n        feeOn = feeTo != address(0);\r\n        uint _kLast = kLast; // gas savings\r\n        if (feeOn) {\r\n            if (_kLast != 0) {\r\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\r\n                uint rootKLast = Math.sqrt(_kLast);\r\n                if (rootK > rootKLast) {\r\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast));\r\n                    uint denominator = rootK.mul(5).add(rootKLast);\r\n                    uint liquidity = numerator / denominator;\r\n                    if (liquidity > 0) {\r\n                        if (feeToGrowth == address(0)) {\r\n                            _mint(feeTo, liquidity);\r\n                        }\r\n                        else {\r\n                            uint liquidity_protocol = (liquidity / 5) * 3;\r\n                            uint liquidity_growth = (liquidity / 5) * 2;\r\n                            _mint(feeTo, liquidity_protocol);\r\n                            _mint(feeToGrowth, liquidity_growth);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (_kLast != 0) {\r\n            kLast = 0;\r\n        }\r\n    }\r\n\r\n    // this low-level function should be called from a contract which performs important safety checks\r\n    function mint(address to) external lock returns (uint liquidity) {\r\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\r\n        uint balance0 = IERC20(token0).balanceOf(address(this));\r\n        uint balance1 = IERC20(token1).balanceOf(address(this));\r\n        uint amount0 = balance0.sub(_reserve0);\r\n        uint amount1 = balance1.sub(_reserve1);\r\n\r\n        bool feeOn = _mintFee(_reserve0, _reserve1);\r\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\r\n        if (_totalSupply == 0) {\r\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\r\n           _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\r\n        } else {\r\n            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\r\n        }\r\n        require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\r\n        _mint(to, liquidity);\r\n\r\n        _update(balance0, balance1, _reserve0, _reserve1);\r\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\r\n        emit Mint(msg.sender, amount0, amount1);\r\n    }\r\n\r\n    // this low-level function should be called from a contract which performs important safety checks\r\n    function burn(address to) external lock returns (uint amount0, uint amount1) {\r\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\r\n        address _token0 = token0;                                // gas savings\r\n        address _token1 = token1;                                // gas savings\r\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\r\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\r\n        uint liquidity = balanceOf[address(this)];\r\n\r\n        bool feeOn = _mintFee(_reserve0, _reserve1);\r\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\r\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\r\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\r\n        require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\r\n        _burn(address(this), liquidity);\r\n        _safeTransfer(_token0, to, amount0);\r\n        _safeTransfer(_token1, to, amount1);\r\n        balance0 = IERC20(_token0).balanceOf(address(this));\r\n        balance1 = IERC20(_token1).balanceOf(address(this));\r\n\r\n        _update(balance0, balance1, _reserve0, _reserve1);\r\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\r\n        emit Burn(msg.sender, amount0, amount1, to);\r\n    }\r\n\r\n    // this low-level function should be called from a contract which performs important safety checks\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r\n        require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\r\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\r\n        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\r\n\r\n        uint balance0;\r\n        uint balance1;\r\n        { // scope for _token{0,1}, avoids stack too deep errors\r\n        address _token0 = token0;\r\n        address _token1 = token1;\r\n        require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO');\r\n        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\r\n        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\r\n        if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\r\n        balance0 = IERC20(_token0).balanceOf(address(this));\r\n        balance1 = IERC20(_token1).balanceOf(address(this));\r\n        }\r\n        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\r\n        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\r\n        require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\r\n        { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\r\n        uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\r\n        uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\r\n        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');\r\n        }\r\n\r\n        _update(balance0, balance1, _reserve0, _reserve1);\r\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\r\n    }\r\n\r\n    // force balances to match reserves\r\n    function skim(address to) external lock {\r\n        address _token0 = token0; // gas savings\r\n        address _token1 = token1; // gas savings\r\n        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\r\n        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\r\n    }\r\n\r\n    // force reserves to match balances\r\n    function sync() external lock {\r\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\r\n    }\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Callee {\r\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToGrowth() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToGrowth(address) external;\r\n    function setFeeToSetter(address) external;\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol": {
				"content": "pragma solidity =0.5.16;\r\n\r\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\r\n\r\n// range: [0, 2**112 - 1]\r\n// resolution: 1 / 2**112\r\n\r\nlibrary UQ112x112 {\r\n    uint224 constant Q112 = 2**112;\r\n\r\n    // encode a uint112 as a UQ112x112\r\n    function encode(uint112 y) internal pure returns (uint224 z) {\r\n        z = uint224(y) * Q112; // never overflows\r\n    }\r\n\r\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\r\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\r\n        z = x / uint224(y);\r\n    }\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol": {
				"content": "pragma solidity =0.5.16;\r\n\r\n// a library for performing various math operations\r\n\r\nlibrary Math {\r\n    function min(uint x, uint y) internal pure returns (uint z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.16;\r\n\r\nimport './interfaces/IUniswapV2ERC20.sol';\r\nimport './libraries/SafeMath.sol';\r\n\r\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\r\n    using SafeMath for uint;\r\n\r\n    string public constant name = 'Fvive Token';\r\n    string public constant symbol = 'FVIVE';\r\n    uint8 public constant decimals = 18;\r\n    uint  public totalSupply;\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    bytes32 public DOMAIN_SEPARATOR;\r\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\r\n    mapping(address => uint) public nonces;\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    constructor() public {\r\n        uint chainId;\r\n        assembly {\r\n            chainId := chainid\r\n        }\r\n        DOMAIN_SEPARATOR = keccak256(\r\n            abi.encode(\r\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\r\n                keccak256(bytes(name)),\r\n                keccak256(bytes('1')),\r\n                chainId,\r\n                address(this)\r\n            )\r\n        );\r\n    }\r\n\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(from, address(0), value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) external returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) external returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) external returns (bool) {\r\n        if (allowance[from][msg.sender] != uint(-1)) {\r\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\r\n                '\\x19\\x01',\r\n                DOMAIN_SEPARATOR,\r\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\r\n            )\r\n        );\r\n        address recoveredAddress = ecrecover(digest, v, r, s);\r\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\r\n        _approve(owner, spender, value);\r\n    }\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity >=0.5.16;\r\n\r\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\r\n\r\nlibrary SafeMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, 'ds-math-add-overflow');\r\n    }\r\n\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\r\n    }\r\n}\r\n"
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2ERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol": {
				"UniswapV2ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3528  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":943:1401  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1133:1228  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1033:1040  chainid */\n  chainid\n  swap1\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1133:1228  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1263:1267  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x0b\n  dup4\n  mstore\n  shl(0xa9, 0x233b34bb32902a37b5b2b7)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1298:1308  bytes('1') */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1247:1269  keccak256(bytes(name)) */\n  0x0dd2b0c3ae82cd452ec4523efbf188d2aa2ead0a653fbc87a1ab70af7fc7fc29\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1288:1309  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1362:1366  this */\n  address\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1080:1393  keccak256(\r... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1061:1077  DOMAIN_SEPARATOR */\n  0x03\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1061:1393  DOMAIN_SEPARATOR = keccak256(\r... */\n  sstore\n  pop\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3528  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3528  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3528  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:236  string public constant name = 'Fvive Token' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:236  string public constant name = 'Fvive Token' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":331:355  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":289:324  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":480:511  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":362:403  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":362:403  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":738:776  mapping(address => uint) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":738:776  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":243:282  string public constant symbol = 'FVIVE' */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2395:2534  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2395:2534  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":410:471  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":410:471  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:236  string public constant name = 'Fvive Token' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xa9, 0x233b34bb32902a37b5b2b7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_26:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2304:2308  bool */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2321:2357  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2330:2340  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2342:2349  spender */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2351:2356  value */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2321:2329  _approve */\n      tag_61\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2321:2357  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2375:2379  true */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":331:355  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      dup4\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2620:2624  bool */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2650  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2657:2667  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2668  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2680  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2637:2777  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      tag_63\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2742  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2736  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2742  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2743:2753  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2754  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2765  allowance[from][msg.sender].sub(value) */\n      tag_64\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2759:2764  value */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2765  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2758  allowance[from][msg.sender].sub */\n      tag_65\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2765  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2712  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2706  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2712  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2713:2723  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2724  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2765  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2637:2777  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n    tag_63:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2787:2813  _transfer(from, to, value) */\n      tag_66\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2797:2801  from */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2803:2805  to */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2807:2812  value */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2787:2796  _transfer */\n      tag_67\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2787:2813  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2831:2835  true */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":289:324  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":322:324  18 */\n      0x12\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":289:324  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":480:511  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":362:403  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":738:776  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":243:282  string public constant symbol = 'FVIVE' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x4656495645)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2395:2534  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_52:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2455:2459  bool */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2472:2504  _transfer(msg.sender, to, value) */\n      tag_60\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2482:2492  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2494:2496  to */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2498:2503  value */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2472:2481  _transfer */\n      tag_67\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2472:2504  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_55:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2997:3012  block.timestamp */\n      timestamp\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2985:2993  deadline */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2985:3012  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2977:3035  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x155b9a5cddd85c158c8e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_71:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3151:3167  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3260  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3046:3060  bytes32 digest */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3260  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3253  nonces */\n      0x04\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3260  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3262  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3196:3273  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3196:3273  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3196:3273  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3186:3274  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3087:3289  abi.encodePacked(\r... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3087:3289  abi.encodePacked(\r... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3063:3300  keccak256(\r... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3046:3060  bytes32 digest */\n      swap2\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3262  nonces[owner]++ */\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3262  nonces[owner]++ */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3383:3413  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3383:3442  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_73\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3437:3442  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3417:3442  recoveredAddress == owner */\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3417:3433  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3417:3442  recoveredAddress == owner */\n      and\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3383:3442  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3375:3475  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_74:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3486:3517  _approve(owner, spender, value) */\n      tag_75\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3495:3500  owner */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3502:3509  spender */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3511:3516  value */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3486:3494  _approve */\n      tag_61\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3486:3517  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":410:471  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1835:2004  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1932  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1925  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1932  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1941  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1949  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1965:1996  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1835:2004  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":297:426  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_65:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":381:386  x - y */\n      dup1\n      dup3\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":376:392  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":368:418  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2012:2232  function _transfer(address from, address to, uint value) private {\r... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2121  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2115  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2121  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2132  balanceOf[from].sub(value) */\n      tag_80\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2126:2131  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2132  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2125  balanceOf[from].sub */\n      tag_65\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2132  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2103  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2097  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2103  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2132  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2172  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2183  balanceOf[to].add(value) */\n      tag_81\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2177:2182  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2183  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2176  balanceOf[to].add */\n      tag_82\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2183  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2156  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2152  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2156  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2183  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2199:2224  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2156  balanceOf[to] */\n      swap2\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2199:2224  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2012:2232  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":161:289  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_82:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":245:250  x + y */\n      dup1\n      dup3\n      add\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":240:256  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":232:281  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a723158205a8691d2c9b2013e73d347a9be3473932a1ca5afbe62d94115d41564ff2e9c7264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051469080605261096d8239604080519182900360520182208282018252600b83526a233b34bb32902a37b5b2b760a91b6020938401528151808301835260018152603160f81b908401528151808401919091527f0dd2b0c3ae82cd452ec4523efbf188d2aa2ead0a653fbc87a1ab70af7fc7fc29818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c0909401905282519201919091206003555061087e806100ef6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610337565b604080519115158252519081900360200190f35b61019961034e565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610354565b6101996103ee565b6101f1610412565b6040805160ff9092168252519081900360200190f35b610199610417565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041d565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042f565b6100dc610441565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610462565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610671565b6040518060400160405280600b81526020016a233b34bb32902a37b5b2b760a91b81525081565b600061034433848461068e565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d9576001600160a01b03841660009081526002602090815260408083203384529091529020546103b4908363ffffffff6106f016565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e4848484610740565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b60405180604001604052806005815260200164465649564560d81b81525081565b6000610344338484610740565b428410156104b9576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061060a5750886001600160a01b0316816001600160a01b0316145b61065b576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b61066689898961068e565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610348576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610769908263ffffffff6106f016565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461079e908263ffffffff6107fa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610348576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158205a8691d2c9b2013e73d347a9be3473932a1ca5afbe62d94115d41564ff2e9c7264736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x96D DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP4 MSTORE PUSH11 0x233B34BB32902A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDD2B0C3AE82CD452EC4523EFBF188D2AA2EAD0A653FBC87A1AB70AF7FC7FC29 DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH2 0x87E DUP1 PUSH2 0xEF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x354 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41D JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42F JUMP JUMPDEST PUSH2 0xDC PUSH2 0x441 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x462 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x233B34BB32902A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4656495645 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x60A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x666 DUP10 DUP10 DUP10 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x769 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x79E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7FA AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GAS DUP7 SWAP2 0xD2 0xC9 0xB2 ADD RETURNDATACOPY PUSH20 0xD347A9BE3473932A1CA5AFBE62D94115D41564FF 0x2E SWAP13 PUSH19 0x64736F6C63430005100032454950373132446F PUSH14 0x61696E28737472696E67206E616D PUSH6 0x2C737472696E PUSH8 0x2076657273696F6E 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E747261637429000000000000 ",
							"sourceMap": "111:3417:0:-;;;943:458;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1133:95:0;;1033:7;;1133:95;;;;;;;;;;;;;;;;1263:4;;;;;;;;-1:-1:-1;;;1263:4:0;;;;;1298:10;;;;;;;;;;-1:-1:-1;;;1298:10:0;;;;1104:278;;;;;;;;;1247:22;1104:278;;;;1288:21;1104:278;;;;;;;;;;;1362:4;1104:278;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1104:278:0;;;;;;1080:313;;;;;;;;1061:16;:332;-1:-1:-1;111:3417:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610337565b604080519115158252519081900360200190f35b61019961034e565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610354565b6101996103ee565b6101f1610412565b6040805160ff9092168252519081900360200190f35b610199610417565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041d565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042f565b6100dc610441565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610462565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610671565b6040518060400160405280600b81526020016a233b34bb32902a37b5b2b760a91b81525081565b600061034433848461068e565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d9576001600160a01b03841660009081526002602090815260408083203384529091529020546103b4908363ffffffff6106f016565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e4848484610740565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b60405180604001604052806005815260200164465649564560d81b81525081565b6000610344338484610740565b428410156104b9576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061060a5750886001600160a01b0316816001600160a01b0316145b61065b576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b61066689898961068e565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610348576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610769908263ffffffff6106f016565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461079e908263ffffffff6107fa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610348576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158205a8691d2c9b2013e73d347a9be3473932a1ca5afbe62d94115d41564ff2e9c7264736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x354 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41D JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42F JUMP JUMPDEST PUSH2 0xDC PUSH2 0x441 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x462 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x233B34BB32902A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4656495645 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 CALLER DUP5 DUP5 PUSH2 0x740 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x60A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x666 DUP10 DUP10 DUP10 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x769 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6F0 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x79E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7FA AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GAS DUP7 SWAP2 0xD2 0xC9 0xB2 ADD RETURNDATACOPY PUSH20 0xD347A9BE3473932A1CA5AFBE62D94115D41564FF 0x2E SWAP13 PUSH19 0x64736F6C634300051000320000000000000000 ",
							"sourceMap": "111:3417:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:3417:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;193:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2240:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;331:24;;;:::i;:::-;;;;;;;;;;;;;;;;2542:301;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2542:301:0;;;;;;;;;;;;;;;;;:::i;623:108::-;;;:::i;289:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;480:31;;;:::i;362:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;362:41:0;-1:-1:-1;;;;;362:41:0;;:::i;738:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;738:38:0;-1:-1:-1;;;;;738:38:0;;:::i;243:39::-;;;:::i;2395:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2395:139:0;;;;;;;;:::i;2851:674::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2851:674:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;410:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;410:61:0;;;;;;;;;;:::i;193:43::-;;;;;;;;;;;;;;-1:-1:-1;;;193:43:0;;;;:::o;2240:147::-;2304:4;2321:36;2330:10;2342:7;2351:5;2321:8;:36::i;:::-;-1:-1:-1;2375:4:0;2240:147;;;;;:::o;331:24::-;;;;:::o;2542:301::-;-1:-1:-1;;;;;2641:15:0;;2620:4;2641:15;;;:9;:15;;;;;;;;2657:10;2641:27;;;;;;;;-1:-1:-1;;2641:39:0;2637:140;;-1:-1:-1;;;;;2727:15:0;;;;;;:9;:15;;;;;;;;2743:10;2727:27;;;;;;;;:38;;2759:5;2727:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;2697:15:0;;;;;;:9;:15;;;;;;;;2713:10;2697:27;;;;;;;:68;2637:140;2787:26;2797:4;2803:2;2807:5;2787:9;:26::i;:::-;-1:-1:-1;2831:4:0;2542:301;;;;;:::o;623:108::-;665:66;623:108;:::o;289:35::-;322:2;289:35;:::o;480:31::-;;;;:::o;362:41::-;;;;;;;;;;;;;:::o;738:38::-;;;;;;;;;;;;;:::o;243:39::-;;;;;;;;;;;;;;-1:-1:-1;;;243:39:0;;;;:::o;2395:139::-;2455:4;2472:32;2482:10;2494:2;2498:5;2472:9;:32::i;2851:674::-;2997:15;2985:8;:27;;2977:58;;;;;-1:-1:-1;;;2977:58:0;;;;;;;;;;;;-1:-1:-1;;;2977:58:0;;;;;;;;;;;;;;;3151:16;;-1:-1:-1;;;;;3247:13:0;;;3046:14;3247:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3196:77;;665:66;3196:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3196:77:0;;;;;3186:88;;;;;;-1:-1:-1;;;3087:202:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3087:202:0;;;;;;3063:237;;;;;;;;;3338:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3046:14;;3247:15;3338:26;;;;;-1:-1:-1;;3338:26:0;;;;;;;;;;3247:15;3338:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3338:26:0;;-1:-1:-1;;3338:26:0;;;-1:-1:-1;;;;;;;3383:30:0;;;;;;:59;;;3437:5;-1:-1:-1;;;;;3417:25:0;:16;-1:-1:-1;;;;;3417:25:0;;3383:59;3375:100;;;;;-1:-1:-1;;;3375:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3486:31;3495:5;3502:7;3511:5;3486:8;:31::i;:::-;2851:674;;;;;;;;;:::o;410:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1835:169::-;-1:-1:-1;;;;;1916:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;1965:31;;;;;;;;;;;;;;;;;1835:169;;;:::o;297:129:8:-;381:5;;;376:16;;;;368:50;;;;;-1:-1:-1;;;368:50:8;;;;;;;;;;;;-1:-1:-1;;;368:50:8;;;;;;;;;;;;;;2012:220:0;-1:-1:-1;;;;;2106:15:0;;;;;;:9;:15;;;;;;:26;;2126:5;2106:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2088:15:0;;;;;;;:9;:15;;;;;;:44;;;;2159:13;;;;;;;:24;;2177:5;2159:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2143:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2199:25;;;;;;;2143:13;;2199:25;;;;;;;;;;;;;2012:220;;;:::o;161:128:8:-;245:5;;;240:16;;;;232:49;;;;;-1:-1:-1;;;232:49:8;;;;;;;;;;;;-1:-1:-1;;;232:49:8;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "434800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 3528,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "MSTORE"
								},
								{
									"begin": 943,
									"end": 1401,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "MLOAD"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "CHAINID"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP3"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "CODECOPY"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "MLOAD"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "SWAP2"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP3"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "SWAP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "SUB"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "ADD"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP3"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "KECCAK256"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP3"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP3"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP3"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "MSTORE"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP4"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "233B34BB32902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "SWAP4"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP5"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "MSTORE"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP2"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MLOAD"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP1"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP4"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "ADD"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP4"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MSTORE"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP2"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "SWAP1"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP5"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "ADD"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1247,
									"end": 1269,
									"name": "PUSH",
									"value": "DD2B0C3AE82CD452EC4523EFBF188D2AA2EAD0A653FBC87A1AB70AF7FC7FC29"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP4"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1288,
									"end": 1309,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP3"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1362,
									"end": 1366,
									"name": "ADDRESS"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP7"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "DUP3"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "MLOAD"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP3"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "ADD"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP2"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP1"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP2"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "KECCAK256"
								},
								{
									"begin": 1061,
									"end": 1077,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1061,
									"end": 1393,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "DUP1"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "CODECOPY"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 3528,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205a8691d2c9b2013e73d347a9be3473932a1ca5afbe62d94115d41564ff2e9c7264736f6c63430005100032",
									".code": [
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "MSTORE"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "LT"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "SHR"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3528,
											"name": "REVERT"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP6"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ISZERO"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPI"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "EXP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "NOT"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "RETURN"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "AND"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ISZERO"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ISZERO"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP3"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "RETURN"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP3"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MSTORE"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SUB"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "RETURN"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMPDEST"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "AND"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "ADD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "AND"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "ADD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP3"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "AND"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "RETURN"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMPDEST"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "DUP1"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "DUP2"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "AND"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "ADD"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP3"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "STOP"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "233B34BB32902A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2330,
											"end": 2340,
											"name": "CALLER"
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP5"
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP5"
										},
										{
											"begin": 2321,
											"end": 2329,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP3"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SLOAD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP4"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND"
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP4"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "KECCAK256"
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP5"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SWAP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "KECCAK256"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2641,
											"end": 2680,
											"name": "EQ"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP5"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP4"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "KECCAK256"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "CALLER"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "DUP5"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SWAP2"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "KECCAK256"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SLOAD"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP4"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2758,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP6"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "AND"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP1"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP4"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "KECCAK256"
										},
										{
											"begin": 2713,
											"end": 2723,
											"name": "CALLER"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "DUP5"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "SWAP2"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "KECCAK256"
										},
										{
											"begin": 2697,
											"end": 2765,
											"name": "SSTORE"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "JUMPDEST"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "DUP5"
										},
										{
											"begin": 2803,
											"end": 2805,
											"name": "DUP5"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP5"
										},
										{
											"begin": 2787,
											"end": 2796,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2835,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP4"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP3"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "POP"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "POP"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "POP"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 324,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "SLOAD"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "MSTORE"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "MSTORE"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "KECCAK256"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SLOAD"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMPDEST"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "KECCAK256"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4656495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "CALLER"
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "DUP5"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "DUP5"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2997,
											"end": 3012,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2985,
											"end": 2993,
											"name": "DUP5"
										},
										{
											"begin": 2985,
											"end": 3012,
											"name": "LT"
										},
										{
											"begin": 2985,
											"end": 3012,
											"name": "ISZERO"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "JUMPI"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP2"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP3"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP3"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP3"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MLOAD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP2"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SUB"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "REVERT"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "JUMPDEST"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP10"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "AND"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "MSTORE"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "MSTORE"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP4"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "KECCAK256"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SLOAD"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP3"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP3"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MLOAD"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP2"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP5"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP14"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "AND"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP13"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP12"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP2"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP3"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "MLOAD"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "DUP4"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "ADD"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP6"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP6"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP5"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP3"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "DUP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "MLOAD"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "DUP4"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "ADD"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "KECCAK256"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP6"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP4"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP7"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP10"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "AND"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP6"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP9"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP8"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MLOAD"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "SWAP2"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "SWAP4"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SUB"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP6"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "GAS"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "STATICCALL"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MLOAD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP2"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "AND"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP1"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP1"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "JUMPI"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "POP"
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "EQ"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "JUMPDEST"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "JUMPI"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SUB"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "REVERT"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "JUMPDEST"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3495,
											"end": 3500,
											"name": "DUP10"
										},
										{
											"begin": 3502,
											"end": 3509,
											"name": "DUP10"
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP10"
										},
										{
											"begin": 3486,
											"end": 3494,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP3"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP4"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP5"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "KECCAK256"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "KECCAK256"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SLOAD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP1"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP5"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "AND"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "SWAP1"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP1"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP4"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "KECCAK256"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP5"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP8"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "AND"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP1"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP5"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP5"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP3"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP2"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP3"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP1"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "KECCAK256"
										},
										{
											"begin": 1916,
											"end": 1949,
											"name": "DUP6"
										},
										{
											"begin": 1916,
											"end": 1949,
											"name": "SWAP1"
										},
										{
											"begin": 1916,
											"end": 1949,
											"name": "SSTORE"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "MLOAD"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP6"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "MSTORE"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "MLOAD"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP3"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP1"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SUB"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP1"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "ADD"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP1"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "LOG3"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "DUP1"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "DUP3"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "SUB"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "DUP3"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "GT"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "REVERT"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP4"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "AND"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SWAP1"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP2"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "MSTORE"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "MSTORE"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SWAP1"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "KECCAK256"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SLOAD"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP3"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2106,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "AND"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP6"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "AND"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "SWAP1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP2"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "MSTORE"
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "MSTORE"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP3"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "KECCAK256"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SWAP4"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SWAP4"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SSTORE"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "DUP5"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "KECCAK256"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "SLOAD"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "DUP3"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP5"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "AND"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "MSTORE"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "MSTORE"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP3"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "KECCAK256"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SWAP5"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SWAP5"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SSTORE"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "MLOAD"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP6"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "MSTORE"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "MLOAD"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP4"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP8"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "AND"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP2"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SUB"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "ADD"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "LOG3"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "LT"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "ISZERO"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "JUMPI"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":\"UniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0xa23394c09970eebb96a2d3ea6acf567227481324b512c34fefaa7adef1f88405\",\"urls\":[\"bzz-raw://38d54c4c61140e4ac49aebfd4cd4d735ecab07a4bd8adc20da1a43403bd7a522\",\"dweb:/ipfs/QmcyRp2SWmhW3CzbuiEe6XERiE7d2BaY9f6CS566G7VKnc\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0xda3ed72159ac8321b9ee8b67893e0d42ac6f8180b8e1112e8724a9093a409541\",\"urls\":[\"bzz-raw://db4c5c04309ae947a14a464f22f37b76225749248eff9a6a9e184f314531533e\",\"dweb:/ipfs/QmaNHx4uQ79xhQ3SgCK4NodQR11oc4DRtkPGLqGSpB7jei\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xfe46a92953b0ebf82fc2a9f21f995beb60e845aaa7223bfb37711a3b41d6dc11\",\"urls\":[\"bzz-raw://06272423f21f7b375d85d3d4c0cb280a278b1f7f312af2bf002278e16bf48432\",\"dweb:/ipfs/QmXGGm8wvt8pZu2ob1HFk8qLTRATasvomjkaYBvcH3qU57\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol": {
				"UniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":301:10539  contract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1170:1171  1 */\n  0x01\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1146:1171  uint private unlocked = 1 */\n  0x0c\n  sstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2257:2317  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1133:1228  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1033:1040  chainid */\n  chainid\n  swap1\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1133:1228  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1263:1267  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x0b\n  dup4\n  mstore\n  shl(0xa9, 0x233b34bb32902a37b5b2b7)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1298:1308  bytes('1') */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1247:1269  keccak256(bytes(name)) */\n  0x0dd2b0c3ae82cd452ec4523efbf188d2aa2ead0a653fbc87a1ab70af7fc7fc29\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1288:1309  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1362:1366  this */\n  address\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1104:1382  abi.encode(\r... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1080:1393  keccak256(\r... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1061:1077  DOMAIN_SEPARATOR */\n  0x03\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1061:1393  DOMAIN_SEPARATOR = keccak256(\r... */\n  sstore\n  pop\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2289:2296  factory */\n  0x05\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2289:2309  factory = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2299:2309  msg.sender */\n  caller\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2289:2309  factory = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":301:10539  contract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":301:10539  contract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":301:10539  contract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd21220a7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xba9a7a56\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x7ecebe00\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x6a627842\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n      dup2\n      calldataload\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      0x40\n      dup4\n      add\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_40:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_41\n      jump\t// in\n    tag_36:\n      stop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:236  string public constant name = 'Fvive Token' */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_44:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_44)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:236  string public constant name = 'Fvive Token' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_47:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1322:1553  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\r... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffffff\n      and\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":611:632  address public token0 */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":331:355  uint  public totalSupply */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_10:\n      tag_55\n      tag_61\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":289:324  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":480:511  bytes32 public DOMAIN_SEPARATOR */\n    tag_12:\n      tag_55\n      tag_65\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2382:2592  function initialize(address _token0, address _token1) external {\r... */\n    tag_13:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2382:2592  function initialize(address _token0, address _token1) external {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_68\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":962:994  uint public price0CumulativeLast */\n    tag_14:\n      tag_55\n      tag_70\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1001:1033  uint public price1CumulativeLast */\n    tag_15:\n      tag_55\n      tag_72\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5127:6367  function mint(address to) external lock returns (uint liquidity) {\r... */\n    tag_16:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5127:6367  function mint(address to) external lock returns (uint liquidity) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_75\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":362:403  mapping(address => uint) public balanceOf */\n    tag_17:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":362:403  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_78\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1040:1057  uint public kLast */\n    tag_18:\n      tag_55\n      tag_80\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":738:776  mapping(address => uint) public nonces */\n    tag_19:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":738:776  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6479:7945  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6479:7945  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_86\n      jump\t// in\n    tag_84:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":243:282  string public constant symbol = 'FVIVE' */\n    tag_21:\n      tag_42\n      tag_88\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2395:2534  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_22:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2395:2534  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_95\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":432:478  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_23:\n      tag_55\n      tag_97\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9995:10329  function skim(address to) external lock {\r... */\n    tag_24:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9995:10329  function skim(address to) external lock {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_100\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":582:604  address public factory */\n    tag_25:\n      tag_53\n      tag_102\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":639:660  address public token1 */\n    tag_26:\n      tag_53\n      tag_104\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_27:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_107\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":410:471  mapping(address => mapping(address => uint)) public allowance */\n    tag_28:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":410:471  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_110\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10378:10536  function sync() external lock {\r... */\n    tag_29:\n      tag_36\n      tag_112\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n    tag_41:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1221  unlocked */\n      sload(0x0c)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1225:1226  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1226  unlocked == 1 */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1205:1248  require(unlocked == 1, 'UniswapV2: LOCKED') */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x155b9a5cddd85c158c8e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1267  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1271  unlocked = 0 */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8171:8185  amount0Out > 0 */\n      dup5\n      iszero\n      iszero\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8171:8203  amount0Out > 0 || amount1Out > 0 */\n      tag_116\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8202:8203  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8189:8199  amount1Out */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8189:8203  amount1Out > 0 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8171:8203  amount0Out > 0 || amount1Out > 0 */\n    tag_116:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8163:8245  require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8257:8274  uint112 _reserve0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8276:8293  uint112 _reserve1 */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8298:8311  getReserves() */\n      tag_118\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8298:8309  getReserves */\n      tag_49\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8298:8311  getReserves() */\n      jump\t// in\n    tag_118:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8256:8311  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8358:8367  _reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8345:8367  amount0Out < _reserve0 */\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8345:8355  amount0Out */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8345:8367  amount0Out < _reserve0 */\n      lt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8345:8393  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8384:8393  _reserve1 */\n      dup1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8371:8393  amount1Out < _reserve1 */\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8371:8381  amount1Out */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8371:8393  amount1Out < _reserve1 */\n      lt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8345:8393  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_119:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8337:8431  require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY') */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3f354ef449b2a9b081220ce21f57691008110b653edc191d8288e60cef58bb5f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8576:8582  token0 */\n      sload(0x06)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8611:8617  token1 */\n      sload(0x07)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8444:8457  uint balance0 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8576:8582  token0 */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8611:8617  token1 */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8636:8649  to != _token0 */\n      dup10\n      and\n      dup3\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8636:8666  to != _token0 && to != _token1 */\n      tag_121\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8659:8666  _token1 */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8653:8666  to != _token1 */\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8653:8655  to */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8653:8666  to != _token1 */\n      and\n      eq\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8636:8666  to != _token0 && to != _token1 */\n    tag_121:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8628:8692  require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO') */\n      tag_122\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x556e697377617056323a20494e56414c49445f544f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_122:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8707:8721  amount0Out > 0 */\n      dup11\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8703:8761  if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out) */\n      tag_124\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8723:8761  _safeTransfer(_token0, to, amount0Out) */\n      tag_124\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8737:8744  _token0 */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8746:8748  to */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8750:8760  amount0Out */\n      dup14\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8723:8736  _safeTransfer */\n      tag_125\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8723:8761  _safeTransfer(_token0, to, amount0Out) */\n      jump\t// in\n    tag_124:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8810:8824  amount1Out > 0 */\n      dup10\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8806:8864  if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out) */\n      tag_127\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8826:8864  _safeTransfer(_token1, to, amount1Out) */\n      tag_127\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8840:8847  _token1 */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8849:8851  to */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8853:8863  amount1Out */\n      dup13\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8826:8839  _safeTransfer */\n      tag_125\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8826:8864  _safeTransfer(_token1, to, amount1Out) */\n      jump\t// in\n    tag_127:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8913:8928  data.length > 0 */\n      dup7\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8909:9006  if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data) */\n      tag_128\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8947:8949  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8930:8964  IUniswapV2Callee(to).uniswapV2Call */\n      and\n      0x10d1e85c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8965:8975  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8977:8987  amount0Out */\n      dup14\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8989:8999  amount1Out */\n      dup14\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9001:9005  data */\n      dup13\n      dup13\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8930:9006  IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8930:9006  IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_129:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8930:9006  IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8930:9006  IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8909:9006  if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data) */\n    tag_128:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9062:9066  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9053  IERC20(_token0).balanceOf */\n      dup5\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9053  IERC20(_token0).balanceOf */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_132:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_133:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9124:9128  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap6\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9115  IERC20(_token1).balanceOf */\n      dup4\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9028:9068  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9115  IERC20(_token1).balanceOf */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_134:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_136:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9090:9130  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap3\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9152:9166  uint amount0In */\n      0x00\n      swap2\n      pop\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9180:9202  _reserve0 - amount0Out */\n      dup6\n      and\n      dup11\n      swap1\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9169:9202  balance0 > _reserve0 - amount0Out */\n      dup4\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9169:9244  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      tag_137\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9243:9244  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9169:9244  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      jump(tag_138)\n    tag_137:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9229:9239  amount0Out */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9217:9226  _reserve0 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9217:9239  _reserve0 - amount0Out */\n      and\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9205:9213  balance0 */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9205:9240  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9169:9244  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n    tag_138:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9152:9244  uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9255:9269  uint amount1In */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9295:9305  amount1Out */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9283:9292  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9283:9305  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9272:9280  balance1 */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9272:9305  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9272:9347  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      tag_139\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9346:9347  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9272:9347  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      jump(tag_140)\n    tag_139:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9332:9342  amount1Out */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9320:9329  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9320:9342  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9308:9316  balance1 */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9308:9343  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9272:9347  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n    tag_140:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9255:9347  uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9378:9379  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9366:9375  amount0In */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9366:9379  amount0In > 0 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9366:9396  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9395:9396  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9383:9392  amount1In */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9383:9396  amount1In > 0 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9366:9396  amount0In > 0 || amount1In > 0 */\n    tag_141:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9358:9437  require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_10e2efc32d8a31d3b2c11a545b3ed09c2dbabc58ef6de4033929d0002e425b67\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9523:9544  uint balance0Adjusted */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9587  balance0.mul(1000).sub(amount0In.mul(3)) */\n      tag_143\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9570:9586  amount0In.mul(3) */\n      tag_144\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9570:9579  amount0In */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9584:9585  3 */\n      0x03\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9570:9586  amount0In.mul(3) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9570:9583  amount0In.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9570:9586  amount0In.mul(3) */\n      and\n      jump\t// in\n    tag_144:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9565  balance0.mul(1000) */\n      tag_146\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9555  balance0 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9560:9564  1000 */\n      0x03e8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9565  balance0.mul(1000) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9559  balance0.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9565  balance0.mul(1000) */\n      and\n      jump\t// in\n    tag_146:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9569  balance0.mul(1000).sub */\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9587  balance0.mul(1000).sub(amount0In.mul(3)) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9569  balance0.mul(1000).sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9547:9587  balance0.mul(1000).sub(amount0In.mul(3)) */\n      and\n      jump\t// in\n    tag_143:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9523:9587  uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3)) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9598:9619  uint balance1Adjusted */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9622:9662  balance1.mul(1000).sub(amount1In.mul(3)) */\n      tag_148\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9645:9661  amount1In.mul(3) */\n      tag_144\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9645:9654  amount1In */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9659:9660  3 */\n      0x03\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9645:9661  amount1In.mul(3) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9645:9658  amount1In.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9645:9661  amount1In.mul(3) */\n      and\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9622:9662  balance1.mul(1000).sub(amount1In.mul(3)) */\n    tag_148:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9598:9662  uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3)) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9766  uint(_reserve0).mul(_reserve1).mul(1000**2) */\n      tag_151\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9758:9765  1000**2 */\n      0x0f4240\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9753  uint(_reserve0).mul(_reserve1) */\n      tag_152\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9738  uint(_reserve0) */\n      dup12\n      dup2\n      and\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9753  uint(_reserve0).mul(_reserve1) */\n      dup12\n      and\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9742  uint(_reserve0).mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9753  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n    tag_152:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9757  uint(_reserve0).mul(_reserve1).mul */\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9766  uint(_reserve0).mul(_reserve1).mul(1000**2) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9757  uint(_reserve0).mul(_reserve1).mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9723:9766  uint(_reserve0).mul(_reserve1).mul(1000**2) */\n      and\n      jump\t// in\n    tag_151:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9681:9719  balance0Adjusted.mul(balance1Adjusted) */\n      tag_153\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9681:9697  balance0Adjusted */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9702:9718  balance1Adjusted */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9681:9719  balance0Adjusted.mul(balance1Adjusted) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9681:9701  balance0Adjusted.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9681:9719  balance0Adjusted.mul(balance1Adjusted) */\n      and\n      jump\t// in\n    tag_153:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9681:9766  balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2) */\n      lt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9673:9783  require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K') */\n      tag_154\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x556e697377617056323a204b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_154:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1282:1283  _ */\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9807:9856  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_155\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9815:9823  balance0 */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9825:9833  balance1 */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9835:9844  _reserve0 */\n      dup9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9846:9855  _reserve1 */\n      dup9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9807:9814  _update */\n      tag_156\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9807:9856  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_155:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9872:9938  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup14\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9877:9887  msg.sender */\n      caller\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9872:9938  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log3\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1305:1306  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1302  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1306  unlocked = 1 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":8057:9946  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\r... */\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:236  string public constant name = 'Fvive Token' */\n    tag_43:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xa9, 0x233b34bb32902a37b5b2b7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1322:1553  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\r... */\n    tag_49:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1455:1463  reserve0 */\n      sload(0x08)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap3\n      shl(0x70, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1486:1494  reserve1 */\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1527:1545  blockTimestampLast */\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1322:1553  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\r... */\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_52:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2304:2308  bool */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2321:2357  _approve(msg.sender, spender, value) */\n      tag_159\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2330:2340  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2342:2349  spender */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2351:2356  value */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2321:2329  _approve */\n      tag_160\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2321:2357  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_159:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2375:2379  true */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2240:2387  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_158:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":611:632  address public token0 */\n    tag_54:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":331:355  uint  public totalSupply */\n    tag_56:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      dup4\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2620:2624  bool */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2650  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2656  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2657:2667  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2668  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2641:2680  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2637:2777  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      tag_162\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2742  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2736  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2742  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2743:2753  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2754  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2765  allowance[from][msg.sender].sub(value) */\n      tag_163\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2759:2764  value */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2765  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2758  allowance[from][msg.sender].sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2727:2765  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2712  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2706  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2712  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2713:2723  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2724  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2697:2765  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2637:2777  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n    tag_162:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2787:2813  _transfer(from, to, value) */\n      tag_164\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2797:2801  from */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2803:2805  to */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2807:2812  value */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2787:2796  _transfer */\n      tag_165\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2787:2813  _transfer(from, to, value) */\n      jump\t// in\n    tag_164:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2831:2835  true */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2542:2843  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_61:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":289:324  uint8 public constant decimals = 18 */\n    tag_63:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":322:324  18 */\n      0x12\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":289:324  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":480:511  bytes32 public DOMAIN_SEPARATOR */\n    tag_65:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2382:2592  function initialize(address _token0, address _token1) external {\r... */\n    tag_68:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2478:2485  factory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2464:2474  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2464:2485  msg.sender == factory */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2456:2510  require(msg.sender == factory, 'UniswapV2: FORBIDDEN') */\n      tag_167\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x61, 0x2ab734b9bbb0b82b191d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_167:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2541:2547  token0 */\n      0x06\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2541:2557  token0 = _token0 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2568:2574  token1 */\n      0x07\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2568:2584  token1 = _token1 */\n      dup1\n      sload\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2382:2592  function initialize(address _token0, address _token1) external {\r... */\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":962:994  uint public price0CumulativeLast */\n    tag_70:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1001:1033  uint public price1CumulativeLast */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5127:6367  function mint(address to) external lock returns (uint liquidity) {\r... */\n    tag_75:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5176:5190  uint liquidity */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1221  unlocked */\n      sload(0x0c)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1225:1226  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1226  unlocked == 1 */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1205:1248  require(unlocked == 1, 'UniswapV2: LOCKED') */\n      tag_169\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x155b9a5cddd85c158c8e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_169:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1267  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1271  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5245:5258  getReserves() */\n      tag_171\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5245:5256  getReserves */\n      tag_49\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5245:5258  getReserves() */\n      jump\t// in\n    tag_171:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5307:5313  token0 */\n      sload(0x06)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5333:5337  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5203:5258  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5284:5297  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5307:5313  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5324  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5307:5313  token0 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_172:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_173:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_174:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5373:5379  token1 */\n      sload(0x07)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5399:5403  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5350:5363  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5373:5379  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5390  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5300:5339  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5373:5379  token1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_177:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5366:5405  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5416:5428  uint amount0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5431:5454  balance0.sub(_reserve0) */\n      tag_178\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5431:5439  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5431:5454  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5431:5443  balance0.sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5431:5454  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_178:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5416:5454  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5465:5477  uint amount1 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5480:5503  balance1.sub(_reserve1) */\n      tag_179\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5480:5488  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5480:5503  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5480:5492  balance1.sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5480:5503  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_179:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5465:5503  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5516:5526  bool feeOn */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5529:5559  _mintFee(_reserve0, _reserve1) */\n      tag_180\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5538:5547  _reserve0 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5549:5558  _reserve1 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5529:5537  _mintFee */\n      tag_181\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5529:5559  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_180:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5570:5587  uint _totalSupply */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5590:5601  totalSupply */\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5516:5559  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5694:5711  _totalSupply == 0 */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5690:6042  if (_totalSupply == 0) {\r... */\n      tag_182\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5740:5794  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_183\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":473:478  10**3 */\n      0x03e8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5740:5771  Math.sqrt(amount0.mul(amount1)) */\n      tag_146\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5750:5770  amount0.mul(amount1) */\n      tag_185\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5750:5757  amount0 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5762:5769  amount1 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5750:5770  amount0.mul(amount1) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5750:5761  amount0.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5750:5770  amount0.mul(amount1) */\n      and\n      jump\t// in\n    tag_185:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5740:5749  Math.sqrt */\n      tag_186\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5740:5771  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5740:5794  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_183:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5728:5794  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5808:5844  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_187\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5822:5823  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":473:478  10**3 */\n      0x03e8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5808:5813  _mint */\n      tag_188\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5808:5844  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_187:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5690:6042  if (_totalSupply == 0) {\r... */\n      jump(tag_189)\n    tag_182:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5944:6030  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      tag_190\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5990  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5978  amount0.mul(_totalSupply) */\n      tag_191\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5960  amount0 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5965:5977  _totalSupply */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5978  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5964  amount0.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5978  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_191:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5953:5990  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      div\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:6029  amount1.mul(_totalSupply) / _reserve1 */\n      dup10\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:6017  amount1.mul(_totalSupply) */\n      tag_193\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:5999  amount1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6004:6016  _totalSupply */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:6017  amount1.mul(_totalSupply) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:6003  amount1.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:6017  amount1.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_193:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5992:6029  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5944:5952  Math.min */\n      tag_195\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5944:6030  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      jump\t// in\n    tag_190:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5932:6030  liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      swap9\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5690:6042  if (_totalSupply == 0) {\r... */\n    tag_189:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6072:6073  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6060:6069  liquidity */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6060:6073  liquidity > 0 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6052:6118  require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6129:6149  _mint(to, liquidity) */\n      tag_197\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6135:6137  to */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6139:6148  liquidity */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6129:6134  _mint */\n      tag_188\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6129:6149  _mint(to, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6162:6211  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_198\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6170:6178  balance0 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6180:6188  balance1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6190:6199  _reserve0 */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6201:6210  _reserve1 */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6162:6169  _update */\n      tag_156\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6162:6211  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_198:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6226:6231  feeOn */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6222:6269  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_199\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6260:6268  reserve1 */\n      sload(0x08)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6241:6269  uint(reserve0).mul(reserve1) */\n      tag_200\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6246:6254  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6260:6268  reserve1 */\n      swap1\n      div\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6241:6269  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6241:6259  uint(reserve0).mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6241:6269  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_200:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6233:6238  kLast */\n      0x0b\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6233:6269  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6222:6269  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_199:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6325:6359  Mint(msg.sender, amount0, amount1) */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6330:6340  msg.sender */\n      caller\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6325:6359  Mint(msg.sender, amount0, amount1) */\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1305:1306  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1302  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1306  unlocked = 1 */\n      sstore\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":5127:6367  function mint(address to) external lock returns (uint liquidity) {\r... */\n      swap5\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":362:403  mapping(address => uint) public balanceOf */\n    tag_78:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1040:1057  uint public kLast */\n    tag_80:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":738:776  mapping(address => uint) public nonces */\n    tag_83:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6479:7945  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n    tag_86:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6528:6540  uint amount0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6542:6554  uint amount1 */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1221  unlocked */\n      sload(0x0c)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1225:1226  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1226  unlocked == 1 */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1205:1248  require(unlocked == 1, 'UniswapV2: LOCKED') */\n      tag_202\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x155b9a5cddd85c158c8e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_202:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1267  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1271  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6609:6622  getReserves() */\n      tag_204\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6609:6620  getReserves */\n      tag_49\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6609:6622  getReserves() */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6666:6672  token0 */\n      sload(0x06)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6747:6753  token1 */\n      sload(0x07)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6860:6864  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6567:6622  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      swap5\n      swap7\n      pop\n      swap3\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6666:6672  token0 */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6747:6753  token1 */\n      swap2\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6648:6663  address _token0 */\n      0x00\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6666:6672  token0 */\n      dup5\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6851  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6666:6672  token0 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6927:6931  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6877:6890  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6918  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6826:6866  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6918  IERC20(_token1).balanceOf */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6979:6983  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6944:6958  uint liquidity */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6961:6985  balanceOf[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6961:6970  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      0x20\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6961:6985  balanceOf[address(this)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6893:6933  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7011:7041  _mintFee(_reserve0, _reserve1) */\n      tag_211\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7020:7029  _reserve0 */\n      dup9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7031:7040  _reserve1 */\n      dup9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7011:7019  _mintFee */\n      tag_181\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7011:7041  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_211:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7052:7069  uint _totalSupply */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7072:7083  totalSupply */\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6998:7041  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7072:7083  totalSupply */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7182:7205  liquidity.mul(balance0) */\n      tag_212\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7182:7191  liquidity */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7196:7204  balance0 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7182:7205  liquidity.mul(balance0) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7182:7195  liquidity.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7182:7205  liquidity.mul(balance0) */\n      and\n      jump\t// in\n    tag_212:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7182:7220  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      div\n      swap11\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7315:7327  _totalSupply */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7289:7312  liquidity.mul(balance1) */\n      tag_214\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7289:7298  liquidity */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7303:7311  balance1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7289:7312  liquidity.mul(balance1) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7289:7302  liquidity.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7289:7312  liquidity.mul(balance1) */\n      and\n      jump\t// in\n    tag_214:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7289:7327  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7279:7327  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7404:7405  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7394:7401  amount0 */\n      dup12\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7394:7405  amount0 > 0 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7394:7420  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7419:7420  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7409:7416  amount1 */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7409:7420  amount1 > 0 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7394:7420  amount0 > 0 && amount1 > 0 */\n    tag_216:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7386:7465  require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_57ebfb4dd8b5082cdba0f23c17077e3b0ecb9782a51e0e9a15e9bc8c4b30c562\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7476:7507  _burn(address(this), liquidity) */\n      tag_218\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7490:7494  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7497:7506  liquidity */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7476:7481  _burn */\n      tag_219\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7476:7507  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_218:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7518:7553  _safeTransfer(_token0, to, amount0) */\n      tag_220\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7532:7539  _token0 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7541:7543  to */\n      dup14\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7545:7552  amount0 */\n      dup14\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7518:7531  _safeTransfer */\n      tag_125\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7518:7553  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_220:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7564:7599  _safeTransfer(_token1, to, amount1) */\n      tag_221\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7578:7585  _token1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7587:7589  to */\n      dup14\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7591:7598  amount1 */\n      dup13\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7564:7577  _safeTransfer */\n      tag_125\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7564:7599  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_221:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7655:7659  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7646  IERC20(_token0).balanceOf */\n      dup10\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7646  IERC20(_token0).balanceOf */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_222:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_223\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_223:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_224:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7717:7721  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap7\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7708  IERC20(_token1).balanceOf */\n      dup9\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7621:7661  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7708  IERC20(_token1).balanceOf */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_225\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_225:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_226:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_227:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7736:7785  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_228\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7744:7752  balance0 */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7683:7723  IERC20(_token1).balanceOf(address(this)) */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7764:7773  _reserve0 */\n      dup12\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7775:7784  _reserve1 */\n      dup12\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7736:7743  _update */\n      tag_156\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7736:7785  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_228:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7800:7805  feeOn */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7796:7843  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_229\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7834:7842  reserve1 */\n      sload(0x08)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7815:7843  uint(reserve0).mul(reserve1) */\n      tag_230\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7820:7828  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7834:7842  reserve1 */\n      swap1\n      div\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7815:7843  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7815:7833  uint(reserve0).mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7815:7843  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_230:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7807:7812  kLast */\n      0x0b\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7807:7843  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7796:7843  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_229:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7899:7937  Burn(msg.sender, amount0, amount1, to) */\n      0x40\n      dup1\n      mload\n      dup13\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup16\n      and\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7904:7914  msg.sender */\n      caller\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":7899:7937  Burn(msg.sender, amount0, amount1, to) */\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1282:1283  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1305:1306  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1302  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1306  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":6479:7945  function burn(address to) external lock returns (uint amount0, uint amount1) {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":243:282  string public constant symbol = 'FVIVE' */\n    tag_88:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x4656495645)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2395:2534  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_95:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2455:2459  bool */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2472:2504  _transfer(msg.sender, to, value) */\n      tag_159\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2482:2492  msg.sender */\n      caller\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2494:2496  to */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2498:2503  value */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2472:2481  _transfer */\n      tag_165\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2472:2504  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":432:478  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_97:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":473:478  10**3 */\n      0x03e8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":432:478  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9995:10329  function skim(address to) external lock {\r... */\n    tag_100:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1221  unlocked */\n      sload(0x0c)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1225:1226  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1226  unlocked == 1 */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1205:1248  require(unlocked == 1, 'UniswapV2: LOCKED') */\n      tag_234\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x155b9a5cddd85c158c8e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_234:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1267  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1271  unlocked = 0 */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10064:10070  token0 */\n      sload(0x06)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10114:10120  token1 */\n      sload(0x07)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10218:10226  reserve0 */\n      sload(0x08)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10207:10211  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10064:10070  token0 */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10114:10120  token1 */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10146:10228  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      tag_236\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10064:10070  token0 */\n      dup6\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10169:10171  to */\n      dup8\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10227  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_237\n      swap3\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10218:10226  reserve0 */\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10064:10070  token0 */\n      dup6\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10198  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10064:10070  token0 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_238:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_239\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_239:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_240\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_240:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10213  IERC20(_token0).balanceOf(address(this)) */\n      mload\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10227  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10217  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10173:10227  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      and\n      jump\t// in\n    tag_237:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10146:10159  _safeTransfer */\n      tag_125\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10146:10228  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      jump\t// in\n    tag_236:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10311:10319  reserve1 */\n      sload(0x08)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10306  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10300:10304  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10306  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10239:10321  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      tag_241\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10253:10260  _token1 */\n      dup5\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10262:10264  to */\n      dup8\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10320  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_237\n      swap3\n      shl(0x70, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10311:10319  reserve1 */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10291  IERC20(_token1).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10306  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10291  IERC20(_token1).balanceOf */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10266:10306  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10239:10321  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n    tag_241:\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1305:1306  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1302  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1306  unlocked = 1 */\n      sstore\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":9995:10329  function skim(address to) external lock {\r... */\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":582:604  address public factory */\n    tag_102:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":639:660  address public token1 */\n    tag_104:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_107:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2997:3012  block.timestamp */\n      timestamp\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2985:2993  deadline */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2985:3012  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2977:3035  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_247\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x155b9a5cddd85c158c8e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_247:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3151:3167  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3260  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3046:3060  bytes32 digest */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3260  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3253  nonces */\n      0x04\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3260  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3262  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3196:3273  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3196:3273  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3196:3273  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3186:3274  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3087:3289  abi.encodePacked(\r... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3087:3289  abi.encodePacked(\r... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3063:3300  keccak256(\r... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3046:3060  bytes32 digest */\n      swap2\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3262  nonces[owner]++ */\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3247:3262  nonces[owner]++ */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_248:\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3338:3364  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3383:3413  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3383:3442  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_249\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3437:3442  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3417:3442  recoveredAddress == owner */\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3417:3433  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3417:3442  recoveredAddress == owner */\n      and\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3383:3442  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_249:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3375:3475  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_250\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_250:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3486:3517  _approve(owner, spender, value) */\n      tag_251\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3495:3500  owner */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3502:3509  spender */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3511:3516  value */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3486:3494  _approve */\n      tag_160\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3486:3517  _approve(owner, spender, value) */\n      jump\t// in\n    tag_251:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2851:3525  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":410:471  mapping(address => mapping(address => uint)) public allowance */\n    tag_110:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10378:10536  function sync() external lock {\r... */\n    tag_112:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1221  unlocked */\n      sload(0x0c)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1225:1226  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1213:1226  unlocked == 1 */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1205:1248  require(unlocked == 1, 'UniswapV2: LOCKED') */\n      tag_253\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x155b9a5cddd85c158c8e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_253:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1270:1271  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1267  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1259:1271  unlocked = 0 */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10434:10440  token0 */\n      sload(0x06)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10460:10464  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10419:10528  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      tag_255\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10434:10440  token0 */\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10451  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10434:10440  token0 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_256\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_256:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_257:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_258:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10475:10481  token1 */\n      sload(0x07)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10501:10505  this */\n      address\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10475:10481  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10492  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10427:10466  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10475:10481  token1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_260\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_260:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_261:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10468:10507  IERC20(token1).balanceOf(address(this)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10509:10517  reserve0 */\n      sload(0x08)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10519:10527  reserve1 */\n      swap1\n      div\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10419:10426  _update */\n      tag_156\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10419:10528  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      jump\t// in\n    tag_255:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1305:1306  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1302  unlocked */\n      0x0c\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1294:1306  unlocked = 1 */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":10378:10536  function sync() external lock {\r... */\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1561:1848  function _safeTransfer(address token, address to, uint value) private {\r... */\n    tag_125:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":537:571  bytes('transfer(address,uint256)') */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1689:1732  abi.encodeWithSelector(SELECTOR, to, value) */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1689:1732  abi.encodeWithSelector(SELECTOR, to, value) */\n      0x64\n      swap1\n      swap3\n      add\n      dup5\n      mstore\n        /* \"--CODEGEN--\":25:43   */\n      swap2\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1678:1733  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap3\n      mload\n      dup2\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1643:1655  bool success */\n      0x00\n      swap5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1657:1674  bytes memory data */\n      0x60\n      swap5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1678:1688  token.call */\n      dup10\n      and\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1689:1732  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1678:1733  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"--CODEGEN--\":25:43   */\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1678:1733  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      dup1\n      dup4\n        /* \"--CODEGEN--\":25:43   */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_263:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_263)\n    tag_265:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1678:1733  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_266)\n        /* \"--CODEGEN--\":16:47   */\n    tag_267:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_266:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1642:1733  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1752:1759  success */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1752:1809  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_269\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1764:1775  data.length */\n      dup1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1764:1780  data.length == 0 */\n      iszero\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1764:1808  data.length == 0 || abi.decode(data, (bool)) */\n      tag_269\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1795:1799  data */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1784:1808  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_270\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_270:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1784:1808  abi.decode(data, (bool)) */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1764:1808  data.length == 0 || abi.decode(data, (bool)) */\n    tag_269:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1744:1840  require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED') */\n      tag_271\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x556e697377617056323a205452414e534645525f4641494c4544000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_271:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":1561:1848  function _safeTransfer(address token, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":434:576  function mul(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_145:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":486:492  uint z */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":513:519  y == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":513:543  y == 0 || (z = x * y) / y == x */\n      tag_273\n      jumpi\n      pop\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":528:533  x * y */\n      dup1\n      dup3\n      mul\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":542:543  x */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":537:538  y */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":528:533  x * y */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":537:538  y */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":523:538  (z = x * y) / y */\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":523:543  (z = x * y) / y == x */\n      eq\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":513:543  y == 0 || (z = x * y) / y == x */\n    tag_273:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":505:568  require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow') */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6d756c2d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":297:426  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_147:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":381:386  x - y */\n      dup1\n      dup3\n      sub\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":376:392  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":368:418  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2677:3537  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\r... */\n    tag_156:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2789:2812  balance0 <= uint112(-1) */\n      dup5\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2789:2839  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      tag_279\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2816:2839  balance1 <= uint112(-1) */\n      dup4\n      gt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2789:2839  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_279:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2781:2863  require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW') */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x556e697377617056323a204f564552464c4f57)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2978:2996  blockTimestampLast */\n      sload(0x08)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2905:2928  block.timestamp % 2**32 */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2905:2920  block.timestamp */\n      timestamp\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2905:2928  block.timestamp % 2**32 */\n      dup2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2978:2996  blockTimestampLast */\n      swap1\n      div\n      dup2\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2961:2996  blockTimestamp - blockTimestampLast */\n      dup3\n      sub\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3034:3049  timeElapsed > 0 */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3034:3067  timeElapsed > 0 && _reserve0 != 0 */\n      tag_282\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3053:3067  _reserve0 != 0 */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3034:3067  timeElapsed > 0 && _reserve0 != 0 */\n    tag_282:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3034:3085  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3071:3085  _reserve1 != 0 */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3034:3085  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_283:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3030:3366  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\r... */\n      iszero\n      tag_284\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3240:3251  timeElapsed */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3187:3251  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      0xffffffff\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3236  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_285\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3226:3235  _reserve0 */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3219  UQ112x112.encode(_reserve1) */\n      tag_286\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3209:3218  _reserve1 */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3208  UQ112x112.encode */\n      tag_287\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3219  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_286:\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3225  UQ112x112.encode(_reserve1).uqdiv */\n      and\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3236  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3225  UQ112x112.encode(_reserve1).uqdiv */\n      tag_288\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3192:3236  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      and\n      jump\t// in\n    tag_285:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3163:3183  price0CumulativeLast */\n      0x09\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3163:3251  price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3187:3237  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3187:3251  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3163:3251  price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      add\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3290:3354  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      0xffffffff\n      dup2\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3295:3339  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_289\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3329:3338  _reserve1 */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3295:3322  UQ112x112.encode(_reserve0) */\n      tag_286\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3312:3321  _reserve0 */\n      dup8\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3295:3311  UQ112x112.encode */\n      tag_287\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3295:3322  UQ112x112.encode(_reserve0) */\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3295:3339  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n    tag_289:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3266:3286  price1CumulativeLast */\n      0x0a\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3266:3354  price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3290:3340  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3290:3354  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3266:3354  price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      add\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3030:3366  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\r... */\n    tag_284:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3376:3384  reserve0 */\n      0x08\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3376:3404  reserve0 = uint112(balance0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffff)\n      and\n      sub(shl(0x70, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      not(shl(0x70, 0xffffffffffffffffffffffffffff))\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3415:3443  reserve1 = uint112(balance1) */\n      and\n      shl(0x70, 0x01)\n      dup9\n      dup4\n      and\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3454:3489  blockTimestampLast = blockTimestamp */\n      and\n      shl(0xe0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3505:3529  Sync(reserve0, reserve1) */\n      0x40\n      dup1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3510:3518  reserve0 */\n      dup5\n      dup5\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3505:3529  Sync(reserve0, reserve1) */\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3520:3528  reserve1 */\n      swap2\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3505:3529  Sync(reserve0, reserve1) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":2677:3537  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1835:2004  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1932  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1925  allowance */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1932  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1941  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1916:1949  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1965:1996  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1835:2004  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2012:2232  function _transfer(address from, address to, uint value) private {\r... */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2121  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2115  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2121  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2132  balanceOf[from].sub(value) */\n      tag_293\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2126:2131  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2132  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2125  balanceOf[from].sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2106:2132  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2103  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2097  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2103  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2088:2132  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2172  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2183  balanceOf[to].add(value) */\n      tag_294\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2177:2182  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2183  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2176  balanceOf[to].add */\n      tag_295\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2159:2183  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2156  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2152  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2156  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2183  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2199:2224  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2143:2156  balanceOf[to] */\n      swap2\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2199:2224  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2012:2232  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3627:5015  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\r... */\n    tag_181:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3700:3710  bool feeOn */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3723:3736  address feeTo */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3757:3764  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3771  IUniswapV2Factory(factory).feeTo */\n      and\n      0x017e7e58\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3773  IUniswapV2Factory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_297\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_297:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3773  IUniswapV2Factory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_298\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_298:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3773  IUniswapV2Factory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_299\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_299:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3773  IUniswapV2Factory(factory).feeTo() */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3824:3831  factory */\n      sload(0x05)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      0x40\n      dup1\n      mload\n      shl(0xe4, 0x0cf8e9a7)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3773  IUniswapV2Factory(factory).feeTo() */\n      swap3\n      swap4\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3784:3803  address feeToGrowth */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3824:3831  factory */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3844  IUniswapV2Factory(factory).feeToGrowth */\n      0xcf8e9a70\n      swap2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3739:3773  IUniswapV2Factory(factory).feeTo() */\n      0x20\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3824:3831  factory */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_300\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_300:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_301\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_301:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_302\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_302:\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3909:3914  kLast */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3865:3884  feeTo != address(0) */\n      dup5\n      and\n      iszero\n      dup1\n      iszero\n      swap6\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3806:3846  IUniswapV2Factory(factory).feeToGrowth() */\n      swap2\n      swap3\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3909:3914  kLast */\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3940:5008  if (feeOn) {\r... */\n      tag_303\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3970:3981  _kLast != 0 */\n      dup1\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3966:4938  if (_kLast != 0) {\r... */\n      tag_304\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4002:4012  uint rootK */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4015:4056  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_305\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4025:4055  uint(_reserve0).mul(_reserve1) */\n      tag_185\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4025:4040  uint(_reserve0) */\n      dup10\n      dup2\n      and\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4025:4055  uint(_reserve0).mul(_reserve1) */\n      dup10\n      and\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4025:4044  uint(_reserve0).mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4025:4055  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4015:4056  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n    tag_305:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4002:4056  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4075:4089  uint rootKLast */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4092:4109  Math.sqrt(_kLast) */\n      tag_307\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4102:4108  _kLast */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4092:4101  Math.sqrt */\n      tag_186\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4092:4109  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_307:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4075:4109  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4140:4149  rootKLast */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4132:4137  rootK */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4132:4149  rootK > rootKLast */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4128:4923  if (rootK > rootKLast) {\r... */\n      iszero\n      tag_308\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4174:4188  uint numerator */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4191:4228  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_309\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4207:4227  rootK.sub(rootKLast) */\n      tag_310\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4207:4212  rootK */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4217:4226  rootKLast */\n      dup5\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4207:4227  rootK.sub(rootKLast) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4207:4216  rootK.sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4207:4227  rootK.sub(rootKLast) */\n      and\n      jump\t// in\n    tag_310:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4191:4202  totalSupply */\n      sload(0x00)\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4191:4228  totalSupply.mul(rootK.sub(rootKLast)) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4191:4206  totalSupply.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4191:4228  totalSupply.mul(rootK.sub(rootKLast)) */\n      and\n      jump\t// in\n    tag_309:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4174:4228  uint numerator = totalSupply.mul(rootK.sub(rootKLast)) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4251:4267  uint denominator */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4297  rootK.mul(5).add(rootKLast) */\n      tag_311\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4287:4296  rootKLast */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4282  rootK.mul(5) */\n      tag_312\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4275  rootK */\n      dup7\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4280:4281  5 */\n      0x05\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4282  rootK.mul(5) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4279  rootK.mul */\n      tag_145\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4282  rootK.mul(5) */\n      and\n      jump\t// in\n    tag_312:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4286  rootK.mul(5).add */\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4297  rootK.mul(5).add(rootKLast) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4286  rootK.mul(5).add */\n      tag_295\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4270:4297  rootK.mul(5).add(rootKLast) */\n      and\n      jump\t// in\n    tag_311:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4251:4297  uint denominator = rootK.mul(5).add(rootKLast) */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4320:4334  uint liquidity */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4349:4360  denominator */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4337:4346  numerator */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4337:4360  numerator / denominator */\n      dup2\n      tag_313\n      jumpi\n      invalid\n    tag_313:\n      div\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4387:4400  liquidity > 0 */\n      dup1\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4383:4904  if (liquidity > 0) {\r... */\n      tag_317\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4433:4458  feeToGrowth == address(0) */\n      dup8\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4429:4881  if (feeToGrowth == address(0)) {\r... */\n      tag_315\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4491:4514  _mint(feeTo, liquidity) */\n      tag_316\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4497:4502  feeTo */\n      dup9\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4504:4513  liquidity */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4491:4496  _mint */\n      tag_188\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4491:4514  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_316:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4429:4881  if (feeToGrowth == address(0)) {\r... */\n      jump(tag_317)\n    tag_315:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4604:4627  uint liquidity_protocol */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4643:4644  5 */\n      0x05\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4631:4640  liquidity */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4631:4644  liquidity / 5 */\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4648:4649  3 */\n      0x03\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4630:4649  (liquidity / 5) * 3 */\n      mul\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4604:4649  uint liquidity_protocol = (liquidity / 5) * 3 */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4680:4701  uint liquidity_growth */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4717:4718  5 */\n      0x05\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4705:4714  liquidity */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4705:4718  liquidity / 5 */\n      dup2\n      tag_319\n      jumpi\n      invalid\n    tag_319:\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4722:4723  2 */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4704:4723  (liquidity / 5) * 2 */\n      mul\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4680:4723  uint liquidity_growth = (liquidity / 5) * 2 */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4754:4786  _mint(feeTo, liquidity_protocol) */\n      tag_320\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4760:4765  feeTo */\n      dup11\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4767:4785  liquidity_protocol */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4754:4759  _mint */\n      tag_188\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4754:4786  _mint(feeTo, liquidity_protocol) */\n      jump\t// in\n    tag_320:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4817:4853  _mint(feeToGrowth, liquidity_growth) */\n      tag_321\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4823:4834  feeToGrowth */\n      dup10\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4836:4852  liquidity_growth */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4817:4822  _mint */\n      tag_188\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4817:4853  _mint(feeToGrowth, liquidity_growth) */\n      jump\t// in\n    tag_321:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4429:4881  if (feeToGrowth == address(0)) {\r... */\n      pop\n      pop\n    tag_317:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4128:4923  if (rootK > rootKLast) {\r... */\n      pop\n      pop\n      pop\n    tag_308:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3966:4938  if (_kLast != 0) {\r... */\n      pop\n      pop\n    tag_304:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3940:5008  if (feeOn) {\r... */\n      jump(tag_323)\n    tag_303:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4959:4970  _kLast != 0 */\n      dup1\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4955:5008  if (_kLast != 0) {\r... */\n      tag_323\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4995:4996  0 */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4987:4992  kLast */\n      0x0b\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4987:4996  kLast = 0 */\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":4955:5008  if (_kLast != 0) {\r... */\n    tag_323:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":3627:5015  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\r... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":317:620  function sqrt(uint y) internal pure returns (uint z) {\r... */\n    tag_186:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":362:368  uint z */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":389:390  3 */\n      0x03\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":385:386  y */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":385:390  y > 3 */\n      gt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":381:613  if (y > 3) {\r... */\n      iszero\n      tag_325\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":411:412  y */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":444:445  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":440:441  2 */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":436:441  y / 2 */\n      dup3\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":436:445  y / 2 + 1 */\n      add\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":460:552  while (x < z) {\r... */\n    tag_327:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":471:472  z */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":467:468  x */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":467:472  x < z */\n      lt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":460:552  while (x < z) {\r... */\n      iszero\n      tag_328\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":497:498  x */\n      dup1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":493:498  z = x */\n      swap2\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":535:536  2 */\n      0x02\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":530:531  x */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":526:527  x */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":522:523  y */\n      dup6\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":522:527  y / x */\n      dup2\n      tag_329\n      jumpi\n      invalid\n    tag_329:\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":522:531  y / x + x */\n      add\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":521:536  (y / x + x) / 2 */\n      dup2\n      tag_330\n      jumpi\n      invalid\n    tag_330:\n      div\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":517:536  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":460:552  while (x < z) {\r... */\n      jump(tag_327)\n    tag_328:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":381:613  if (y > 3) {\r... */\n      pop\n      jump(tag_332)\n    tag_325:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":573:579  y != 0 */\n      dup2\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":569:613  if (y != 0) {\r... */\n      tag_332\n      jumpi\n      pop\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":600:601  1 */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":569:613  if (y != 0) {\r... */\n    tag_332:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":317:620  function sqrt(uint y) internal pure returns (uint z) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1409:1610  function _mint(address to, uint value) internal {\r... */\n    tag_188:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1482:1493  totalSupply */\n      sload(0x00)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1482:1504  totalSupply.add(value) */\n      tag_334\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1498:1503  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1482:1504  totalSupply.add(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1482:1497  totalSupply.add */\n      tag_295\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1482:1504  totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_334:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1468:1479  totalSupply */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1468:1504  totalSupply = totalSupply.add(value) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1544  balanceOf[to] */\n      dup4\n      and\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1540  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1544  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1555  balanceOf[to].add(value) */\n      tag_335\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1549:1554  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1555  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1548  balanceOf[to].add */\n      tag_295\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1531:1555  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1515:1528  balanceOf[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1515:1524  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1515:1528  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1515:1555  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1571:1602  Transfer(address(0), to, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1515:1528  balanceOf[to] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1571:1602  Transfer(address(0), to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1409:1610  function _mint(address to, uint value) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":103:199  function min(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_195:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":155:161  uint z */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":182:183  y */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":178:179  x */\n      dup4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":178:183  x < y */\n      lt\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":178:191  x < y ? x : y */\n      tag_337\n      jumpi\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":190:191  y */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":178:191  x < y ? x : y */\n      jump(tag_338)\n    tag_337:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":186:187  x */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":178:191  x < y ? x : y */\n    tag_338:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":174:191  z = x < y ? x : y */\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":103:199  function min(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1618:1827  function _burn(address from, uint value) internal {\r... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1712  balanceOf[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1706  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1712  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1723  balanceOf[from].sub(value) */\n      tag_340\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1717:1722  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1723  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1716  balanceOf[from].sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1697:1723  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1679:1694  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1679:1688  balanceOf */\n      0x01\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1679:1694  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1679:1723  balanceOf[from] = balanceOf[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1748:1759  totalSupply */\n      sload\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1748:1770  totalSupply.sub(value) */\n      tag_341\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1764:1769  value */\n      dup3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1748:1770  totalSupply.sub(value) */\n      0xffffffff\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1748:1763  totalSupply.sub */\n      tag_147\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1748:1770  totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_341:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1734:1745  totalSupply */\n      0x00\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1734:1770  totalSupply = totalSupply.sub(value) */\n      swap1\n      dup2\n      sstore\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1786:1819  Transfer(from, address(0), value) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1618:1827  function _burn(address from, uint value) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":294:414  function encode(uint112 y) internal pure returns (uint224 z) {\r... */\n    tag_287:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":370:380  uint224(y) */\n      and\n      shl(0x70, 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":370:387  uint224(y) * Q112 */\n      mul\n      swap1\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":294:414  function encode(uint112 y) internal pure returns (uint224 z) {\r... */\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":485:593  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\r... */\n    tag_288:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":545:554  uint224 z */\n      0x00\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":575:585  uint224(y) */\n      dup3\n      and\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":571:585  x / uint224(y) */\n      dup5\n      and\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":575:585  uint224(y) */\n      dup2\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":571:585  x / uint224(y) */\n      tag_344\n      jumpi\n      invalid\n    tag_344:\n      div\n      swap4\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":485:593  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":161:289  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_295:\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":245:250  x + y */\n      dup1\n      dup3\n      add\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":240:256  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":232:281  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_158\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83 556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_10e2efc32d8a31d3b2c11a545b3ed09c2dbabc58ef6de4033929d0002e425b67 556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_3f354ef449b2a9b081220ce21f57691008110b653edc191d8288e60cef58bb5f 556e697377617056323a20494e53554646494349454e545f4c4951554944495459\n    data_57ebfb4dd8b5082cdba0f23c17077e3b0ecb9782a51e0e9a15e9bc8c4b30c562 556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e 556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a72315820dcfdf34dd91037db0e840d0815833cc3e14dc49fc793576f2879438e52babac264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001600c5534801561001557600080fd5b5060405146908060526124468239604080519182900360520182208282018252600b83526a233b34bb32902a37b5b2b760a91b6020938401528151808301835260018152603160f81b908401528151808401919091527f0dd2b0c3ae82cd452ec4523efbf188d2aa2ead0a653fbc87a1ab70af7fc7fc29818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c09094019052825192019190912060035550600580546001600160a01b03191633179055612340806101066000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610534578063d505accf1461053c578063dd62ed3e1461058d578063fff6cae9146105bb576101a9565b8063ba9a7a56146104fe578063bc25cf7714610506578063c45a01551461052c576101a9565b80637ecebe00116100d35780637ecebe001461046557806389afcb441461048b57806395d89b41146104ca578063a9059cbb146104d2576101a9565b80636a6278421461041157806370a08231146104375780637464fc3d1461045d576101a9565b806323b872dd116101665780633644e515116101405780633644e515146103cb578063485cc955146103d35780635909c0d5146104015780635a3d549314610409576101a9565b806323b872dd1461036f57806330adf81f146103a5578063313ce567146103ad576101a9565b8063022c0d9f146101ae57806306fdde031461023c5780630902f1ac146102b9578063095ea7b3146102f15780630dfe16811461033157806318160ddd14610355575b600080fd5b61023a600480360360808110156101c457600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156101fb57600080fd5b82018360208201111561020d57600080fd5b8035906020019184600183028401116401000000008311171561022f57600080fd5b5090925090506105c3565b005b610244610afe565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027e578181015183820152602001610266565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c1610b25565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61031d6004803603604081101561030757600080fd5b506001600160a01b038135169060200135610b4f565b604080519115158252519081900360200190f35b610339610b66565b604080516001600160a01b039092168252519081900360200190f35b61035d610b75565b60408051918252519081900360200190f35b61031d6004803603606081101561038557600080fd5b506001600160a01b03813581169160208101359091169060400135610b7b565b61035d610c15565b6103b5610c39565b6040805160ff9092168252519081900360200190f35b61035d610c3e565b61023a600480360360408110156103e957600080fd5b506001600160a01b0381358116916020013516610c44565b61035d610cc8565b61035d610cce565b61035d6004803603602081101561042757600080fd5b50356001600160a01b0316610cd4565b61035d6004803603602081101561044d57600080fd5b50356001600160a01b0316610fd4565b61035d610fe6565b61035d6004803603602081101561047b57600080fd5b50356001600160a01b0316610fec565b6104b1600480360360208110156104a157600080fd5b50356001600160a01b0316610ffe565b6040805192835260208301919091528051918290030190f35b6102446113a4565b61031d600480360360408110156104e857600080fd5b506001600160a01b0381351690602001356113c5565b61035d6113d2565b61023a6004803603602081101561051c57600080fd5b50356001600160a01b03166113d8565b610339611543565b610339611552565b61023a600480360360e081101561055257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611561565b61035d600480360360408110156105a357600080fd5b506001600160a01b0381358116916020013516611763565b61023a611780565b600c5460011461060e576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55841515806106215750600084115b61065c5760405162461bcd60e51b81526004018080602001828103825260258152602001806122526025913960400191505060405180910390fd5b600080610667610b25565b5091509150816001600160701b03168710801561068c5750806001600160701b031686105b6106c75760405162461bcd60e51b815260040180806020018281038252602181526020018061229b6021913960400191505060405180910390fd5b60065460075460009182916001600160a01b039182169190811690891682148015906107055750806001600160a01b0316896001600160a01b031614155b61074e576040805162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015290519081900360640190fd5b8a1561075f5761075f828a8d6118e2565b891561077057610770818a8c6118e2565b861561082b57886001600160a01b03166310d1e85c338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561081257600080fd5b505af1158015610826573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d602081101561089b57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d602081101561091157600080fd5b5051925060009150506001600160701b0385168a90038311610934576000610943565b89856001600160701b03160383035b9050600089856001600160701b031603831161096057600061096f565b89856001600160701b03160383035b905060008211806109805750600081115b6109bb5760405162461bcd60e51b81526004018080602001828103825260248152602001806122776024913960400191505060405180910390fd5b60006109ef6109d184600363ffffffff611a7c16565b6109e3876103e863ffffffff611a7c16565b9063ffffffff611adf16565b90506000610a076109d184600363ffffffff611a7c16565b9050610a38620f4240610a2c6001600160701b038b8116908b1663ffffffff611a7c16565b9063ffffffff611a7c16565b610a48838363ffffffff611a7c16565b1015610a8a576040805162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015290519081900360640190fd5b5050610a9884848888611b2f565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600b81526020016a233b34bb32902a37b5b2b760a91b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610b5c338484611cf4565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610c00576001600160a01b0384166000908152600260209081526040808320338452909152902054610bdb908363ffffffff611adf16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c0b848484611d56565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610c9a576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610d21576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580610d31610b25565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d8557600080fd5b505afa158015610d99573d6000803e3d6000fd5b505050506040513d6020811015610daf57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e0257600080fd5b505afa158015610e16573d6000803e3d6000fd5b505050506040513d6020811015610e2c57600080fd5b505190506000610e4b836001600160701b03871663ffffffff611adf16565b90506000610e68836001600160701b03871663ffffffff611adf16565b90506000610e768787611e10565b60005490915080610eb357610e9f6103e86109e3610e9a878763ffffffff611a7c16565b61202d565b9850610eae60006103e861207f565b610f02565b610eff6001600160701b038916610ed0868463ffffffff611a7c16565b81610ed757fe5b046001600160701b038916610ef2868563ffffffff611a7c16565b81610ef957fe5b04612115565b98505b60008911610f415760405162461bcd60e51b81526004018080602001828103825260288152602001806122e46028913960400191505060405180910390fd5b610f4b8a8a61207f565b610f5786868a8a611b2f565b8115610f8757600854610f83906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c5460011461104c576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c8190558061105c610b25565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156110b857600080fd5b505afa1580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561113057600080fd5b505afa158015611144573d6000803e3d6000fd5b505050506040513d602081101561115a57600080fd5b5051306000908152600160205260408120549192506111798888611e10565b60005490915080611190848763ffffffff611a7c16565b8161119757fe5b049a50806111ab848663ffffffff611a7c16565b816111b257fe5b04995060008b1180156111c5575060008a115b6112005760405162461bcd60e51b81526004018080602001828103825260288152602001806122bc6028913960400191505060405180910390fd5b61120a308461212d565b611215878d8d6118e2565b611220868d8c6118e2565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561126657600080fd5b505afa15801561127a573d6000803e3d6000fd5b505050506040513d602081101561129057600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156112dc57600080fd5b505afa1580156112f0573d6000803e3d6000fd5b505050506040513d602081101561130657600080fd5b5051935061131685858b8b611b2f565b811561134657600854611342906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b60405180604001604052806005815260200164465649564560d81b81525081565b6000610b5c338484611d56565b6103e881565b600c54600114611423576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926114d292859287926114cd926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b50519063ffffffff611adf16565b6118e2565b600854604080516370a0823160e01b8152306004820152905161153992849287926114cd92600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b428410156115ab576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156116c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116fc5750886001600160a01b0316816001600160a01b0316145b61174d576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b611758898989611cf4565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146117cb576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516118db926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561181c57600080fd5b505afa158015611830573d6000803e3d6000fd5b505050506040513d602081101561184657600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561189357600080fd5b505afa1580156118a7573d6000803e3d6000fd5b505050506040513d60208110156118bd57600080fd5b50516008546001600160701b0380821691600160701b900416611b2f565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b6020831061198f5780518252601f199092019160209182019101611970565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119f1576040519150601f19603f3d011682016040523d82523d6000602084013e6119f6565b606091505b5091509150818015611a24575080511580611a245750808060200190516020811015611a2157600080fd5b50515b611a75576040805162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c4544000000000000604482015290519081900360640190fd5b5050505050565b6000811580611a9757505080820282828281611a9457fe5b04145b610b60576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610b60576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611b4d57506001600160701b038311155b611b94576040805162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611bc457506001600160701b03841615155b8015611bd857506001600160701b03831615155b15611c49578063ffffffff16611c0685611bf1866121cb565b6001600160e01b03169063ffffffff6121dd16565b600980546001600160e01b03929092169290920201905563ffffffff8116611c3184611bf1876121cb565b600a80546001600160e01b0392909216929092020190555b600880546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611d7f908263ffffffff611adf16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611db4908263ffffffff61220216565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6157600080fd5b505afa158015611e75573d6000803e3d6000fd5b505050506040513d6020811015611e8b57600080fd5b505160055460408051630cf8e9a760e41b815290519293506000926001600160a01b039092169163cf8e9a7091600480820192602092909190829003018186803b158015611ed857600080fd5b505afa158015611eec573d6000803e3d6000fd5b505050506040513d6020811015611f0257600080fd5b5051600b546001600160a01b038416158015955091925090612018578015612013576000611f45610e9a6001600160701b0389811690891663ffffffff611a7c16565b90506000611f528361202d565b905080821115612010576000611f80611f71848463ffffffff611adf16565b6000549063ffffffff611a7c16565b90506000611fa583611f9986600563ffffffff611a7c16565b9063ffffffff61220216565b90506000818381611fb257fe5b049050801561200c576001600160a01b038716611fd857611fd3888261207f565b61200c565b6000600582046003029050600060058381611fef57fe5b046002029050611fff8a8361207f565b612009898261207f565b50505b5050505b50505b612024565b8015612024576000600b555b50505092915050565b60006003821115612070575080600160028204015b8181101561206a5780915060028182858161205957fe5b04018161206257fe5b049050612042565b5061207a565b811561207a575060015b919050565b600054612092908263ffffffff61220216565b60009081556001600160a01b0383168152600160205260409020546120bd908263ffffffff61220216565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183106121245781612126565b825b9392505050565b6001600160a01b038216600090815260016020526040902054612156908263ffffffff611adf16565b6001600160a01b03831660009081526001602052604081209190915554612183908263ffffffff611adf16565b60009081556040805183815290516001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b038416816121fa57fe5b049392505050565b80820182811015610b60576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c4951554944495459556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820dcfdf34dd91037db0e840d0815833cc3e14dc49fc793576f2879438e52babac264736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x2446 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP4 MSTORE PUSH11 0x233B34BB32902A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDD2B0C3AE82CD452EC4523EFBF188D2AA2EAD0A653FBC87A1AB70AF7FC7FC29 DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2340 DUP1 PUSH2 0x106 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x5BB JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x52C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x45D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x409 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x355 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x35D PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x1780 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x60E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x621 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2252 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x667 PUSH2 0xB25 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x68C JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x229B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 AND SWAP1 DUP10 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x705 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x74E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x556E697377617056323A20494E56414C49445F544F PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP11 ISZERO PUSH2 0x75F JUMPI PUSH2 0x75F DUP3 DUP11 DUP14 PUSH2 0x18E2 JUMP JUMPDEST DUP10 ISZERO PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 DUP11 DUP13 PUSH2 0x18E2 JUMP JUMPDEST DUP7 ISZERO PUSH2 0x82B JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x10D1E85C CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x826 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x885 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH1 0x0 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0x934 JUMPI PUSH1 0x0 PUSH2 0x943 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0x960 JUMPI PUSH1 0x0 PUSH2 0x96F JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x980 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2277 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EF PUSH2 0x9D1 DUP5 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH2 0x9E3 DUP8 PUSH2 0x3E8 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA07 PUSH2 0x9D1 DUP5 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA38 PUSH3 0xF4240 PUSH2 0xA2C PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH2 0xA48 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST LT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x556E697377617056323A204B PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xA98 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x233B34BB32902A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C CALLER DUP5 DUP5 PUSH2 0x1CF4 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xC00 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBDB SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xC0B DUP5 DUP5 DUP5 PUSH2 0x1D56 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB734B9BBB0B82B191D102327A92124A22222A7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0xD21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0xD31 PUSH2 0xB25 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xE4B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE68 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE76 DUP8 DUP8 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xEB3 JUMPI PUSH2 0xE9F PUSH2 0x3E8 PUSH2 0x9E3 PUSH2 0xE9A DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH2 0x202D JUMP JUMPDEST SWAP9 POP PUSH2 0xEAE PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x207F JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST PUSH2 0xEFF PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xED0 DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0xED7 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xEF2 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0xEF9 JUMPI INVALID JUMPDEST DIV PUSH2 0x2115 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0xF41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22E4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4B DUP11 DUP11 PUSH2 0x207F JUMP JUMPDEST PUSH2 0xF57 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1B2F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF87 JUMPI PUSH1 0x8 SLOAD PUSH2 0xF83 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x104C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0x105C PUSH2 0xB25 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1179 DUP9 DUP9 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1190 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0x1197 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x11AB DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0x11B2 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x11C5 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22BC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120A ADDRESS DUP5 PUSH2 0x212D JUMP JUMPDEST PUSH2 0x1215 DUP8 DUP14 DUP14 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x1220 DUP7 DUP14 DUP13 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x1316 DUP6 DUP6 DUP12 DUP12 PUSH2 0x1B2F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1346 JUMPI PUSH1 0x8 SLOAD PUSH2 0x1342 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4656495645 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C CALLER DUP5 DUP5 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x1423 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x14D2 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x14CD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1539 SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x14CD SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16FC JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x174D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1758 DUP10 DUP10 DUP10 PUSH2 0x1CF4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x17CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x18DB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x181C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1830 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x198F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A24 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1A24 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1A75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A205452414E534645525F4641494C4544000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1A97 JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1A94 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xB60 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1B4D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1B94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E697377617056323A204F564552464C4F57 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BC4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BD8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1C49 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1C06 DUP6 PUSH2 0x1BF1 DUP7 PUSH2 0x21CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x21DD AND JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1C31 DUP5 PUSH2 0x1BF1 DUP8 PUSH2 0x21CB JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1DB4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCF8E9A7 PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xCF8E9A70 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP6 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x2018 JUMPI DUP1 ISZERO PUSH2 0x2013 JUMPI PUSH1 0x0 PUSH2 0x1F45 PUSH2 0xE9A PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 DUP2 AND SWAP1 DUP10 AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F52 DUP4 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 PUSH2 0x1F80 PUSH2 0x1F71 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FA5 DUP4 PUSH2 0x1F99 DUP7 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x1FB2 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x200C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1FD8 JUMPI PUSH2 0x1FD3 DUP9 DUP3 PUSH2 0x207F JUMP JUMPDEST PUSH2 0x200C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DIV PUSH1 0x3 MUL SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 PUSH2 0x1FEF JUMPI INVALID JUMPDEST DIV PUSH1 0x2 MUL SWAP1 POP PUSH2 0x1FFF DUP11 DUP4 PUSH2 0x207F JUMP JUMPDEST PUSH2 0x2009 DUP10 DUP3 PUSH2 0x207F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x2024 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2070 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x206A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2059 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x2062 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x2042 JUMP JUMPDEST POP PUSH2 0x207A JUMP JUMPDEST DUP2 ISZERO PUSH2 0x207A JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2092 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20BD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2124 JUMPI DUP2 PUSH2 0x2126 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2156 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x2183 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x21FA JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xDC REVERT RETURN 0x4D 0xD9 LT CALLDATACOPY 0xDB 0xE DUP5 0xD ADDMOD ISZERO DUP4 EXTCODECOPY 0xC3 0xE1 0x4D 0xC4 SWAP16 0xC7 SWAP4 JUMPI PUSH16 0x2879438E52BABAC264736F6C63430005 LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "301:10238:1:-;;;1170:1;1146:25;;2257:60;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1133:95:0;;1033:7;;1133:95;;;;;;;;;;;;;;;;1263:4;;;;;;;;-1:-1:-1;;;1263:4:0;;;;;1298:10;;;;;;;;;;-1:-1:-1;;;1298:10:0;;;;1104:278;;;;;;;;;1247:22;1104:278;;;;1288:21;1104:278;;;;;;;;;;;1362:4;1104:278;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1104:278:0;;;;;;1080:313;;;;;;;;1061:16;:332;-1:-1:-1;2289:7:1;:20;;-1:-1:-1;;;;;;2289:20:1;2299:10;2289:20;;;301:10238;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610534578063d505accf1461053c578063dd62ed3e1461058d578063fff6cae9146105bb576101a9565b8063ba9a7a56146104fe578063bc25cf7714610506578063c45a01551461052c576101a9565b80637ecebe00116100d35780637ecebe001461046557806389afcb441461048b57806395d89b41146104ca578063a9059cbb146104d2576101a9565b80636a6278421461041157806370a08231146104375780637464fc3d1461045d576101a9565b806323b872dd116101665780633644e515116101405780633644e515146103cb578063485cc955146103d35780635909c0d5146104015780635a3d549314610409576101a9565b806323b872dd1461036f57806330adf81f146103a5578063313ce567146103ad576101a9565b8063022c0d9f146101ae57806306fdde031461023c5780630902f1ac146102b9578063095ea7b3146102f15780630dfe16811461033157806318160ddd14610355575b600080fd5b61023a600480360360808110156101c457600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156101fb57600080fd5b82018360208201111561020d57600080fd5b8035906020019184600183028401116401000000008311171561022f57600080fd5b5090925090506105c3565b005b610244610afe565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027e578181015183820152602001610266565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c1610b25565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61031d6004803603604081101561030757600080fd5b506001600160a01b038135169060200135610b4f565b604080519115158252519081900360200190f35b610339610b66565b604080516001600160a01b039092168252519081900360200190f35b61035d610b75565b60408051918252519081900360200190f35b61031d6004803603606081101561038557600080fd5b506001600160a01b03813581169160208101359091169060400135610b7b565b61035d610c15565b6103b5610c39565b6040805160ff9092168252519081900360200190f35b61035d610c3e565b61023a600480360360408110156103e957600080fd5b506001600160a01b0381358116916020013516610c44565b61035d610cc8565b61035d610cce565b61035d6004803603602081101561042757600080fd5b50356001600160a01b0316610cd4565b61035d6004803603602081101561044d57600080fd5b50356001600160a01b0316610fd4565b61035d610fe6565b61035d6004803603602081101561047b57600080fd5b50356001600160a01b0316610fec565b6104b1600480360360208110156104a157600080fd5b50356001600160a01b0316610ffe565b6040805192835260208301919091528051918290030190f35b6102446113a4565b61031d600480360360408110156104e857600080fd5b506001600160a01b0381351690602001356113c5565b61035d6113d2565b61023a6004803603602081101561051c57600080fd5b50356001600160a01b03166113d8565b610339611543565b610339611552565b61023a600480360360e081101561055257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611561565b61035d600480360360408110156105a357600080fd5b506001600160a01b0381358116916020013516611763565b61023a611780565b600c5460011461060e576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55841515806106215750600084115b61065c5760405162461bcd60e51b81526004018080602001828103825260258152602001806122526025913960400191505060405180910390fd5b600080610667610b25565b5091509150816001600160701b03168710801561068c5750806001600160701b031686105b6106c75760405162461bcd60e51b815260040180806020018281038252602181526020018061229b6021913960400191505060405180910390fd5b60065460075460009182916001600160a01b039182169190811690891682148015906107055750806001600160a01b0316896001600160a01b031614155b61074e576040805162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015290519081900360640190fd5b8a1561075f5761075f828a8d6118e2565b891561077057610770818a8c6118e2565b861561082b57886001600160a01b03166310d1e85c338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561081257600080fd5b505af1158015610826573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d602081101561089b57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d602081101561091157600080fd5b5051925060009150506001600160701b0385168a90038311610934576000610943565b89856001600160701b03160383035b9050600089856001600160701b031603831161096057600061096f565b89856001600160701b03160383035b905060008211806109805750600081115b6109bb5760405162461bcd60e51b81526004018080602001828103825260248152602001806122776024913960400191505060405180910390fd5b60006109ef6109d184600363ffffffff611a7c16565b6109e3876103e863ffffffff611a7c16565b9063ffffffff611adf16565b90506000610a076109d184600363ffffffff611a7c16565b9050610a38620f4240610a2c6001600160701b038b8116908b1663ffffffff611a7c16565b9063ffffffff611a7c16565b610a48838363ffffffff611a7c16565b1015610a8a576040805162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015290519081900360640190fd5b5050610a9884848888611b2f565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600b81526020016a233b34bb32902a37b5b2b760a91b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610b5c338484611cf4565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610c00576001600160a01b0384166000908152600260209081526040808320338452909152902054610bdb908363ffffffff611adf16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610c0b848484611d56565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610c9a576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610d21576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580610d31610b25565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d8557600080fd5b505afa158015610d99573d6000803e3d6000fd5b505050506040513d6020811015610daf57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e0257600080fd5b505afa158015610e16573d6000803e3d6000fd5b505050506040513d6020811015610e2c57600080fd5b505190506000610e4b836001600160701b03871663ffffffff611adf16565b90506000610e68836001600160701b03871663ffffffff611adf16565b90506000610e768787611e10565b60005490915080610eb357610e9f6103e86109e3610e9a878763ffffffff611a7c16565b61202d565b9850610eae60006103e861207f565b610f02565b610eff6001600160701b038916610ed0868463ffffffff611a7c16565b81610ed757fe5b046001600160701b038916610ef2868563ffffffff611a7c16565b81610ef957fe5b04612115565b98505b60008911610f415760405162461bcd60e51b81526004018080602001828103825260288152602001806122e46028913960400191505060405180910390fd5b610f4b8a8a61207f565b610f5786868a8a611b2f565b8115610f8757600854610f83906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c5460011461104c576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c8190558061105c610b25565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156110b857600080fd5b505afa1580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561113057600080fd5b505afa158015611144573d6000803e3d6000fd5b505050506040513d602081101561115a57600080fd5b5051306000908152600160205260408120549192506111798888611e10565b60005490915080611190848763ffffffff611a7c16565b8161119757fe5b049a50806111ab848663ffffffff611a7c16565b816111b257fe5b04995060008b1180156111c5575060008a115b6112005760405162461bcd60e51b81526004018080602001828103825260288152602001806122bc6028913960400191505060405180910390fd5b61120a308461212d565b611215878d8d6118e2565b611220868d8c6118e2565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561126657600080fd5b505afa15801561127a573d6000803e3d6000fd5b505050506040513d602081101561129057600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156112dc57600080fd5b505afa1580156112f0573d6000803e3d6000fd5b505050506040513d602081101561130657600080fd5b5051935061131685858b8b611b2f565b811561134657600854611342906001600160701b0380821691600160701b90041663ffffffff611a7c16565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b60405180604001604052806005815260200164465649564560d81b81525081565b6000610b5c338484611d56565b6103e881565b600c54600114611423576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926114d292859287926114cd926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b50519063ffffffff611adf16565b6118e2565b600854604080516370a0823160e01b8152306004820152905161153992849287926114cd92600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b15801561149557600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b428410156115ab576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156116c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116fc5750886001600160a01b0316816001600160a01b0316145b61174d576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b611758898989611cf4565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146117cb576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516118db926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561181c57600080fd5b505afa158015611830573d6000803e3d6000fd5b505050506040513d602081101561184657600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561189357600080fd5b505afa1580156118a7573d6000803e3d6000fd5b505050506040513d60208110156118bd57600080fd5b50516008546001600160701b0380821691600160701b900416611b2f565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b6020831061198f5780518252601f199092019160209182019101611970565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119f1576040519150601f19603f3d011682016040523d82523d6000602084013e6119f6565b606091505b5091509150818015611a24575080511580611a245750808060200190516020811015611a2157600080fd5b50515b611a75576040805162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c4544000000000000604482015290519081900360640190fd5b5050505050565b6000811580611a9757505080820282828281611a9457fe5b04145b610b60576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610b60576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611b4d57506001600160701b038311155b611b94576040805162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611bc457506001600160701b03841615155b8015611bd857506001600160701b03831615155b15611c49578063ffffffff16611c0685611bf1866121cb565b6001600160e01b03169063ffffffff6121dd16565b600980546001600160e01b03929092169290920201905563ffffffff8116611c3184611bf1876121cb565b600a80546001600160e01b0392909216929092020190555b600880546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611d7f908263ffffffff611adf16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611db4908263ffffffff61220216565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6157600080fd5b505afa158015611e75573d6000803e3d6000fd5b505050506040513d6020811015611e8b57600080fd5b505160055460408051630cf8e9a760e41b815290519293506000926001600160a01b039092169163cf8e9a7091600480820192602092909190829003018186803b158015611ed857600080fd5b505afa158015611eec573d6000803e3d6000fd5b505050506040513d6020811015611f0257600080fd5b5051600b546001600160a01b038416158015955091925090612018578015612013576000611f45610e9a6001600160701b0389811690891663ffffffff611a7c16565b90506000611f528361202d565b905080821115612010576000611f80611f71848463ffffffff611adf16565b6000549063ffffffff611a7c16565b90506000611fa583611f9986600563ffffffff611a7c16565b9063ffffffff61220216565b90506000818381611fb257fe5b049050801561200c576001600160a01b038716611fd857611fd3888261207f565b61200c565b6000600582046003029050600060058381611fef57fe5b046002029050611fff8a8361207f565b612009898261207f565b50505b5050505b50505b612024565b8015612024576000600b555b50505092915050565b60006003821115612070575080600160028204015b8181101561206a5780915060028182858161205957fe5b04018161206257fe5b049050612042565b5061207a565b811561207a575060015b919050565b600054612092908263ffffffff61220216565b60009081556001600160a01b0383168152600160205260409020546120bd908263ffffffff61220216565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183106121245781612126565b825b9392505050565b6001600160a01b038216600090815260016020526040902054612156908263ffffffff611adf16565b6001600160a01b03831660009081526001602052604081209190915554612183908263ffffffff611adf16565b60009081556040805183815290516001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b038416816121fa57fe5b049392505050565b80820182811015610b60576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c4951554944495459556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820dcfdf34dd91037db0e840d0815833cc3e14dc49fc793576f2879438e52babac264736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x5BB JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x52C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x45D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x409 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x355 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x35D PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x35D PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1561 JUMP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x1780 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x60E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x621 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2252 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x667 PUSH2 0xB25 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x68C JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x229B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 AND SWAP1 DUP10 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x705 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x74E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x556E697377617056323A20494E56414C49445F544F PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP11 ISZERO PUSH2 0x75F JUMPI PUSH2 0x75F DUP3 DUP11 DUP14 PUSH2 0x18E2 JUMP JUMPDEST DUP10 ISZERO PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 DUP11 DUP13 PUSH2 0x18E2 JUMP JUMPDEST DUP7 ISZERO PUSH2 0x82B JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x10D1E85C CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x826 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x885 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH1 0x0 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0x934 JUMPI PUSH1 0x0 PUSH2 0x943 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0x960 JUMPI PUSH1 0x0 PUSH2 0x96F JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x980 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2277 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EF PUSH2 0x9D1 DUP5 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH2 0x9E3 DUP8 PUSH2 0x3E8 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA07 PUSH2 0x9D1 DUP5 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA38 PUSH3 0xF4240 PUSH2 0xA2C PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH2 0xA48 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST LT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x556E697377617056323A204B PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xA98 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x233B34BB32902A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C CALLER DUP5 DUP5 PUSH2 0x1CF4 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xC00 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBDB SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xC0B DUP5 DUP5 DUP5 PUSH2 0x1D56 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB734B9BBB0B82B191D102327A92124A22222A7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0xD21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0xD31 PUSH2 0xB25 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xE4B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE68 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE76 DUP8 DUP8 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xEB3 JUMPI PUSH2 0xE9F PUSH2 0x3E8 PUSH2 0x9E3 PUSH2 0xE9A DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH2 0x202D JUMP JUMPDEST SWAP9 POP PUSH2 0xEAE PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x207F JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST PUSH2 0xEFF PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xED0 DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0xED7 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xEF2 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0xEF9 JUMPI INVALID JUMPDEST DIV PUSH2 0x2115 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0xF41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22E4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4B DUP11 DUP11 PUSH2 0x207F JUMP JUMPDEST PUSH2 0xF57 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1B2F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF87 JUMPI PUSH1 0x8 SLOAD PUSH2 0xF83 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x104C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0x105C PUSH2 0xB25 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1179 DUP9 DUP9 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1190 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0x1197 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x11AB DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST DUP2 PUSH2 0x11B2 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x11C5 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22BC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120A ADDRESS DUP5 PUSH2 0x212D JUMP JUMPDEST PUSH2 0x1215 DUP8 DUP14 DUP14 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x1220 DUP7 DUP14 DUP13 PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x1316 DUP6 DUP6 DUP12 DUP12 PUSH2 0x1B2F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1346 JUMPI PUSH1 0x8 SLOAD PUSH2 0x1342 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4656495645 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C CALLER DUP5 DUP5 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x1423 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x14D2 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x14CD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1539 SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x14CD SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16FC JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x174D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1758 DUP10 DUP10 DUP10 PUSH2 0x1CF4 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x17CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x18DB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x181C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1830 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x198F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A24 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1A24 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1A75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A205452414E534645525F4641494C4544000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1A97 JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1A94 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xB60 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1B4D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1B94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E697377617056323A204F564552464C4F57 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BC4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BD8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1C49 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1C06 DUP6 PUSH2 0x1BF1 DUP7 PUSH2 0x21CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x21DD AND JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1C31 DUP5 PUSH2 0x1BF1 DUP8 PUSH2 0x21CB JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1DB4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCF8E9A7 PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xCF8E9A70 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP6 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x2018 JUMPI DUP1 ISZERO PUSH2 0x2013 JUMPI PUSH1 0x0 PUSH2 0x1F45 PUSH2 0xE9A PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 DUP2 AND SWAP1 DUP10 AND PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F52 DUP4 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 PUSH2 0x1F80 PUSH2 0x1F71 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FA5 DUP4 PUSH2 0x1F99 DUP7 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1A7C AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x1FB2 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x200C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1FD8 JUMPI PUSH2 0x1FD3 DUP9 DUP3 PUSH2 0x207F JUMP JUMPDEST PUSH2 0x200C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DIV PUSH1 0x3 MUL SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 PUSH2 0x1FEF JUMPI INVALID JUMPDEST DIV PUSH1 0x2 MUL SWAP1 POP PUSH2 0x1FFF DUP11 DUP4 PUSH2 0x207F JUMP JUMPDEST PUSH2 0x2009 DUP10 DUP3 PUSH2 0x207F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x2024 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2070 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x206A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2059 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x2062 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x2042 JUMP JUMPDEST POP PUSH2 0x207A JUMP JUMPDEST DUP2 ISZERO PUSH2 0x207A JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2092 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20BD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2202 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2124 JUMPI DUP2 PUSH2 0x2126 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2156 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x2183 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1ADF AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x21FA JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xDC REVERT RETURN 0x4D 0xD9 LT CALLDATACOPY 0xDB 0xE DUP5 0xD ADDMOD ISZERO DUP4 EXTCODECOPY 0xC3 0xE1 0x4D 0xC4 SWAP16 0xC7 SWAP4 JUMPI PUSH16 0x2879438E52BABAC264736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "301:10238:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:10238:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8057:1889;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8057:1889:1;;;;;;;;-1:-1:-1;;;;;8057:1889:1;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8057:1889:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8057:1889:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;8057:1889:1;;-1:-1:-1;8057:1889:1;-1:-1:-1;8057:1889:1;:::i;:::-;;193:43:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;193:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:231:1;;;:::i;:::-;;;;-1:-1:-1;;;;;1322:231:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2240:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;611:21:1;;;:::i;:::-;;;;-1:-1:-1;;;;;611:21:1;;;;;;;;;;;;;;331:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;2542:301;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2542:301:0;;;;;;;;;;;;;;;;;:::i;623:108::-;;;:::i;289:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;480:31;;;:::i;2382:210:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2382:210:1;;;;;;;;;;:::i;962:32::-;;;:::i;1001:::-;;;:::i;5127:1240::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5127:1240:1;-1:-1:-1;;;;;5127:1240:1;;:::i;362:41:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;362:41:0;-1:-1:-1;;;;;362:41:0;;:::i;1040:17:1:-;;;:::i;738:38:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;738:38:0;-1:-1:-1;;;;;738:38:0;;:::i;6479:1466:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6479:1466:1;-1:-1:-1;;;;;6479:1466:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;243:39:0;;;:::i;2395:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2395:139:0;;;;;;;;:::i;432:46:1:-;;;:::i;9995:334::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9995:334:1;-1:-1:-1;;;;;9995:334:1;;:::i;582:22::-;;;:::i;639:21::-;;;:::i;2851:674:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2851:674:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;410:61::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;410:61:0;;;;;;;;;;:::i;10378:158:1:-;;;:::i;8057:1889::-;1213:8;;1225:1;1213:13;1205:43;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;;;;1270:1;1259:8;:12;8171:14;;;;:32;;;8202:1;8189:10;:14;8171:32;8163:82;;;;-1:-1:-1;;;8163:82:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8257:17;8276;8298:13;:11;:13::i;:::-;8256:55;;;;;8358:9;-1:-1:-1;;;;;8345:22:1;:10;:22;:48;;;;;8384:9;-1:-1:-1;;;;;8371:22:1;:10;:22;8345:48;8337:94;;;;-1:-1:-1;;;8337:94:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8576:6;;8611;;8444:13;;;;-1:-1:-1;;;;;8576:6:1;;;;8611;;;;8636:13;;;;;;;:30;;;8659:7;-1:-1:-1;;;;;8653:13:1;:2;-1:-1:-1;;;;;8653:13:1;;;8636:30;8628:64;;;;;-1:-1:-1;;;8628:64:1;;;;;;;;;;;;-1:-1:-1;;;8628:64:1;;;;;;;;;;;;;;;8707:14;;8703:58;;8723:38;8737:7;8746:2;8750:10;8723:13;:38::i;:::-;8810:14;;8806:58;;8826:38;8840:7;8849:2;8853:10;8826:13;:38::i;:::-;8913:15;;8909:97;;8947:2;-1:-1:-1;;;;;8930:34:1;;8965:10;8977;8989;9001:4;;8930:76;;;;;;;;;;;;;-1:-1:-1;;;;;8930:76:1;-1:-1:-1;;;;;8930:76:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8930:76:1;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8930:76:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8930:76:1;;;;8909:97;9028:40;;;-1:-1:-1;;;9028:40:1;;9062:4;9028:40;;;;;;-1:-1:-1;;;;;9028:25:1;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9028:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9028:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9028:40:1;9090;;;-1:-1:-1;;;9090:40:1;;9124:4;9090:40;;;;;;9028;;-1:-1:-1;;;;;;9090:25:1;;;;;:40;;;;;9028;;9090;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9090:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9090:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9090:40:1;;-1:-1:-1;9152:14:1;;-1:-1:-1;;;;;;;9180:22:1;;;;;9169:33;;:75;;9243:1;9169:75;;;9229:10;9217:9;-1:-1:-1;;;;;9217:22:1;;9205:8;:35;9169:75;9152:92;;9255:14;9295:10;9283:9;-1:-1:-1;;;;;9283:22:1;;9272:8;:33;:75;;9346:1;9272:75;;;9332:10;9320:9;-1:-1:-1;;;;;9320:22:1;;9308:8;:35;9272:75;9255:92;;9378:1;9366:9;:13;:30;;;;9395:1;9383:9;:13;9366:30;9358:79;;;;-1:-1:-1;;;9358:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9523:21;9547:40;9570:16;:9;9584:1;9570:16;:13;:16;:::i;:::-;9547:18;:8;9560:4;9547:18;:12;:18;:::i;:::-;:22;:40;:22;:40;:::i;:::-;9523:64;-1:-1:-1;9598:21:1;9622:40;9645:16;:9;9659:1;9645:16;:13;:16;:::i;9622:40::-;9598:64;-1:-1:-1;9723:43:1;9758:7;9723:30;-1:-1:-1;;;;;9723:15:1;;;;:30;;;:19;:30;:::i;:::-;:34;:43;:34;:43;:::i;:::-;9681:38;:16;9702;9681:38;:20;:38;:::i;:::-;:85;;9673:110;;;;;-1:-1:-1;;;9673:110:1;;;;;;;;;;;;-1:-1:-1;;;9673:110:1;;;;;;;;;;;;;;;1282:1;;9807:49;9815:8;9825;9835:9;9846;9807:7;:49::i;:::-;9872:66;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9872:66:1;;;9877:10;;9872:66;;;;;;;;;-1:-1:-1;;1305:1:1;1294:8;:12;-1:-1:-1;;;;;;;;;8057:1889:1:o;193:43:0:-;;;;;;;;;;;;;;-1:-1:-1;;;193:43:0;;;;:::o;1322:231:1:-;1455:8;;-1:-1:-1;;;;;1455:8:1;;;;-1:-1:-1;;;1486:8:1;;;;;;-1:-1:-1;;;1527:18:1;;;;;1322:231::o;2240:147:0:-;2304:4;2321:36;2330:10;2342:7;2351:5;2321:8;:36::i;:::-;-1:-1:-1;2375:4:0;2240:147;;;;;:::o;611:21:1:-;;;-1:-1:-1;;;;;611:21:1;;:::o;331:24:0:-;;;;:::o;2542:301::-;-1:-1:-1;;;;;2641:15:0;;2620:4;2641:15;;;:9;:15;;;;;;;;2657:10;2641:27;;;;;;;;-1:-1:-1;;2641:39:0;2637:140;;-1:-1:-1;;;;;2727:15:0;;;;;;:9;:15;;;;;;;;2743:10;2727:27;;;;;;;;:38;;2759:5;2727:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;2697:15:0;;;;;;:9;:15;;;;;;;;2713:10;2697:27;;;;;;;:68;2637:140;2787:26;2797:4;2803:2;2807:5;2787:9;:26::i;:::-;-1:-1:-1;2831:4:0;2542:301;;;;;:::o;623:108::-;665:66;623:108;:::o;289:35::-;322:2;289:35;:::o;480:31::-;;;;:::o;2382:210:1:-;2478:7;;-1:-1:-1;;;;;2478:7:1;2464:10;:21;2456:54;;;;;-1:-1:-1;;;2456:54:1;;;;;;;;;;;;-1:-1:-1;;;2456:54:1;;;;;;;;;;;;;;;2541:6;:16;;-1:-1:-1;;;;;2541:16:1;;;-1:-1:-1;;;;;;2541:16:1;;;;;;;2568:6;:16;;;;;;;;;;;2382:210::o;962:32::-;;;;:::o;1001:::-;;;;:::o;5127:1240::-;5176:14;1213:8;;1225:1;1213:13;1205:43;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;;;;1270:1;1259:8;:12;;;1270:1;5245:13;:11;:13::i;:::-;-1:-1:-1;5307:6:1;;5300:39;;;-1:-1:-1;;;5300:39:1;;5333:4;5300:39;;;;;;5203:55;;-1:-1:-1;5203:55:1;;-1:-1:-1;5284:13:1;;-1:-1:-1;;;;;5307:6:1;;;;5300:24;;:39;;;;;;;;;;;;;;5307:6;5300:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5300:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5300:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5300:39:1;5373:6;;5366:39;;;-1:-1:-1;;;5366:39:1;;5399:4;5366:39;;;;;;5300;;-1:-1:-1;5350:13:1;;-1:-1:-1;;;;;5373:6:1;;;;5366:24;;:39;;;;;5300;;5366;;;;;;;;5373:6;5366:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5366:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5366:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5366:39:1;;-1:-1:-1;5416:12:1;5431:23;:8;-1:-1:-1;;;;;5431:23:1;;;:12;:23;:::i;:::-;5416:38;-1:-1:-1;5465:12:1;5480:23;:8;-1:-1:-1;;;;;5480:23:1;;;:12;:23;:::i;:::-;5465:38;;5516:10;5529:30;5538:9;5549;5529:8;:30::i;:::-;5570:17;5590:11;5516:43;;-1:-1:-1;5694:17:1;5690:352;;5740:54;473:5;5740:31;5750:20;:7;5762;5750:20;:11;:20;:::i;:::-;5740:9;:31::i;:54::-;5728:66;;5808:36;5822:1;473:5;5808;:36::i;:::-;5690:352;;;5944:86;-1:-1:-1;;;;;5953:37:1;;:25;:7;5965:12;5953:25;:11;:25;:::i;:::-;:37;;;;;;-1:-1:-1;;;;;5992:37:1;;:25;:7;6004:12;5992:25;:11;:25;:::i;:::-;:37;;;;;;5944:8;:86::i;:::-;5932:98;;5690:352;6072:1;6060:9;:13;6052:66;;;;-1:-1:-1;;;6052:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6129:20;6135:2;6139:9;6129:5;:20::i;:::-;6162:49;6170:8;6180;6190:9;6201;6162:7;:49::i;:::-;6226:5;6222:47;;;6260:8;;6241:28;;-1:-1:-1;;;;;6246:8:1;;;;-1:-1:-1;;;6260:8:1;;;6241:28;:18;:28;:::i;:::-;6233:5;:36;6222:47;6325:34;;;;;;;;;;;;;;6330:10;;6325:34;;;;;;;;-1:-1:-1;;1305:1:1;1294:8;:12;-1:-1:-1;5127:1240:1;;;-1:-1:-1;;;;;;5127:1240:1:o;362:41:0:-;;;;;;;;;;;;;:::o;1040:17:1:-;;;;:::o;738:38:0:-;;;;;;;;;;;;;:::o;6479:1466:1:-;6528:12;6542;1213:8;;1225:1;1213:13;1205:43;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;;;;1270:1;1259:8;:12;;;1270:1;6609:13;:11;:13::i;:::-;-1:-1:-1;6666:6:1;;6747;;6826:40;;;-1:-1:-1;;;6826:40:1;;6860:4;6826:40;;;;;;6567:55;;-1:-1:-1;6567:55:1;;-1:-1:-1;;;;;;6666:6:1;;;;6747;;;6648:15;;6666:6;;6826:25;;:40;;;;;;;;;;;;;;6666:6;6826:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6826:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6826:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6826:40:1;6893;;;-1:-1:-1;;;6893:40:1;;6927:4;6893:40;;;;;;6826;;-1:-1:-1;6877:13:1;;-1:-1:-1;;;;;6893:25:1;;;;;:40;;;;;6826;;6893;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6893:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6893:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6893:40:1;6979:4;6944:14;6961:24;;;:9;6893:40;6961:24;;;;;6893:40;;-1:-1:-1;7011:30:1;7020:9;7031;7011:8;:30::i;:::-;7052:17;7072:11;6998:43;;-1:-1:-1;7072:11:1;7182:23;:9;7196:8;7182:23;:13;:23;:::i;:::-;:38;;;;;;;-1:-1:-1;7315:12:1;7289:23;:9;7303:8;7289:23;:13;:23;:::i;:::-;:38;;;;;;7279:48;;7404:1;7394:7;:11;:26;;;;;7419:1;7409:7;:11;7394:26;7386:79;;;;-1:-1:-1;;;7386:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7476:31;7490:4;7497:9;7476:5;:31::i;:::-;7518:35;7532:7;7541:2;7545:7;7518:13;:35::i;:::-;7564;7578:7;7587:2;7591:7;7564:13;:35::i;:::-;7621:40;;;-1:-1:-1;;;7621:40:1;;7655:4;7621:40;;;;;;-1:-1:-1;;;;;7621:25:1;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;7621:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7621:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7621:40:1;7683;;;-1:-1:-1;;;7683:40:1;;7717:4;7683:40;;;;;;7621;;-1:-1:-1;;;;;;7683:25:1;;;;;:40;;;;;7621;;7683;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;7683:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7683:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7683:40:1;;-1:-1:-1;7736:49:1;7744:8;7683:40;7764:9;7775;7736:7;:49::i;:::-;7800:5;7796:47;;;7834:8;;7815:28;;-1:-1:-1;;;;;7820:8:1;;;;-1:-1:-1;;;7834:8:1;;;7815:28;:18;:28;:::i;:::-;7807:5;:36;7796:47;7899:38;;;;;;;;;;;;;;-1:-1:-1;;;;;7899:38:1;;;7904:10;;7899:38;;;;;;;;;;;1282:1;;;;;;;;;1305;1294:8;:12;;;;6479:1466;;;:::o;243:39:0:-;;;;;;;;;;;;;;-1:-1:-1;;;243:39:0;;;;:::o;2395:139::-;2455:4;2472:32;2482:10;2494:2;2498:5;2472:9;:32::i;432:46:1:-;473:5;432:46;:::o;9995:334::-;1213:8;;1225:1;1213:13;1205:43;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;;;;1270:1;1259:8;:12;10064:6;;10114;;10218:8;;10173:40;;;-1:-1:-1;;;10173:40:1;;10207:4;10173:40;;;;;;-1:-1:-1;;;;;10064:6:1;;;;10114;;;;10146:82;;10064:6;;10169:2;;10173:54;;-1:-1:-1;;;;;10218:8:1;;10064:6;;10173:25;;:40;;;;;;;;;;;;;;;10064:6;10173:40;;;5:2:-1;;;;30:1;27;20:12;5:2;10173:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10173:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10173:40:1;;:54;:44;:54;:::i;:::-;10146:13;:82::i;:::-;10311:8;;10266:40;;;-1:-1:-1;;;10266:40:1;;10300:4;10266:40;;;;;;10239:82;;10253:7;;10262:2;;10266:54;;-1:-1:-1;;;10311:8:1;;-1:-1:-1;;;;;10311:8:1;;-1:-1:-1;;;;;10266:25:1;;;;;:40;;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;10239:82:1;-1:-1:-1;;1305:1:1;1294:8;:12;-1:-1:-1;9995:334:1:o;582:22::-;;;-1:-1:-1;;;;;582:22:1;;:::o;639:21::-;;;-1:-1:-1;;;;;639:21:1;;:::o;2851:674:0:-;2997:15;2985:8;:27;;2977:58;;;;;-1:-1:-1;;;2977:58:0;;;;;;;;;;;;-1:-1:-1;;;2977:58:0;;;;;;;;;;;;;;;3151:16;;-1:-1:-1;;;;;3247:13:0;;;3046:14;3247:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3196:77;;665:66;3196:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3196:77:0;;;;;3186:88;;;;;;-1:-1:-1;;;3087:202:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3087:202:0;;;;;;3063:237;;;;;;;;;3338:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3046:14;;3247:15;3338:26;;;;;-1:-1:-1;;3338:26:0;;;;;;;;;;3247:15;3338:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3338:26:0;;-1:-1:-1;;3338:26:0;;;-1:-1:-1;;;;;;;3383:30:0;;;;;;:59;;;3437:5;-1:-1:-1;;;;;3417:25:0;:16;-1:-1:-1;;;;;3417:25:0;;3383:59;3375:100;;;;;-1:-1:-1;;;3375:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3486:31;3495:5;3502:7;3511:5;3486:8;:31::i;:::-;2851:674;;;;;;;;;:::o;410:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;10378:158:1:-;1213:8;;1225:1;1213:13;1205:43;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;-1:-1:-1;;;1205:43:1;;;;;;;;;;;;;;;1270:1;1259:8;:12;10434:6;;10427:39;;;-1:-1:-1;;;10427:39:1;;10460:4;10427:39;;;;;;10419:109;;-1:-1:-1;;;;;10434:6:1;;10427:24;;:39;;;;;;;;;;;;;;10434:6;10427:39;;;5:2:-1;;;;30:1;27;20:12;5:2;10427:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10427:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10427:39:1;10475:6;;10468:39;;;-1:-1:-1;;;10468:39:1;;10501:4;10468:39;;;;;;-1:-1:-1;;;;;10475:6:1;;;;10468:24;;:39;;;;;10427;;10468;;;;;;;;10475:6;10468:39;;;5:2:-1;;;;30:1;27;20:12;5:2;10468:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10468:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10468:39:1;10509:8;;-1:-1:-1;;;;;10509:8:1;;;;-1:-1:-1;;;10519:8:1;;;10419:7;:109::i;:::-;1305:1;1294:8;:12;10378:158::o;1561:287::-;537:34;;;;;;;;;;;;;;;;;1689:43;;-1:-1:-1;;;;;1689:43:1;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1689:43:1;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1678:55:1;;;;1643:12;;1657:17;;1678:10;;;1689:43;1678:55;;;25:18:-1;1678:55:1;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1678:55:1;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1642:91:1;;;;1752:7;:57;;;;-1:-1:-1;1764:11:1;;:16;;:44;;;1795:4;1784:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1784:24:1;1764:44;1744:96;;;;;-1:-1:-1;;;1744:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:287;;;;;:::o;434:142:8:-;486:6;513;;;:30;;-1:-1:-1;;528:5:8;;;542:1;537;528:5;537:1;523:15;;;;;:20;513:30;505:63;;;;;-1:-1:-1;;;505:63:8;;;;;;;;;;;;-1:-1:-1;;;505:63:8;;;;;;;;;;;;;;297:129;381:5;;;376:16;;;;368:50;;;;;-1:-1:-1;;;368:50:8;;;;;;;;;;;;-1:-1:-1;;;368:50:8;;;;;;;;;;;;;;2677:860:1;-1:-1:-1;;;;;2789:23:1;;;;;:50;;-1:-1:-1;;;;;;2816:23:1;;;2789:50;2781:82;;;;;-1:-1:-1;;;2781:82:1;;;;;;;;;;;;-1:-1:-1;;;2781:82:1;;;;;;;;;;;;;;;2978:18;;2905:23;:15;:23;;;-1:-1:-1;;;2978:18:1;;;;2961:35;;;3034:15;;;;;;:33;;-1:-1:-1;;;;;;3053:14:1;;;;3034:33;:51;;;;-1:-1:-1;;;;;;3071:14:1;;;;3034:51;3030:336;;;3240:11;3187:64;;3192:44;3226:9;3192:27;3209:9;3192:16;:27::i;:::-;-1:-1:-1;;;;;3192:33:1;;:44;:33;:44;:::i;:::-;3163:20;:88;;-1:-1:-1;;;;;3187:50:1;;;;:64;;;;3163:88;;;3290:64;;;3295:44;3329:9;3295:27;3312:9;3295:16;:27::i;:44::-;3266:20;:88;;-1:-1:-1;;;;;3290:50:1;;;;:64;;;;3266:88;;;3030:336;3376:8;:28;;-1:-1:-1;;3376:28:1;-1:-1:-1;;;;;3376:28:1;;;;;;;-1:-1:-1;;;;3415:28:1;-1:-1:-1;;;3415:28:1;;;;;;;;;-1:-1:-1;;;;;3454:35:1;-1:-1:-1;;;3454:35:1;;;;;;;;;3505:24;;;3510:8;;;3505:24;;3520:8;;;;;;;3505:24;;;;;;;;;;;;;;;;;2677:860;;;;;;:::o;1835:169:0:-;-1:-1:-1;;;;;1916:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;1965:31;;;;;;;;;;;;;;;;;1835:169;;;:::o;2012:220::-;-1:-1:-1;;;;;2106:15:0;;;;;;:9;:15;;;;;;:26;;2126:5;2106:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2088:15:0;;;;;;;:9;:15;;;;;;:44;;;;2159:13;;;;;;;:24;;2177:5;2159:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2143:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2199:25;;;;;;;2143:13;;2199:25;;;;;;;;;;;;;2012:220;;;:::o;3627:1388:1:-;3700:10;3723:13;3757:7;;;;;;;;;-1:-1:-1;;;;;3757:7:1;-1:-1:-1;;;;;3739:32:1;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3739:34:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3739:34:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3739:34:1;3824:7;;3806:40;;;-1:-1:-1;;;3806:40:1;;;;3739:34;;-1:-1:-1;3784:19:1;;-1:-1:-1;;;;;3824:7:1;;;;3806:38;;:40;;;;;3739:34;;3806:40;;;;;;;;3824:7;3806:40;;;5:2:-1;;;;30:1;27;20:12;5:2;3806:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3806:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3806:40:1;3909:5;;-1:-1:-1;;;;;3865:19:1;;;;;;-1:-1:-1;3806:40:1;;-1:-1:-1;3909:5:1;3940:1068;;3970:11;;3966:972;;4002:10;4015:41;4025:30;-1:-1:-1;;;;;4025:15:1;;;;:30;;;:19;:30;:::i;4015:41::-;4002:54;;4075:14;4092:17;4102:6;4092:9;:17::i;:::-;4075:34;;4140:9;4132:5;:17;4128:795;;;4174:14;4191:37;4207:20;:5;4217:9;4207:20;:9;:20;:::i;:::-;4191:11;;;:37;:15;:37;:::i;:::-;4174:54;-1:-1:-1;4251:16:1;4270:27;4287:9;4270:12;:5;4280:1;4270:12;:9;:12;:::i;:::-;:16;:27;:16;:27;:::i;:::-;4251:46;;4320:14;4349:11;4337:9;:23;;;;;;;-1:-1:-1;4387:13:1;;4383:521;;-1:-1:-1;;;;;4433:25:1;;4429:452;;4491:23;4497:5;4504:9;4491:5;:23::i;:::-;4429:452;;;4604:23;4643:1;4631:9;:13;4648:1;4630:19;4604:45;;4680:21;4717:1;4705:9;:13;;;;;;4722:1;4704:19;4680:43;;4754:32;4760:5;4767:18;4754:5;:32::i;:::-;4817:36;4823:11;4836:16;4817:5;:36::i;:::-;4429:452;;;4128:795;;;;3966:972;;;3940:1068;;;4959:11;;4955:53;;4995:1;4987:5;:9;4955:53;3627:1388;;;;;;;:::o;317:303:7:-;362:6;389:1;385;:5;381:232;;;-1:-1:-1;411:1:7;444;440;436:5;;:9;460:92;471:1;467;:5;460:92;;;497:1;493:5;;535:1;530;526;522;:5;;;;;;:9;521:15;;;;;;517:19;;460:92;;;381:232;;;;573:6;;569:44;;-1:-1:-1;600:1:7;569:44;317:303;;;:::o;1409:201:0:-;1482:11;;:22;;1498:5;1482:22;:15;:22;:::i;:::-;1468:11;:36;;;-1:-1:-1;;;;;1531:13:0;;;;:9;:13;;;;;;:24;;1549:5;1531:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1515:13:0;;;;;;:9;:13;;;;;;;;:40;;;;1571:31;;;;;;;1515:13;;;;1571:31;;;;;;;;;;1409:201;;:::o;103:96:7:-;155:6;182:1;178;:5;:13;;190:1;178:13;;;186:1;178:13;174:17;103:96;-1:-1:-1;;;103:96:7:o;1618:209:0:-;-1:-1:-1;;;;;1697:15:0;;;;;;:9;:15;;;;;;:26;;1717:5;1697:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;1679:15:0;;;;;;:9;:15;;;;;:44;;;;1748:11;:22;;1764:5;1748:22;:15;:22;:::i;:::-;1734:11;:36;;;1786:33;;;;;;;;-1:-1:-1;;;;;1786:33:0;;;;;;;;;;;;;1618:209;;:::o;294:120:9:-;-1:-1:-1;;;;;370:10:9;-1:-1:-1;;;370:17:9;;294:120::o;485:108::-;545:9;-1:-1:-1;;;;;575:10:9;;-1:-1:-1;;;;;571:14:9;;575:10;571:14;;;;;;485:108;-1:-1:-1;;;485:108:9:o;161:128:8:-;245:5;;;240:16;;;;232:49;;;;;-1:-1:-1;;;232:49:8;;;;;;;;;;;;-1:-1:-1;;;232:49:8;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1804800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1043",
								"MINIMUM_LIQUIDITY()": "243",
								"PERMIT_TYPEHASH()": "266",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22410",
								"balanceOf(address)": "1192",
								"burn(address)": "infinite",
								"decimals()": "297",
								"factory()": "1126",
								"getReserves()": "1217",
								"initialize(address,address)": "42828",
								"kLast()": "1088",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1169",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1087",
								"price1CumulativeLast()": "1109",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"token0()": "1149",
								"token1()": "1081",
								"totalSupply()": "1132",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 10539,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "MSTORE"
								},
								{
									"begin": 1170,
									"end": 1171,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1146,
									"end": 1171,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1146,
									"end": 1171,
									"name": "SSTORE"
								},
								{
									"begin": 2257,
									"end": 2317,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "MLOAD"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "CHAINID"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP3"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "CODECOPY"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "MLOAD"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "SWAP2"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP3"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "SWAP1"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "SUB"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "ADD"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "DUP3"
								},
								{
									"begin": 1133,
									"end": 1228,
									"name": "KECCAK256"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP3"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP3"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP3"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "MSTORE"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP4"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "233B34BB32902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "SWAP4"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP5"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "MSTORE"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP2"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MLOAD"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP1"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP4"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "ADD"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP4"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MSTORE"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP2"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "SWAP1"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "DUP5"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "ADD"
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1247,
									"end": 1269,
									"name": "PUSH",
									"value": "DD2B0C3AE82CD452EC4523EFBF188D2AA2EAD0A653FBC87A1AB70AF7FC7FC29"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP4"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1288,
									"end": 1309,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP3"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1362,
									"end": 1366,
									"name": "ADDRESS"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP7"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP5"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1382,
									"name": "MSTORE"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "DUP3"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "MLOAD"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP3"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "ADD"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP2"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP1"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "SWAP2"
								},
								{
									"begin": 1080,
									"end": 1393,
									"name": "KECCAK256"
								},
								{
									"begin": 1061,
									"end": 1077,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1061,
									"end": 1393,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2289,
									"end": 2296,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2289,
									"end": 2309,
									"name": "DUP1"
								},
								{
									"begin": 2289,
									"end": 2309,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2289,
									"end": 2309,
									"name": "AND"
								},
								{
									"begin": 2299,
									"end": 2309,
									"name": "CALLER"
								},
								{
									"begin": 2289,
									"end": 2309,
									"name": "OR"
								},
								{
									"begin": 2289,
									"end": 2309,
									"name": "SWAP1"
								},
								{
									"begin": 2289,
									"end": 2309,
									"name": "SSTORE"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "DUP1"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "CODECOPY"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 10539,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820dcfdf34dd91037db0e840d0815833cc3e14dc49fc793576f2879438e52babac264736f6c63430005100032",
									".code": [
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "LT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "SHR"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "485CC955"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 10539,
											"name": "REVERT"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "JUMPDEST"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP1"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP2"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP2"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP2"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP4"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "AND"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP2"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP2"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP2"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP3"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP3"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "DUP1"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "ADD"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "JUMPDEST"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "STOP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP6"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ISZERO"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPI"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "EXP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "NOT"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "RETURN"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP5"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP6"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "MSTORE"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP3"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP4"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP4"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "ADD"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "MSTORE"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "AND"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP4"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "ADD"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "MSTORE"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "MLOAD"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "DUP2"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SUB"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "ADD"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "RETURN"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "AND"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ISZERO"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ISZERO"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP3"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "RETURN"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SWAP3"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "AND"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "DUP3"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "MLOAD"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "DUP2"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SUB"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "ADD"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "RETURN"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP3"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MSTORE"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SUB"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "RETURN"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMPDEST"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "AND"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "ADD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP2"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "AND"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "ADD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP3"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "AND"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "RETURN"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "JUMPDEST"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "AND"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "AND"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "JUMPDEST"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "DUP1"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "AND"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "JUMPDEST"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMPDEST"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "JUMPDEST"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "DUP1"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "AND"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "JUMPDEST"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "DUP1"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "MLOAD"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP3"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "DUP4"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "MSTORE"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "DUP4"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "ADD"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP2"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP1"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP2"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "MSTORE"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "DUP1"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "MLOAD"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP2"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "DUP3"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP1"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SUB"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "ADD"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP1"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "RETURN"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "DUP1"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "DUP2"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "AND"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "ADD"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "JUMPDEST"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "AND"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP3"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "AND"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "SWAP1"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "ADD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "JUMPDEST"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "JUMPDEST"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "EQ"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPI"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "REVERT"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SSTORE"
										},
										{
											"begin": 8171,
											"end": 8185,
											"name": "DUP5"
										},
										{
											"begin": 8171,
											"end": 8185,
											"name": "ISZERO"
										},
										{
											"begin": 8171,
											"end": 8185,
											"name": "ISZERO"
										},
										{
											"begin": 8171,
											"end": 8185,
											"name": "DUP1"
										},
										{
											"begin": 8171,
											"end": 8203,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 8171,
											"end": 8203,
											"name": "JUMPI"
										},
										{
											"begin": 8171,
											"end": 8203,
											"name": "POP"
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8199,
											"name": "DUP5"
										},
										{
											"begin": 8189,
											"end": 8203,
											"name": "GT"
										},
										{
											"begin": 8171,
											"end": 8203,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 8171,
											"end": 8203,
											"name": "JUMPDEST"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "JUMPI"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP2"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "MSTORE"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "ADD"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP1"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP1"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "ADD"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP3"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP2"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "SUB"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP3"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "MSTORE"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP2"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "MSTORE"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "ADD"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP1"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH data",
											"value": "5339493DA7E2CBE77E17BEADF6B91132EB307939495F5F1797BF88D95539E83"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "SWAP2"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "CODECOPY"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "ADD"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "SWAP2"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "POP"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "POP"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "MLOAD"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "DUP1"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "SWAP2"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "SUB"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "SWAP1"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "REVERT"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 8163,
											"end": 8245,
											"name": "JUMPDEST"
										},
										{
											"begin": 8257,
											"end": 8274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8293,
											"name": "DUP1"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8298,
											"end": 8309,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "JUMPDEST"
										},
										{
											"begin": 8256,
											"end": 8311,
											"name": "POP"
										},
										{
											"begin": 8256,
											"end": 8311,
											"name": "SWAP2"
										},
										{
											"begin": 8256,
											"end": 8311,
											"name": "POP"
										},
										{
											"begin": 8256,
											"end": 8311,
											"name": "SWAP2"
										},
										{
											"begin": 8256,
											"end": 8311,
											"name": "POP"
										},
										{
											"begin": 8358,
											"end": 8367,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8345,
											"end": 8367,
											"name": "AND"
										},
										{
											"begin": 8345,
											"end": 8355,
											"name": "DUP8"
										},
										{
											"begin": 8345,
											"end": 8367,
											"name": "LT"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "DUP1"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "ISZERO"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "JUMPI"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "POP"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8371,
											"end": 8393,
											"name": "AND"
										},
										{
											"begin": 8371,
											"end": 8381,
											"name": "DUP7"
										},
										{
											"begin": 8371,
											"end": 8393,
											"name": "LT"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 8345,
											"end": 8393,
											"name": "JUMPDEST"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "JUMPI"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "MSTORE"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP3"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "SUB"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP3"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "MSTORE"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP2"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "MSTORE"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH data",
											"value": "3F354EF449B2A9B081220CE21F57691008110B653EDC191D8288E60CEF58BB5F"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "SWAP2"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "CODECOPY"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "ADD"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "SWAP2"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "POP"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "MLOAD"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "DUP1"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "SWAP2"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "SUB"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "SWAP1"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "REVERT"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 8337,
											"end": 8431,
											"name": "JUMPDEST"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "SLOAD"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "SLOAD"
										},
										{
											"begin": 8444,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8457,
											"name": "SWAP2"
										},
										{
											"begin": 8444,
											"end": 8457,
											"name": "DUP3"
										},
										{
											"begin": 8444,
											"end": 8457,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "SWAP2"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP3"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "AND"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "SWAP2"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "SWAP1"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "DUP2"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "AND"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "SWAP1"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "DUP10"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "AND"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "DUP3"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "EQ"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "DUP1"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "ISZERO"
										},
										{
											"begin": 8636,
											"end": 8649,
											"name": "SWAP1"
										},
										{
											"begin": 8636,
											"end": 8666,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 8636,
											"end": 8666,
											"name": "JUMPI"
										},
										{
											"begin": 8636,
											"end": 8666,
											"name": "POP"
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8653,
											"end": 8666,
											"name": "AND"
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "DUP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8653,
											"end": 8666,
											"name": "AND"
										},
										{
											"begin": 8653,
											"end": 8666,
											"name": "EQ"
										},
										{
											"begin": 8653,
											"end": 8666,
											"name": "ISZERO"
										},
										{
											"begin": 8636,
											"end": 8666,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 8636,
											"end": 8666,
											"name": "JUMPDEST"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "JUMPI"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "DUP1"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "DUP2"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "MSTORE"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "DUP3"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "MSTORE"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "DUP3"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F544F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "DUP3"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "MSTORE"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "MLOAD"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "DUP2"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "SUB"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "REVERT"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 8628,
											"end": 8692,
											"name": "JUMPDEST"
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "DUP11"
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "ISZERO"
										},
										{
											"begin": 8703,
											"end": 8761,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8703,
											"end": 8761,
											"name": "JUMPI"
										},
										{
											"begin": 8723,
											"end": 8761,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP3"
										},
										{
											"begin": 8746,
											"end": 8748,
											"name": "DUP11"
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "DUP14"
										},
										{
											"begin": 8723,
											"end": 8736,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8723,
											"end": 8761,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8723,
											"end": 8761,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 8723,
											"end": 8761,
											"name": "JUMPDEST"
										},
										{
											"begin": 8810,
											"end": 8824,
											"name": "DUP10"
										},
										{
											"begin": 8810,
											"end": 8824,
											"name": "ISZERO"
										},
										{
											"begin": 8806,
											"end": 8864,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8806,
											"end": 8864,
											"name": "JUMPI"
										},
										{
											"begin": 8826,
											"end": 8864,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8840,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8849,
											"end": 8851,
											"name": "DUP11"
										},
										{
											"begin": 8853,
											"end": 8863,
											"name": "DUP13"
										},
										{
											"begin": 8826,
											"end": 8839,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8826,
											"end": 8864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8826,
											"end": 8864,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8826,
											"end": 8864,
											"name": "JUMPDEST"
										},
										{
											"begin": 8913,
											"end": 8928,
											"name": "DUP7"
										},
										{
											"begin": 8913,
											"end": 8928,
											"name": "ISZERO"
										},
										{
											"begin": 8909,
											"end": 9006,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8909,
											"end": 9006,
											"name": "JUMPI"
										},
										{
											"begin": 8947,
											"end": 8949,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "AND"
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "PUSH",
											"value": "10D1E85C"
										},
										{
											"begin": 8965,
											"end": 8975,
											"name": "CALLER"
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "DUP14"
										},
										{
											"begin": 8989,
											"end": 8999,
											"name": "DUP14"
										},
										{
											"begin": 9001,
											"end": 9005,
											"name": "DUP13"
										},
										{
											"begin": 9001,
											"end": 9005,
											"name": "DUP13"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MLOAD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP7"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "AND"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "SHL"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MSTORE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ADD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP1"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "AND"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MSTORE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ADD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP6"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MSTORE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ADD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP5"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MSTORE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ADD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP1"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ADD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP3"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "SUB"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP3"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MSTORE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP5"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP5"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP3"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MSTORE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ADD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "SWAP3"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "SWAP7"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "MLOAD"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP1"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP4"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "SUB"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP2"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP8"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "DUP1"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "GAS"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "CALL"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8930,
											"end": 9006,
											"name": "POP"
										},
										{
											"begin": 8909,
											"end": 9006,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8909,
											"end": 9006,
											"name": "JUMPDEST"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP1"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP2"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "MSTORE"
										},
										{
											"begin": 9062,
											"end": 9066,
											"name": "ADDRESS"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP3"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "ADD"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "MSTORE"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP1"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "DUP5"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "AND"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "SWAP2"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "SWAP2"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP1"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP4"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "ADD"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP3"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP3"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP2"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP1"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP3"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP1"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SUB"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "ADD"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP2"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "DUP7"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "DUP1"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "GAS"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "STATICCALL"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "MLOAD"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "MLOAD"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP2"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "MSTORE"
										},
										{
											"begin": 9124,
											"end": 9128,
											"name": "ADDRESS"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP3"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "ADD"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "MSTORE"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "MLOAD"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP2"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "DUP4"
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "AND"
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "SWAP2"
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "SWAP2"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP3"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "ADD"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP3"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9028,
											"end": 9068,
											"name": "SWAP3"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP2"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP3"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SUB"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "ADD"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP2"
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "DUP7"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "DUP1"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "POP"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "GAS"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "STATICCALL"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "POP"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "POP"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "POP"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "POP"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "MLOAD"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "MLOAD"
										},
										{
											"begin": 9090,
											"end": 9130,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9152,
											"end": 9166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9152,
											"end": 9166,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "DUP6"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "AND"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "DUP11"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "SWAP1"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "SUB"
										},
										{
											"begin": 9169,
											"end": 9202,
											"name": "DUP4"
										},
										{
											"begin": 9169,
											"end": 9202,
											"name": "GT"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "JUMPI"
										},
										{
											"begin": 9243,
											"end": 9244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "JUMP"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "JUMPDEST"
										},
										{
											"begin": 9229,
											"end": 9239,
											"name": "DUP10"
										},
										{
											"begin": 9217,
											"end": 9226,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9217,
											"end": 9239,
											"name": "AND"
										},
										{
											"begin": 9217,
											"end": 9239,
											"name": "SUB"
										},
										{
											"begin": 9205,
											"end": 9213,
											"name": "DUP4"
										},
										{
											"begin": 9205,
											"end": 9240,
											"name": "SUB"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 9169,
											"end": 9244,
											"name": "JUMPDEST"
										},
										{
											"begin": 9152,
											"end": 9244,
											"name": "SWAP1"
										},
										{
											"begin": 9152,
											"end": 9244,
											"name": "POP"
										},
										{
											"begin": 9255,
											"end": 9269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9305,
											"name": "DUP10"
										},
										{
											"begin": 9283,
											"end": 9292,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9283,
											"end": 9305,
											"name": "AND"
										},
										{
											"begin": 9283,
											"end": 9305,
											"name": "SUB"
										},
										{
											"begin": 9272,
											"end": 9280,
											"name": "DUP4"
										},
										{
											"begin": 9272,
											"end": 9305,
											"name": "GT"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "JUMPI"
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "JUMP"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "JUMPDEST"
										},
										{
											"begin": 9332,
											"end": 9342,
											"name": "DUP10"
										},
										{
											"begin": 9320,
											"end": 9329,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9320,
											"end": 9342,
											"name": "AND"
										},
										{
											"begin": 9320,
											"end": 9342,
											"name": "SUB"
										},
										{
											"begin": 9308,
											"end": 9316,
											"name": "DUP4"
										},
										{
											"begin": 9308,
											"end": 9343,
											"name": "SUB"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 9272,
											"end": 9347,
											"name": "JUMPDEST"
										},
										{
											"begin": 9255,
											"end": 9347,
											"name": "SWAP1"
										},
										{
											"begin": 9255,
											"end": 9347,
											"name": "POP"
										},
										{
											"begin": 9378,
											"end": 9379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP3"
										},
										{
											"begin": 9366,
											"end": 9379,
											"name": "GT"
										},
										{
											"begin": 9366,
											"end": 9396,
											"name": "DUP1"
										},
										{
											"begin": 9366,
											"end": 9396,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 9366,
											"end": 9396,
											"name": "JUMPI"
										},
										{
											"begin": 9366,
											"end": 9396,
											"name": "POP"
										},
										{
											"begin": 9395,
											"end": 9396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9383,
											"end": 9392,
											"name": "DUP2"
										},
										{
											"begin": 9383,
											"end": 9396,
											"name": "GT"
										},
										{
											"begin": 9366,
											"end": 9396,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 9366,
											"end": 9396,
											"name": "JUMPDEST"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "JUMPI"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP2"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "MSTORE"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "ADD"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP1"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP1"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "ADD"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP3"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP2"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "SUB"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP3"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "MSTORE"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP2"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "MSTORE"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "ADD"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP1"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH data",
											"value": "10E2EFC32D8A31D3B2C11A545B3ED09C2DBABC58EF6DE4033929D0002E425B67"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "SWAP2"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "CODECOPY"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "ADD"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "SWAP2"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "POP"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "POP"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "MLOAD"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "DUP1"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "SWAP2"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "SUB"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "SWAP1"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "REVERT"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 9358,
											"end": 9437,
											"name": "JUMPDEST"
										},
										{
											"begin": 9523,
											"end": 9544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9587,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 9570,
											"end": 9586,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP5"
										},
										{
											"begin": 9584,
											"end": 9585,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9570,
											"end": 9586,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9583,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9570,
											"end": 9586,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9586,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9570,
											"end": 9586,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 9570,
											"end": 9586,
											"name": "JUMPDEST"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 9547,
											"end": 9555,
											"name": "DUP8"
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9547,
											"end": 9559,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "AND"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "JUMPDEST"
										},
										{
											"begin": 9547,
											"end": 9569,
											"name": "SWAP1"
										},
										{
											"begin": 9547,
											"end": 9587,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9547,
											"end": 9569,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9547,
											"end": 9587,
											"name": "AND"
										},
										{
											"begin": 9547,
											"end": 9587,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9547,
											"end": 9587,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 9547,
											"end": 9587,
											"name": "JUMPDEST"
										},
										{
											"begin": 9523,
											"end": 9587,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9598,
											"end": 9619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9662,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 9645,
											"end": 9661,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 9645,
											"end": 9654,
											"name": "DUP5"
										},
										{
											"begin": 9659,
											"end": 9660,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9645,
											"end": 9661,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9645,
											"end": 9658,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9645,
											"end": 9661,
											"name": "AND"
										},
										{
											"begin": 9645,
											"end": 9661,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9622,
											"end": 9662,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 9622,
											"end": 9662,
											"name": "JUMPDEST"
										},
										{
											"begin": 9598,
											"end": 9662,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9723,
											"end": 9766,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 9758,
											"end": 9765,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "DUP12"
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "DUP2"
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "AND"
										},
										{
											"begin": 9723,
											"end": 9738,
											"name": "SWAP1"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "DUP12"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "AND"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9723,
											"end": 9742,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "AND"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "JUMPDEST"
										},
										{
											"begin": 9723,
											"end": 9757,
											"name": "SWAP1"
										},
										{
											"begin": 9723,
											"end": 9766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9723,
											"end": 9757,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9723,
											"end": 9766,
											"name": "AND"
										},
										{
											"begin": 9723,
											"end": 9766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 9766,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 9723,
											"end": 9766,
											"name": "JUMPDEST"
										},
										{
											"begin": 9681,
											"end": 9719,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 9681,
											"end": 9697,
											"name": "DUP4"
										},
										{
											"begin": 9702,
											"end": 9718,
											"name": "DUP4"
										},
										{
											"begin": 9681,
											"end": 9719,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9701,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9681,
											"end": 9719,
											"name": "AND"
										},
										{
											"begin": 9681,
											"end": 9719,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9681,
											"end": 9719,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 9681,
											"end": 9719,
											"name": "JUMPDEST"
										},
										{
											"begin": 9681,
											"end": 9766,
											"name": "LT"
										},
										{
											"begin": 9681,
											"end": 9766,
											"name": "ISZERO"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "JUMPI"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "DUP1"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "DUP2"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "MSTORE"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "DUP3"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "ADD"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "MSTORE"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "DUP3"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "ADD"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "556E697377617056323A204B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "DUP3"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "ADD"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "MSTORE"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "SWAP1"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "MLOAD"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "SWAP1"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "DUP2"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "SWAP1"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "SUB"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "ADD"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "SWAP1"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "REVERT"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 9673,
											"end": 9783,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 9807,
											"end": 9856,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 9815,
											"end": 9823,
											"name": "DUP5"
										},
										{
											"begin": 9825,
											"end": 9833,
											"name": "DUP5"
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9"
										},
										{
											"begin": 9846,
											"end": 9855,
											"name": "DUP9"
										},
										{
											"begin": 9807,
											"end": 9814,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9807,
											"end": 9856,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9807,
											"end": 9856,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 9807,
											"end": 9856,
											"name": "JUMPDEST"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "MLOAD"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP4"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP2"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "MSTORE"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP2"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "ADD"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP4"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "MSTORE"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP3"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "ADD"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP14"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "MSTORE"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP2"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "ADD"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP13"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "MSTORE"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP12"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "AND"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP2"
										},
										{
											"begin": 9877,
											"end": 9887,
											"name": "CALLER"
										},
										{
											"begin": 9877,
											"end": 9887,
											"name": "SWAP2"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP2"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "DUP2"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SUB"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "ADD"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "SWAP1"
										},
										{
											"begin": 9872,
											"end": 9938,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8057,
											"end": 9946,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "233B34BB32902A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 236,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1455,
											"end": 1463,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1455,
											"end": 1463,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1455,
											"end": 1463,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1463,
											"name": "DUP3"
										},
										{
											"begin": 1455,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1455,
											"end": 1463,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "DUP4"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "DIV"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "SWAP1"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "AND"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "SWAP1"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "DIV"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "AND"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2330,
											"end": 2340,
											"name": "CALLER"
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP5"
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP5"
										},
										{
											"begin": 2321,
											"end": 2329,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2321,
											"end": 2357,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP3"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2387,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "AND"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "DUP2"
										},
										{
											"begin": 611,
											"end": 632,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SLOAD"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP4"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "AND"
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP1"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "DUP4"
										},
										{
											"begin": 2641,
											"end": 2656,
											"name": "KECCAK256"
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP5"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SWAP1"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SWAP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "MSTORE"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "DUP2"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "KECCAK256"
										},
										{
											"begin": 2641,
											"end": 2668,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2641,
											"end": 2680,
											"name": "EQ"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP5"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "DUP4"
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "KECCAK256"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "CALLER"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "DUP5"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SWAP2"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "MSTORE"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "KECCAK256"
										},
										{
											"begin": 2727,
											"end": 2754,
											"name": "SLOAD"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP4"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2758,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP6"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "AND"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP1"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "DUP4"
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "KECCAK256"
										},
										{
											"begin": 2713,
											"end": 2723,
											"name": "CALLER"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "DUP5"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "SWAP2"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "MSTORE"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "SWAP1"
										},
										{
											"begin": 2697,
											"end": 2724,
											"name": "KECCAK256"
										},
										{
											"begin": 2697,
											"end": 2765,
											"name": "SSTORE"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 2637,
											"end": 2777,
											"name": "JUMPDEST"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "DUP5"
										},
										{
											"begin": 2803,
											"end": 2805,
											"name": "DUP5"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP5"
										},
										{
											"begin": 2787,
											"end": 2796,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2835,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP4"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "SWAP3"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "POP"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "POP"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "POP"
										},
										{
											"begin": 2542,
											"end": 2843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 324,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 289,
											"end": 324,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "SLOAD"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 480,
											"end": 511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "JUMPDEST"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "AND"
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "CALLER"
										},
										{
											"begin": 2464,
											"end": 2485,
											"name": "EQ"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "JUMPI"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "DUP1"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "DUP2"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MSTORE"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "DUP3"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "ADD"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MSTORE"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "DUP3"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "ADD"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2AB734B9BBB0B82B191D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "DUP3"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "ADD"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MSTORE"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "SWAP1"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MLOAD"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "SWAP1"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "DUP2"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "SWAP1"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "SUB"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "ADD"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "SWAP1"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "REVERT"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "JUMPDEST"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "SWAP4"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "DUP5"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "DUP3"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "AND"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "OR"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2557,
											"name": "SSTORE"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "DUP1"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SLOAD"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SWAP3"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SWAP1"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SWAP4"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SWAP2"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "OR"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SWAP1"
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SSTORE"
										},
										{
											"begin": 2382,
											"end": 2592,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "SLOAD"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 962,
											"end": 994,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1001,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "JUMPDEST"
										},
										{
											"begin": 5176,
											"end": 5190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "EQ"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPI"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "REVERT"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SSTORE"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5245,
											"end": 5256,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5245,
											"end": 5258,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "SLOAD"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP1"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP2"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "MSTORE"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "ADDRESS"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP3"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "ADD"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "MSTORE"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP1"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "MLOAD"
										},
										{
											"begin": 5203,
											"end": 5258,
											"name": "SWAP4"
										},
										{
											"begin": 5203,
											"end": 5258,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5203,
											"end": 5258,
											"name": "SWAP2"
										},
										{
											"begin": 5203,
											"end": 5258,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "SWAP1"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "SWAP2"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "AND"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "SWAP2"
										},
										{
											"begin": 5300,
											"end": 5324,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5300,
											"end": 5324,
											"name": "SWAP2"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP1"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP4"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "ADD"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP3"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP3"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP2"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP1"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP3"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP1"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SUB"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "ADD"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP2"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "DUP7"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "DUP1"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "GAS"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "STATICCALL"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "MLOAD"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "MLOAD"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "SLOAD"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP2"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "MSTORE"
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "ADDRESS"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP3"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "ADD"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "MSTORE"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "MLOAD"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP3"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5350,
											"end": 5363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5363,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "SWAP1"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "SWAP3"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "AND"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "SWAP2"
										},
										{
											"begin": 5366,
											"end": 5390,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5366,
											"end": 5390,
											"name": "SWAP2"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP3"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "ADD"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP3"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "SWAP3"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP2"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP3"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SUB"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "ADD"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP2"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP7"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "DUP1"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "POP"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "GAS"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "STATICCALL"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "POP"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "POP"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "POP"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "POP"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "MLOAD"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "MLOAD"
										},
										{
											"begin": 5366,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5416,
											"end": 5428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 5431,
											"end": 5439,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "DUP8"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "AND"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "AND"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "JUMPDEST"
										},
										{
											"begin": 5416,
											"end": 5454,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5465,
											"end": 5477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 5480,
											"end": 5488,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "DUP8"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "AND"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "AND"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "JUMPDEST"
										},
										{
											"begin": 5465,
											"end": 5503,
											"name": "SWAP1"
										},
										{
											"begin": 5465,
											"end": 5503,
											"name": "POP"
										},
										{
											"begin": 5516,
											"end": 5526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5559,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP8"
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "DUP8"
										},
										{
											"begin": 5529,
											"end": 5537,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 5529,
											"end": 5559,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5559,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 5529,
											"end": 5559,
											"name": "JUMPDEST"
										},
										{
											"begin": 5570,
											"end": 5587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5601,
											"name": "SLOAD"
										},
										{
											"begin": 5516,
											"end": 5559,
											"name": "SWAP1"
										},
										{
											"begin": 5516,
											"end": 5559,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5694,
											"end": 5711,
											"name": "DUP1"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "JUMPI"
										},
										{
											"begin": 5740,
											"end": 5794,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 473,
											"end": 478,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5740,
											"end": 5771,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5750,
											"end": 5757,
											"name": "DUP8"
										},
										{
											"begin": 5762,
											"end": 5769,
											"name": "DUP8"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5761,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "AND"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "JUMPDEST"
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5740,
											"end": 5771,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5740,
											"end": 5794,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 5740,
											"end": 5794,
											"name": "JUMPDEST"
										},
										{
											"begin": 5728,
											"end": 5794,
											"name": "SWAP9"
										},
										{
											"begin": 5728,
											"end": 5794,
											"name": "POP"
										},
										{
											"begin": 5808,
											"end": 5844,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 478,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5808,
											"end": 5813,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5808,
											"end": 5844,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5808,
											"end": 5844,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 5808,
											"end": 5844,
											"name": "JUMPDEST"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "JUMP"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "JUMPDEST"
										},
										{
											"begin": 5944,
											"end": 6030,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "DUP10"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "AND"
										},
										{
											"begin": 5953,
											"end": 5978,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "DUP7"
										},
										{
											"begin": 5965,
											"end": 5977,
											"name": "DUP5"
										},
										{
											"begin": 5953,
											"end": 5978,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5953,
											"end": 5964,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5953,
											"end": 5978,
											"name": "AND"
										},
										{
											"begin": 5953,
											"end": 5978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5953,
											"end": 5978,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 5953,
											"end": 5978,
											"name": "JUMPDEST"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "DUP2"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "JUMPI"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "INVALID"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "JUMPDEST"
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "DUP10"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "AND"
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5992,
											"end": 5999,
											"name": "DUP7"
										},
										{
											"begin": 6004,
											"end": 6016,
											"name": "DUP6"
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6003,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "AND"
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "JUMPDEST"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "DUP2"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "JUMPI"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "INVALID"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "JUMPDEST"
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "DIV"
										},
										{
											"begin": 5944,
											"end": 5952,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 5944,
											"end": 6030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5944,
											"end": 6030,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5944,
											"end": 6030,
											"name": "JUMPDEST"
										},
										{
											"begin": 5932,
											"end": 6030,
											"name": "SWAP9"
										},
										{
											"begin": 5932,
											"end": 6030,
											"name": "POP"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 5690,
											"end": 6042,
											"name": "JUMPDEST"
										},
										{
											"begin": 6072,
											"end": 6073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "DUP10"
										},
										{
											"begin": 6060,
											"end": 6073,
											"name": "GT"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "JUMPI"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP2"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "MSTORE"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "ADD"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP1"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP1"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "ADD"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP3"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP2"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "SUB"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP3"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "MSTORE"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP2"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "MSTORE"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "ADD"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP1"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH data",
											"value": "6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "SWAP2"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "CODECOPY"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "ADD"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "SWAP2"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "MLOAD"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "DUP1"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "SWAP2"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "SUB"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "SWAP1"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "REVERT"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 6052,
											"end": 6118,
											"name": "JUMPDEST"
										},
										{
											"begin": 6129,
											"end": 6149,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 6135,
											"end": 6137,
											"name": "DUP11"
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "DUP11"
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 6129,
											"end": 6149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6129,
											"end": 6149,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 6129,
											"end": 6149,
											"name": "JUMPDEST"
										},
										{
											"begin": 6162,
											"end": 6211,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 6170,
											"end": 6178,
											"name": "DUP7"
										},
										{
											"begin": 6180,
											"end": 6188,
											"name": "DUP7"
										},
										{
											"begin": 6190,
											"end": 6199,
											"name": "DUP11"
										},
										{
											"begin": 6201,
											"end": 6210,
											"name": "DUP11"
										},
										{
											"begin": 6162,
											"end": 6169,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 6162,
											"end": 6211,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6162,
											"end": 6211,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 6162,
											"end": 6211,
											"name": "JUMPDEST"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "DUP2"
										},
										{
											"begin": 6222,
											"end": 6269,
											"name": "ISZERO"
										},
										{
											"begin": 6222,
											"end": 6269,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 6222,
											"end": 6269,
											"name": "JUMPI"
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "SLOAD"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6246,
											"end": 6254,
											"name": "DUP1"
										},
										{
											"begin": 6246,
											"end": 6254,
											"name": "DUP3"
										},
										{
											"begin": 6246,
											"end": 6254,
											"name": "AND"
										},
										{
											"begin": 6246,
											"end": 6254,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "SWAP1"
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "DIV"
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "AND"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6241,
											"end": 6259,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "AND"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 6241,
											"end": 6269,
											"name": "JUMPDEST"
										},
										{
											"begin": 6233,
											"end": 6238,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6233,
											"end": 6269,
											"name": "SSTORE"
										},
										{
											"begin": 6222,
											"end": 6269,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 6222,
											"end": 6269,
											"name": "JUMPDEST"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP1"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "MLOAD"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP6"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP6"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "MSTORE"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP2"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "MLOAD"
										},
										{
											"begin": 6330,
											"end": 6340,
											"name": "CALLER"
										},
										{
											"begin": 6330,
											"end": 6340,
											"name": "SWAP3"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "SWAP3"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "DUP3"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "SUB"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "ADD"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "SWAP1"
										},
										{
											"begin": 6325,
											"end": 6359,
											"name": "LOG2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "SWAP5"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "SWAP7"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 6367,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "MSTORE"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "MSTORE"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "KECCAK256"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SLOAD"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 362,
											"end": 403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "JUMPDEST"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "SLOAD"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "DUP2"
										},
										{
											"begin": 1040,
											"end": 1057,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMPDEST"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "KECCAK256"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "JUMPDEST"
										},
										{
											"begin": 6528,
											"end": 6540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6554,
											"name": "DUP1"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "EQ"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPI"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "REVERT"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SSTORE"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 6609,
											"end": 6622,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 6609,
											"end": 6620,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 6609,
											"end": 6622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6609,
											"end": 6622,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 6609,
											"end": 6622,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "SLOAD"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "SLOAD"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MSTORE"
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "ADDRESS"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP3"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MSTORE"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP1"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MLOAD"
										},
										{
											"begin": 6567,
											"end": 6622,
											"name": "SWAP5"
										},
										{
											"begin": 6567,
											"end": 6622,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6567,
											"end": 6622,
											"name": "SWAP3"
										},
										{
											"begin": 6567,
											"end": 6622,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "SWAP2"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP3"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "AND"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "SWAP4"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "SWAP2"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "AND"
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "SWAP2"
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "SWAP2"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP5"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "SWAP2"
										},
										{
											"begin": 6826,
											"end": 6851,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6826,
											"end": 6851,
											"name": "SWAP2"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP4"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP3"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP3"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP2"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP1"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP3"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP1"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SUB"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP7"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "GAS"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "STATICCALL"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MLOAD"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MLOAD"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP2"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "MSTORE"
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "ADDRESS"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP3"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "ADD"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "MSTORE"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "MLOAD"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP2"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6877,
											"end": 6890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6890,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6893,
											"end": 6918,
											"name": "DUP6"
										},
										{
											"begin": 6893,
											"end": 6918,
											"name": "AND"
										},
										{
											"begin": 6893,
											"end": 6918,
											"name": "SWAP2"
										},
										{
											"begin": 6893,
											"end": 6918,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6893,
											"end": 6918,
											"name": "SWAP2"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP4"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "ADD"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP3"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "SWAP3"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP2"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP3"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SUB"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "ADD"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP2"
										},
										{
											"begin": 6893,
											"end": 6918,
											"name": "DUP7"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "DUP1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "POP"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "GAS"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "STATICCALL"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "POP"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "POP"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "POP"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "POP"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "MLOAD"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "MLOAD"
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "ADDRESS"
										},
										{
											"begin": 6944,
											"end": 6958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "SWAP1"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "DUP2"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "MSTORE"
										},
										{
											"begin": 6961,
											"end": 6970,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "MSTORE"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "DUP2"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "KECCAK256"
										},
										{
											"begin": 6961,
											"end": 6985,
											"name": "SLOAD"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP2"
										},
										{
											"begin": 6893,
											"end": 6933,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7011,
											"end": 7041,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP9"
										},
										{
											"begin": 7031,
											"end": 7040,
											"name": "DUP9"
										},
										{
											"begin": 7011,
											"end": 7019,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 7011,
											"end": 7041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7011,
											"end": 7041,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 7011,
											"end": 7041,
											"name": "JUMPDEST"
										},
										{
											"begin": 7052,
											"end": 7069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7083,
											"name": "SLOAD"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "SWAP1"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7072,
											"end": 7083,
											"name": "DUP1"
										},
										{
											"begin": 7182,
											"end": 7205,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 7182,
											"end": 7191,
											"name": "DUP5"
										},
										{
											"begin": 7196,
											"end": 7204,
											"name": "DUP8"
										},
										{
											"begin": 7182,
											"end": 7205,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7195,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7182,
											"end": 7205,
											"name": "AND"
										},
										{
											"begin": 7182,
											"end": 7205,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7182,
											"end": 7205,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 7182,
											"end": 7205,
											"name": "JUMPDEST"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "DUP2"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "JUMPI"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "INVALID"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "JUMPDEST"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "DIV"
										},
										{
											"begin": 7182,
											"end": 7220,
											"name": "SWAP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "DUP1"
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 7289,
											"end": 7298,
											"name": "DUP5"
										},
										{
											"begin": 7303,
											"end": 7311,
											"name": "DUP7"
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7289,
											"end": 7302,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "AND"
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "JUMPDEST"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "DUP2"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "JUMPI"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "INVALID"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "JUMPDEST"
										},
										{
											"begin": 7289,
											"end": 7327,
											"name": "DIV"
										},
										{
											"begin": 7279,
											"end": 7327,
											"name": "SWAP10"
										},
										{
											"begin": 7279,
											"end": 7327,
											"name": "POP"
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "DUP12"
										},
										{
											"begin": 7394,
											"end": 7405,
											"name": "GT"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "DUP1"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "ISZERO"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "JUMPI"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "POP"
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7409,
											"end": 7416,
											"name": "DUP11"
										},
										{
											"begin": 7409,
											"end": 7420,
											"name": "GT"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "JUMPDEST"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "JUMPI"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP2"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "MSTORE"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "ADD"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP1"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP1"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "ADD"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP3"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP2"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "SUB"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP3"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "MSTORE"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP2"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "MSTORE"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "ADD"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP1"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH data",
											"value": "57EBFB4DD8B5082CDBA0F23C17077E3B0ECB9782A51E0E9A15E9BC8C4B30C562"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "SWAP2"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "CODECOPY"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "ADD"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "SWAP2"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "POP"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "POP"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "MLOAD"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "DUP1"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "SWAP2"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "SUB"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "SWAP1"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "REVERT"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 7386,
											"end": 7465,
											"name": "JUMPDEST"
										},
										{
											"begin": 7476,
											"end": 7507,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "ADDRESS"
										},
										{
											"begin": 7497,
											"end": 7506,
											"name": "DUP5"
										},
										{
											"begin": 7476,
											"end": 7481,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 7476,
											"end": 7507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7476,
											"end": 7507,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 7476,
											"end": 7507,
											"name": "JUMPDEST"
										},
										{
											"begin": 7518,
											"end": 7553,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 7532,
											"end": 7539,
											"name": "DUP8"
										},
										{
											"begin": 7541,
											"end": 7543,
											"name": "DUP14"
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "DUP14"
										},
										{
											"begin": 7518,
											"end": 7531,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7518,
											"end": 7553,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7518,
											"end": 7553,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 7518,
											"end": 7553,
											"name": "JUMPDEST"
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 7578,
											"end": 7585,
											"name": "DUP7"
										},
										{
											"begin": 7587,
											"end": 7589,
											"name": "DUP14"
										},
										{
											"begin": 7591,
											"end": 7598,
											"name": "DUP13"
										},
										{
											"begin": 7564,
											"end": 7577,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "JUMPDEST"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "ADDRESS"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP3"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP1"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "DUP10"
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "AND"
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "SWAP2"
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "SWAP2"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP4"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP3"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP3"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP1"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP3"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP1"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SUB"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "DUP7"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "GAS"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "STATICCALL"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP2"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "MSTORE"
										},
										{
											"begin": 7717,
											"end": 7721,
											"name": "ADDRESS"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP3"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "ADD"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "MSTORE"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "MLOAD"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "DUP9"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "AND"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "SWAP2"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "SWAP2"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP3"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "ADD"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP3"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7661,
											"name": "SWAP3"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP2"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP3"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SUB"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "ADD"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP2"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "DUP7"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP1"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "POP"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "GAS"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "STATICCALL"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "POP"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "POP"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "POP"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "POP"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "MLOAD"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "MLOAD"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7736,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 7744,
											"end": 7752,
											"name": "DUP6"
										},
										{
											"begin": 7683,
											"end": 7723,
											"name": "DUP6"
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP12"
										},
										{
											"begin": 7775,
											"end": 7784,
											"name": "DUP12"
										},
										{
											"begin": 7736,
											"end": 7743,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 7736,
											"end": 7785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7736,
											"end": 7785,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 7736,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7800,
											"end": 7805,
											"name": "DUP2"
										},
										{
											"begin": 7796,
											"end": 7843,
											"name": "ISZERO"
										},
										{
											"begin": 7796,
											"end": 7843,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 7796,
											"end": 7843,
											"name": "JUMPI"
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "SLOAD"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7820,
											"end": 7828,
											"name": "DUP1"
										},
										{
											"begin": 7820,
											"end": 7828,
											"name": "DUP3"
										},
										{
											"begin": 7820,
											"end": 7828,
											"name": "AND"
										},
										{
											"begin": 7820,
											"end": 7828,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "SWAP1"
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "DIV"
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "AND"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "AND"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 7815,
											"end": 7843,
											"name": "JUMPDEST"
										},
										{
											"begin": 7807,
											"end": 7812,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 7807,
											"end": 7843,
											"name": "SSTORE"
										},
										{
											"begin": 7796,
											"end": 7843,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 7796,
											"end": 7843,
											"name": "JUMPDEST"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP1"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "MLOAD"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP13"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP2"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "MSTORE"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP2"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "ADD"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP13"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "MSTORE"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP2"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP16"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "AND"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP3"
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "CALLER"
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "SWAP3"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP3"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP2"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SUB"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP2"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "ADD"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1"
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "LOG3"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "DUP2"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "SSTORE"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP2"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "POP"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "SWAP2"
										},
										{
											"begin": 6479,
											"end": 7945,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4656495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 243,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2395,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "CALLER"
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "DUP5"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "DUP5"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "JUMPDEST"
										},
										{
											"begin": 473,
											"end": 478,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "DUP2"
										},
										{
											"begin": 432,
											"end": 478,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "EQ"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPI"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "REVERT"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SSTORE"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SLOAD"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "SLOAD"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SLOAD"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP2"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "MSTORE"
										},
										{
											"begin": 10207,
											"end": 10211,
											"name": "ADDRESS"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP3"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "ADD"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "MSTORE"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP5"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP6"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "AND"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP5"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "SWAP1"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "SWAP4"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "AND"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "SWAP3"
										},
										{
											"begin": 10146,
											"end": 10228,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 10146,
											"end": 10228,
											"name": "SWAP3"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP6"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP3"
										},
										{
											"begin": 10169,
											"end": 10171,
											"name": "DUP8"
										},
										{
											"begin": 10169,
											"end": 10171,
											"name": "SWAP3"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "AND"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP6"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP2"
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "SWAP2"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP3"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "ADD"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP3"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP3"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP2"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP3"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SUB"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "ADD"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP7"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "DUP1"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "POP"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "GAS"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "STATICCALL"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "POP"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "POP"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "POP"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "POP"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "MLOAD"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "MLOAD"
										},
										{
											"begin": 10173,
											"end": 10213,
											"name": "SWAP1"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10173,
											"end": 10217,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "AND"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 10173,
											"end": 10227,
											"name": "JUMPDEST"
										},
										{
											"begin": 10146,
											"end": 10159,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 10146,
											"end": 10228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10146,
											"end": 10228,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 10146,
											"end": 10228,
											"name": "JUMPDEST"
										},
										{
											"begin": 10311,
											"end": 10319,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10311,
											"end": 10319,
											"name": "SLOAD"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP2"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "MSTORE"
										},
										{
											"begin": 10300,
											"end": 10304,
											"name": "ADDRESS"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP3"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "ADD"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "MSTORE"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "MLOAD"
										},
										{
											"begin": 10239,
											"end": 10321,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 10239,
											"end": 10321,
											"name": "SWAP3"
										},
										{
											"begin": 10253,
											"end": 10260,
											"name": "DUP5"
										},
										{
											"begin": 10253,
											"end": 10260,
											"name": "SWAP3"
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "DUP8"
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "SWAP3"
										},
										{
											"begin": 10266,
											"end": 10320,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 10266,
											"end": 10320,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10311,
											"end": 10319,
											"name": "SWAP1"
										},
										{
											"begin": 10311,
											"end": 10319,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10311,
											"end": 10319,
											"name": "AND"
										},
										{
											"begin": 10311,
											"end": 10319,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "DUP7"
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "AND"
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "SWAP2"
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "SWAP2"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP3"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "ADD"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP3"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP3"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP2"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP3"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SWAP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "SUB"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "ADD"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP2"
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "DUP7"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "DUP1"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10266,
											"end": 10306,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 10239,
											"end": 10321,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 10239,
											"end": 10321,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9995,
											"end": 10329,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "AND"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": 2997,
											"end": 3012,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2985,
											"end": 2993,
											"name": "DUP5"
										},
										{
											"begin": 2985,
											"end": 3012,
											"name": "LT"
										},
										{
											"begin": 2985,
											"end": 3012,
											"name": "ISZERO"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "JUMPI"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP2"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP3"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP3"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP3"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MSTORE"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "MLOAD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "DUP2"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SUB"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "ADD"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "REVERT"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 2977,
											"end": 3035,
											"name": "JUMPDEST"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP10"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "AND"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "MSTORE"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "MSTORE"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP4"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "KECCAK256"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SLOAD"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP3"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP3"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MLOAD"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP2"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP5"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP14"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "AND"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP7"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP13"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP12"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP2"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP6"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "DUP3"
										},
										{
											"begin": 3196,
											"end": 3273,
											"name": "MSTORE"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "MLOAD"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "DUP4"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "ADD"
										},
										{
											"begin": 3186,
											"end": 3274,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP6"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP6"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "SWAP7"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP5"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "DUP3"
										},
										{
											"begin": 3087,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "DUP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "MLOAD"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "DUP4"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "ADD"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "SWAP7"
										},
										{
											"begin": 3063,
											"end": 3300,
											"name": "KECCAK256"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP6"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP4"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP7"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP10"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "AND"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP6"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP9"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP8"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MLOAD"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "SWAP2"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "SWAP4"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP3"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SUB"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP2"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3262,
											"name": "DUP6"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "GAS"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "STATICCALL"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "ADD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MLOAD"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP2"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "AND"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP1"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP1"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "JUMPI"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "POP"
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "EQ"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 3383,
											"end": 3442,
											"name": "JUMPDEST"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "JUMPI"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP3"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MSTORE"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "MLOAD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "DUP2"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SUB"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "ADD"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "REVERT"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 3375,
											"end": 3475,
											"name": "JUMPDEST"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 3495,
											"end": 3500,
											"name": "DUP10"
										},
										{
											"begin": 3502,
											"end": 3509,
											"name": "DUP10"
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP10"
										},
										{
											"begin": 3486,
											"end": 3494,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 3486,
											"end": 3517,
											"name": "JUMPDEST"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 2851,
											"end": 3525,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP3"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP4"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP5"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "KECCAK256"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "KECCAK256"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "SLOAD"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 471,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "JUMPDEST"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "EQ"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPI"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "REVERT"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1267,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "SSTORE"
										},
										{
											"begin": 10434,
											"end": 10440,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 10434,
											"end": 10440,
											"name": "SLOAD"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP1"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP2"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "MSTORE"
										},
										{
											"begin": 10460,
											"end": 10464,
											"name": "ADDRESS"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP3"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "ADD"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "MSTORE"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP1"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "MLOAD"
										},
										{
											"begin": 10419,
											"end": 10528,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 10419,
											"end": 10528,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10434,
											"end": 10440,
											"name": "AND"
										},
										{
											"begin": 10434,
											"end": 10440,
											"name": "SWAP2"
										},
										{
											"begin": 10427,
											"end": 10451,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10427,
											"end": 10451,
											"name": "SWAP2"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP1"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP4"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "ADD"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP3"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP3"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP2"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP1"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP3"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP1"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SUB"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "ADD"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP2"
										},
										{
											"begin": 10434,
											"end": 10440,
											"name": "DUP7"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "DUP1"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "GAS"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "STATICCALL"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "MLOAD"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "MLOAD"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "SLOAD"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP2"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "MSTORE"
										},
										{
											"begin": 10501,
											"end": 10505,
											"name": "ADDRESS"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP3"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "ADD"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "MSTORE"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "SWAP3"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "AND"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "SWAP2"
										},
										{
											"begin": 10468,
											"end": 10492,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10468,
											"end": 10492,
											"name": "SWAP2"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP3"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "ADD"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SWAP3"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10427,
											"end": 10466,
											"name": "SWAP3"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SWAP2"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP3"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SWAP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "SUB"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "ADD"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP2"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "DUP7"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "DUP1"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "POP"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "GAS"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "STATICCALL"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "POP"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "POP"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "POP"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "POP"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "MLOAD"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10468,
											"end": 10507,
											"name": "MLOAD"
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "DUP3"
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "AND"
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10519,
											"end": 10527,
											"name": "SWAP1"
										},
										{
											"begin": 10519,
											"end": 10527,
											"name": "DIV"
										},
										{
											"begin": 10519,
											"end": 10527,
											"name": "AND"
										},
										{
											"begin": 10419,
											"end": 10426,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 10419,
											"end": 10528,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10419,
											"end": 10528,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 10419,
											"end": 10528,
											"name": "JUMPDEST"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "SSTORE"
										},
										{
											"begin": 10378,
											"end": 10536,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "JUMPDEST"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "MLOAD"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "SWAP2"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP2"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP6"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP2"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "AND"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP4"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "ADD"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "MSTORE"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP1"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP4"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "ADD"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP7"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "SWAP1"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "MSTORE"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP5"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "SWAP1"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "SWAP3"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "ADD"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "DUP5"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "DUP2"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP3"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "MLOAD"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP2"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "MLOAD"
										},
										{
											"begin": 1643,
											"end": 1655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1655,
											"name": "SWAP5"
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "SWAP5"
										},
										{
											"begin": 1678,
											"end": 1688,
											"name": "DUP10"
										},
										{
											"begin": 1678,
											"end": 1688,
											"name": "AND"
										},
										{
											"begin": 1678,
											"end": 1688,
											"name": "SWAP4"
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "SWAP3"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP2"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP3"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP1"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP1"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP1"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "ADD"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP2"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "MLOAD"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP1"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP4"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SUB"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP2"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "DUP7"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "GAS"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "CALL"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP2"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1642,
											"end": 1733,
											"name": "SWAP2"
										},
										{
											"begin": 1642,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1642,
											"end": 1733,
											"name": "SWAP2"
										},
										{
											"begin": 1642,
											"end": 1733,
											"name": "POP"
										},
										{
											"begin": 1752,
											"end": 1759,
											"name": "DUP2"
										},
										{
											"begin": 1752,
											"end": 1809,
											"name": "DUP1"
										},
										{
											"begin": 1752,
											"end": 1809,
											"name": "ISZERO"
										},
										{
											"begin": 1752,
											"end": 1809,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1752,
											"end": 1809,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "DUP1"
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "MLOAD"
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "ISZERO"
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "DUP1"
										},
										{
											"begin": 1764,
											"end": 1808,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1764,
											"end": 1808,
											"name": "JUMPI"
										},
										{
											"begin": 1764,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1795,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "ADD"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "MLOAD"
										},
										{
											"begin": 1764,
											"end": 1808,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 1764,
											"end": 1808,
											"name": "JUMPDEST"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "JUMPI"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "DUP1"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "DUP3"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "DUP3"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "556E697377617056323A205452414E534645525F4641494C4544000000000000"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "DUP3"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "MSTORE"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "MLOAD"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "SUB"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "ADD"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "SWAP1"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "REVERT"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 1744,
											"end": 1840,
											"name": "JUMPDEST"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1848,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 576,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 434,
											"end": 576,
											"name": "JUMPDEST"
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 513,
											"end": 519,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 519,
											"name": "ISZERO"
										},
										{
											"begin": 513,
											"end": 519,
											"name": "DUP1"
										},
										{
											"begin": 513,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 513,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP3"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "MUL"
										},
										{
											"begin": 542,
											"end": 543,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 538,
											"name": "DUP3"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 523,
											"end": 538,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 523,
											"end": 538,
											"name": "JUMPI"
										},
										{
											"begin": 523,
											"end": 538,
											"name": "INVALID"
										},
										{
											"begin": 523,
											"end": 538,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 523,
											"end": 538,
											"name": "JUMPDEST"
										},
										{
											"begin": 523,
											"end": 538,
											"name": "DIV"
										},
										{
											"begin": 523,
											"end": 543,
											"name": "EQ"
										},
										{
											"begin": 513,
											"end": 543,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 513,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "JUMPI"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "MLOAD"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "SUB"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 568,
											"name": "REVERT"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "DUP1"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "DUP3"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "SUB"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "DUP3"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "GT"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "REVERT"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "DUP5"
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "GT"
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "DUP1"
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "ISZERO"
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "SWAP1"
										},
										{
											"begin": 2789,
											"end": 2839,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 2789,
											"end": 2839,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "DUP4"
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "GT"
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "ISZERO"
										},
										{
											"begin": 2789,
											"end": 2839,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 2789,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "JUMPI"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "MSTORE"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "DUP3"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "MSTORE"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "DUP3"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "556E697377617056323A204F564552464C4F57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "DUP3"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "MSTORE"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "MLOAD"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "SUB"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "REVERT"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 2781,
											"end": 2863,
											"name": "JUMPDEST"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "SLOAD"
										},
										{
											"begin": 2905,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2905,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2905,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2905,
											"end": 2928,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "SWAP1"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "DIV"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "DUP2"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "AND"
										},
										{
											"begin": 2961,
											"end": 2996,
											"name": "DUP3"
										},
										{
											"begin": 2961,
											"end": 2996,
											"name": "SUB"
										},
										{
											"begin": 2961,
											"end": 2996,
											"name": "SWAP1"
										},
										{
											"begin": 3034,
											"end": 3049,
											"name": "DUP2"
										},
										{
											"begin": 3034,
											"end": 3049,
											"name": "AND"
										},
										{
											"begin": 3034,
											"end": 3049,
											"name": "ISZERO"
										},
										{
											"begin": 3034,
											"end": 3049,
											"name": "DUP1"
										},
										{
											"begin": 3034,
											"end": 3049,
											"name": "ISZERO"
										},
										{
											"begin": 3034,
											"end": 3049,
											"name": "SWAP1"
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "DUP5"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "AND"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "ISZERO"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "ISZERO"
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "JUMPDEST"
										},
										{
											"begin": 3034,
											"end": 3085,
											"name": "DUP1"
										},
										{
											"begin": 3034,
											"end": 3085,
											"name": "ISZERO"
										},
										{
											"begin": 3034,
											"end": 3085,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 3034,
											"end": 3085,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "DUP4"
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "AND"
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "ISZERO"
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "ISZERO"
										},
										{
											"begin": 3034,
											"end": 3085,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 3034,
											"end": 3085,
											"name": "JUMPDEST"
										},
										{
											"begin": 3030,
											"end": 3366,
											"name": "ISZERO"
										},
										{
											"begin": 3030,
											"end": 3366,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 3030,
											"end": 3366,
											"name": "JUMPI"
										},
										{
											"begin": 3240,
											"end": 3251,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3251,
											"name": "AND"
										},
										{
											"begin": 3192,
											"end": 3236,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "DUP6"
										},
										{
											"begin": 3192,
											"end": 3219,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "DUP7"
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3192,
											"end": 3219,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3219,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 3192,
											"end": 3219,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3192,
											"end": 3225,
											"name": "AND"
										},
										{
											"begin": 3192,
											"end": 3225,
											"name": "SWAP1"
										},
										{
											"begin": 3192,
											"end": 3236,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3192,
											"end": 3225,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 3192,
											"end": 3236,
											"name": "AND"
										},
										{
											"begin": 3192,
											"end": 3236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3236,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 3192,
											"end": 3236,
											"name": "JUMPDEST"
										},
										{
											"begin": 3163,
											"end": 3183,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3163,
											"end": 3251,
											"name": "DUP1"
										},
										{
											"begin": 3163,
											"end": 3251,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "AND"
										},
										{
											"begin": 3187,
											"end": 3251,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3251,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3251,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3251,
											"name": "MUL"
										},
										{
											"begin": 3163,
											"end": 3251,
											"name": "ADD"
										},
										{
											"begin": 3163,
											"end": 3251,
											"name": "SWAP1"
										},
										{
											"begin": 3163,
											"end": 3251,
											"name": "SSTORE"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "AND"
										},
										{
											"begin": 3295,
											"end": 3339,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "DUP5"
										},
										{
											"begin": 3295,
											"end": 3322,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP8"
										},
										{
											"begin": 3295,
											"end": 3311,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3295,
											"end": 3322,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3295,
											"end": 3339,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 3295,
											"end": 3339,
											"name": "JUMPDEST"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3266,
											"end": 3354,
											"name": "DUP1"
										},
										{
											"begin": 3266,
											"end": 3354,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3290,
											"end": 3340,
											"name": "SWAP3"
										},
										{
											"begin": 3290,
											"end": 3340,
											"name": "SWAP1"
										},
										{
											"begin": 3290,
											"end": 3340,
											"name": "SWAP3"
										},
										{
											"begin": 3290,
											"end": 3340,
											"name": "AND"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "SWAP3"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "SWAP3"
										},
										{
											"begin": 3290,
											"end": 3354,
											"name": "MUL"
										},
										{
											"begin": 3266,
											"end": 3354,
											"name": "ADD"
										},
										{
											"begin": 3266,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3266,
											"end": 3354,
											"name": "SSTORE"
										},
										{
											"begin": 3030,
											"end": 3366,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 3030,
											"end": 3366,
											"name": "JUMPDEST"
										},
										{
											"begin": 3376,
											"end": 3384,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "DUP1"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "DUP9"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "DUP2"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "AND"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "SWAP2"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "SWAP2"
										},
										{
											"begin": 3376,
											"end": 3404,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "DUP9"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "DUP4"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "AND"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "DUP2"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "MUL"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SWAP2"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SWAP1"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SWAP2"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "DUP8"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "MUL"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "OR"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "SWAP3"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "DUP4"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "SWAP1"
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "SSTORE"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "DUP1"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "MLOAD"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "DUP5"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "DUP5"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "AND"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "MSTORE"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "SWAP2"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "SWAP1"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "SWAP4"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "DIV"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "SWAP1"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "SWAP2"
										},
										{
											"begin": 3520,
											"end": 3528,
											"name": "AND"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "DUP3"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "MSTORE"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "MLOAD"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP3"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SUB"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP2"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "ADD"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP1"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "LOG1"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 3537,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP1"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP5"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "AND"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "SWAP1"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP2"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP1"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP4"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "KECCAK256"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP5"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP8"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "AND"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP1"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP5"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP5"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP3"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "MSTORE"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP2"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "DUP3"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "SWAP1"
										},
										{
											"begin": 1916,
											"end": 1941,
											"name": "KECCAK256"
										},
										{
											"begin": 1916,
											"end": 1949,
											"name": "DUP6"
										},
										{
											"begin": 1916,
											"end": 1949,
											"name": "SWAP1"
										},
										{
											"begin": 1916,
											"end": 1949,
											"name": "SSTORE"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "MLOAD"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP6"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "MSTORE"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "MLOAD"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP3"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "DUP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP1"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SUB"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP1"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP2"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "ADD"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "SWAP1"
										},
										{
											"begin": 1965,
											"end": 1996,
											"name": "LOG3"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 2004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP4"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "AND"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SWAP1"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP2"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "MSTORE"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "MSTORE"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SWAP1"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "KECCAK256"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SLOAD"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP3"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2106,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "AND"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP6"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "AND"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "SWAP1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP2"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "MSTORE"
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "MSTORE"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "DUP3"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "KECCAK256"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SWAP4"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SWAP1"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SWAP4"
										},
										{
											"begin": 2088,
											"end": 2132,
											"name": "SSTORE"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "DUP5"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "KECCAK256"
										},
										{
											"begin": 2159,
											"end": 2172,
											"name": "SLOAD"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "DUP3"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 2159,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP5"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "AND"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "MSTORE"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "MSTORE"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "DUP3"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "KECCAK256"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SWAP5"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SWAP5"
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "SSTORE"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "MLOAD"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP6"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "MSTORE"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "MLOAD"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP2"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "SWAP4"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP8"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "AND"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP2"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP3"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SUB"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "ADD"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "LOG3"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2012,
											"end": 2232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "JUMPDEST"
										},
										{
											"begin": 3700,
											"end": 3710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3736,
											"name": "DUP1"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "SWAP1"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "SLOAD"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "SWAP1"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "EXP"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "SWAP1"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3739,
											"end": 3771,
											"name": "AND"
										},
										{
											"begin": 3739,
											"end": 3771,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MLOAD"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP2"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "AND"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SHL"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP2"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MSTORE"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "ADD"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MLOAD"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP1"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP4"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SUB"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP2"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP7"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP1"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "POP"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "GAS"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "STATICCALL"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "POP"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "POP"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "POP"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "POP"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MLOAD"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MLOAD"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "SLOAD"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "CF8E9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP2"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "MSTORE"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SWAP3"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3784,
											"end": 3803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3803,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "SWAP3"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "AND"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "SWAP2"
										},
										{
											"begin": 3806,
											"end": 3844,
											"name": "PUSH",
											"value": "CF8E9A70"
										},
										{
											"begin": 3806,
											"end": 3844,
											"name": "SWAP2"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP3"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "ADD"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP3"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SWAP3"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP2"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP3"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SUB"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "ADD"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP2"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "DUP7"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "DUP1"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "GAS"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "STATICCALL"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "MLOAD"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "DUP5"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "AND"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "ISZERO"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "DUP1"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "ISZERO"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP2"
										},
										{
											"begin": 3806,
											"end": 3846,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "SWAP1"
										},
										{
											"begin": 3940,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 3940,
											"end": 5008,
											"name": "JUMPI"
										},
										{
											"begin": 3970,
											"end": 3981,
											"name": "DUP1"
										},
										{
											"begin": 3970,
											"end": 3981,
											"name": "ISZERO"
										},
										{
											"begin": 3966,
											"end": 4938,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 3966,
											"end": 4938,
											"name": "JUMPI"
										},
										{
											"begin": 4002,
											"end": 4012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4056,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "DUP10"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "DUP2"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "AND"
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "SWAP1"
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "DUP10"
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "AND"
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4025,
											"end": 4044,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "AND"
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4015,
											"end": 4056,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 4015,
											"end": 4056,
											"name": "JUMPDEST"
										},
										{
											"begin": 4002,
											"end": 4056,
											"name": "SWAP1"
										},
										{
											"begin": 4002,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP4"
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "JUMPDEST"
										},
										{
											"begin": 4075,
											"end": 4109,
											"name": "SWAP1"
										},
										{
											"begin": 4075,
											"end": 4109,
											"name": "POP"
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP1"
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP3"
										},
										{
											"begin": 4132,
											"end": 4149,
											"name": "GT"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "ISZERO"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "JUMPI"
										},
										{
											"begin": 4174,
											"end": 4188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4228,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 4207,
											"end": 4227,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 4207,
											"end": 4212,
											"name": "DUP5"
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "DUP5"
										},
										{
											"begin": 4207,
											"end": 4227,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4207,
											"end": 4227,
											"name": "AND"
										},
										{
											"begin": 4207,
											"end": 4227,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4207,
											"end": 4227,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 4207,
											"end": 4227,
											"name": "JUMPDEST"
										},
										{
											"begin": 4191,
											"end": 4202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4202,
											"name": "SLOAD"
										},
										{
											"begin": 4191,
											"end": 4202,
											"name": "SWAP1"
										},
										{
											"begin": 4191,
											"end": 4228,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4191,
											"end": 4206,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4191,
											"end": 4228,
											"name": "AND"
										},
										{
											"begin": 4191,
											"end": 4228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4191,
											"end": 4228,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 4191,
											"end": 4228,
											"name": "JUMPDEST"
										},
										{
											"begin": 4174,
											"end": 4228,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4251,
											"end": 4267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 4287,
											"end": 4296,
											"name": "DUP4"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 4270,
											"end": 4275,
											"name": "DUP7"
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "AND"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "JUMPDEST"
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "SWAP1"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "AND"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "JUMPDEST"
										},
										{
											"begin": 4251,
											"end": 4297,
											"name": "SWAP1"
										},
										{
											"begin": 4251,
											"end": 4297,
											"name": "POP"
										},
										{
											"begin": 4320,
											"end": 4334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4360,
											"name": "DUP2"
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP4"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "DUP2"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPI"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "INVALID"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "JUMPDEST"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "DIV"
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4387,
											"end": 4400,
											"name": "DUP1"
										},
										{
											"begin": 4387,
											"end": 4400,
											"name": "ISZERO"
										},
										{
											"begin": 4383,
											"end": 4904,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 4383,
											"end": 4904,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "DUP8"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "AND"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "JUMPI"
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 4497,
											"end": 4502,
											"name": "DUP9"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP3"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "JUMPDEST"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "JUMP"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "JUMPDEST"
										},
										{
											"begin": 4604,
											"end": 4627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4631,
											"end": 4640,
											"name": "DUP3"
										},
										{
											"begin": 4631,
											"end": 4644,
											"name": "DIV"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4630,
											"end": 4649,
											"name": "MUL"
										},
										{
											"begin": 4604,
											"end": 4649,
											"name": "SWAP1"
										},
										{
											"begin": 4604,
											"end": 4649,
											"name": "POP"
										},
										{
											"begin": 4680,
											"end": 4701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4705,
											"end": 4714,
											"name": "DUP4"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "DUP2"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "JUMPI"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "INVALID"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "JUMPDEST"
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "DIV"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4704,
											"end": 4723,
											"name": "MUL"
										},
										{
											"begin": 4680,
											"end": 4723,
											"name": "SWAP1"
										},
										{
											"begin": 4680,
											"end": 4723,
											"name": "POP"
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 4760,
											"end": 4765,
											"name": "DUP11"
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "DUP4"
										},
										{
											"begin": 4754,
											"end": 4759,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "JUMPDEST"
										},
										{
											"begin": 4817,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP10"
										},
										{
											"begin": 4836,
											"end": 4852,
											"name": "DUP3"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4817,
											"end": 4853,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4817,
											"end": 4853,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 4817,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "POP"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "POP"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 4429,
											"end": 4881,
											"name": "JUMPDEST"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "POP"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "POP"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "POP"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 4128,
											"end": 4923,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 4938,
											"name": "POP"
										},
										{
											"begin": 3966,
											"end": 4938,
											"name": "POP"
										},
										{
											"begin": 3966,
											"end": 4938,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 3966,
											"end": 4938,
											"name": "JUMPDEST"
										},
										{
											"begin": 3940,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 3940,
											"end": 5008,
											"name": "JUMP"
										},
										{
											"begin": 3940,
											"end": 5008,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 3940,
											"end": 5008,
											"name": "JUMPDEST"
										},
										{
											"begin": 4959,
											"end": 4970,
											"name": "DUP1"
										},
										{
											"begin": 4959,
											"end": 4970,
											"name": "ISZERO"
										},
										{
											"begin": 4955,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 4955,
											"end": 5008,
											"name": "JUMPI"
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "SSTORE"
										},
										{
											"begin": 4955,
											"end": 5008,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 4955,
											"end": 5008,
											"name": "JUMPDEST"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "POP"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "POP"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "POP"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "SWAP3"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "SWAP2"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "POP"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "POP"
										},
										{
											"begin": 3627,
											"end": 5015,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 390,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 385,
											"end": 386,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "GT"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "ISZERO"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP1"
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DUP3"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMPDEST"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "LT"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "ISZERO"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMPI"
										},
										{
											"begin": 497,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 498,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 498,
											"name": "POP"
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 530,
											"end": 531,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP3"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP6"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "JUMPI"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "INVALID"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DIV"
										},
										{
											"begin": 522,
											"end": 531,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "INVALID"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 536,
											"name": "DIV"
										},
										{
											"begin": 517,
											"end": 536,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 536,
											"name": "POP"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMP"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 460,
											"end": 552,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMP"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 381,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 573,
											"end": 579,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 579,
											"name": "ISZERO"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 569,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "SWAP2"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "POP"
										},
										{
											"begin": 317,
											"end": 620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1610,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1409,
											"end": 1610,
											"name": "JUMPDEST"
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "SLOAD"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "SWAP1"
										},
										{
											"begin": 1498,
											"end": 1503,
											"name": "DUP3"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1497,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "JUMPDEST"
										},
										{
											"begin": 1468,
											"end": 1479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1504,
											"name": "SWAP1"
										},
										{
											"begin": 1468,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1468,
											"end": 1504,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP4"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "AND"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "DUP2"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "MSTORE"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "MSTORE"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SWAP1"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "KECCAK256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SLOAD"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SWAP1"
										},
										{
											"begin": 1549,
											"end": 1554,
											"name": "DUP3"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "AND"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "DUP4"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "AND"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "MSTORE"
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "SWAP1"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "MSTORE"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "DUP1"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "DUP4"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "KECCAK256"
										},
										{
											"begin": 1515,
											"end": 1555,
											"name": "SWAP5"
										},
										{
											"begin": 1515,
											"end": 1555,
											"name": "SWAP1"
										},
										{
											"begin": 1515,
											"end": 1555,
											"name": "SWAP5"
										},
										{
											"begin": 1515,
											"end": 1555,
											"name": "SSTORE"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "DUP4"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "MLOAD"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "DUP6"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "DUP2"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "MSTORE"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP4"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "MLOAD"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "SWAP3"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "SWAP4"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "SWAP2"
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "SWAP3"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP3"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "DUP2"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP1"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SUB"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP1"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP2"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "ADD"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "SWAP1"
										},
										{
											"begin": 1571,
											"end": 1602,
											"name": "LOG3"
										},
										{
											"begin": 1409,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1610,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 182,
											"end": 183,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP4"
										},
										{
											"begin": 178,
											"end": 183,
											"name": "LT"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMPI"
										},
										{
											"begin": 190,
											"end": 191,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMP"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 178,
											"end": 191,
											"name": "JUMPDEST"
										},
										{
											"begin": 174,
											"end": 191,
											"name": "SWAP4"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 103,
											"end": 199,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 1827,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 1618,
											"end": 1827,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "DUP3"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "AND"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "SWAP1"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "DUP2"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "MSTORE"
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "MSTORE"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "SWAP1"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "KECCAK256"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "SLOAD"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "SWAP1"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP3"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1716,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "AND"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "DUP4"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "AND"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "DUP2"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "MSTORE"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "MSTORE"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "DUP2"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "KECCAK256"
										},
										{
											"begin": 1679,
											"end": 1723,
											"name": "SWAP2"
										},
										{
											"begin": 1679,
											"end": 1723,
											"name": "SWAP1"
										},
										{
											"begin": 1679,
											"end": 1723,
											"name": "SWAP2"
										},
										{
											"begin": 1679,
											"end": 1723,
											"name": "SSTORE"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "SLOAD"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "PUSH [tag]",
											"value": "341"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "SWAP1"
										},
										{
											"begin": 1764,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "tag",
											"value": "341"
										},
										{
											"begin": 1748,
											"end": 1770,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "DUP2"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "SSTORE"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "MLOAD"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "DUP4"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "MSTORE"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "DUP6"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "AND"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SUB"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "LOG3"
										},
										{
											"begin": 1618,
											"end": 1827,
											"name": "POP"
										},
										{
											"begin": 1618,
											"end": 1827,
											"name": "POP"
										},
										{
											"begin": 1618,
											"end": 1827,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 294,
											"end": 414,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 294,
											"end": 414,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 370,
											"end": 387,
											"name": "MUL"
										},
										{
											"begin": 370,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 485,
											"end": 593,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 485,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "DUP3"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "DUP5"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 585,
											"name": "SWAP4"
										},
										{
											"begin": 485,
											"end": 593,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 593,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "LT"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "ISZERO"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "JUMPI"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "REVERT"
										}
									],
									".data": {
										"10E2EFC32D8A31D3B2C11A545B3ED09C2DBABC58EF6DE4033929D0002E425B67": "556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"3F354EF449B2A9B081220CE21F57691008110B653EDC191D8288E60CEF58BB5F": "556e697377617056323a20494e53554646494349454e545f4c4951554944495459",
										"5339493DA7E2CBE77E17BEADF6B91132EB307939495F5F1797BF88D95539E83": "556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"57EBFB4DD8B5082CDBA0F23C17077E3B0ECB9782A51E0E9A15E9BC8C4B30C562": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":\"UniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0xa23394c09970eebb96a2d3ea6acf567227481324b512c34fefaa7adef1f88405\",\"urls\":[\"bzz-raw://38d54c4c61140e4ac49aebfd4cd4d735ecab07a4bd8adc20da1a43403bd7a522\",\"dweb:/ipfs/QmcyRp2SWmhW3CzbuiEe6XERiE7d2BaY9f6CS566G7VKnc\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0x72ce5860b945ba459b6f529f0bee4fc8b2aab990ad27d9f47ad2d561bcb78329\",\"urls\":[\"bzz-raw://3c5e0905c1b024475d48ba9ce97259791e2aceaa040d32c04869969965f3f070\",\"dweb:/ipfs/QmeVREgpdrizeUXFGYeb6ToR7uDPJpHygYvqgqcSicrc4G\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xa791b279660ee5eb66ebd4f23b539055d178ae24677f3a164567441ecfdcf73a\",\"urls\":[\"bzz-raw://06f36f585a8b82eb388ccccc4e8c483718a99a07f5f12d3217afc254ab139a68\",\"dweb:/ipfs/Qmedr3aAH6F3ZTgZJ3enoP92ZD8yNwiCStwtGknNXhiK8v\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0x514f1fef54c3ec96f0a9b4fbf4980ad71e8ffb237cfc8e872f18ad5d7a199cac\",\"urls\":[\"bzz-raw://33ea4f734ba9e3435cda61424cd7ed392d4b915b5fba33e8625807b08c6b9f77\",\"dweb:/ipfs/QmfSZ3J1ZJHfdX1RUFc3sKn4vpWJRBpaJnvLTgQLUsggcQ\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0xda3ed72159ac8321b9ee8b67893e0d42ac6f8180b8e1112e8724a9093a409541\",\"urls\":[\"bzz-raw://db4c5c04309ae947a14a464f22f37b76225749248eff9a6a9e184f314531533e\",\"dweb:/ipfs/QmaNHx4uQ79xhQ3SgCK4NodQR11oc4DRtkPGLqGSpB7jei\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x8bd197946e428740334fbb3244168d45977aeb692ac08576a57068f8a450454f\",\"urls\":[\"bzz-raw://8a40e12a5f06d1f28f33db9b00a6e4a04a42a9c8b579e1573085b6016363eb1a\",\"dweb:/ipfs/QmXchdVFLZ5okWwduCiEge6mSBdzTLTtU9fBhAjeEk7K8f\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6e301cd1c669825e95796a549af46ea9214abad484a2d687c9a8f4d3953457af\",\"urls\":[\"bzz-raw://1de1663b461dd369ecf043124025f4ce78fe281d6e972180012423584b9bb1ed\",\"dweb:/ipfs/QmNfYrPwNekvVs8nJLXp9v2b5AUMNUm7T7nNd9xdqozX7L\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":{\"keccak256\":\"0x59371bbb24653eabdec42dd004bc94c70536bd655b007b3175c89561597b258b\",\"urls\":[\"bzz-raw://a17afc98200f4dacc7a1b15adcdc6515abfbf42d78354d530e9df5966c301976\",\"dweb:/ipfs/QmeNz4PfMKN2nAmNxSBqVrWw6g1b3EpRa4ZuDpHq7kafh7\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xfe46a92953b0ebf82fc2a9f21f995beb60e845aaa7223bfb37711a3b41d6dc11\",\"urls\":[\"bzz-raw://06272423f21f7b375d85d3d4c0cb280a278b1f7f312af2bf002278e16bf48432\",\"dweb:/ipfs/QmXGGm8wvt8pZu2ob1HFk8qLTRATasvomjkaYBvcH3qU57\"]},\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0xe3bebc29aac628026f0eb6d0dd10d463b0b796fadfa0a1cfad1ae603c7d56539\",\"urls\":[\"bzz-raw://64b8a2f0b01eb74df50a00182874db88b10104deb8aa51f9125ac138cf394b89\",\"dweb:/ipfs/QmUYuj73nr6hxK5xmHdsq7wQjHuLC9iH6c89pcn9pDPhLF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 419,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 421,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 423,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 427,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 429,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "8",
								"type": "t_uint32"
							},
							{
								"astId": 431,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 433,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 435,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "kLast",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 438,
								"contract": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol:UniswapV2Pair",
								"label": "unlocked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xa791b279660ee5eb66ebd4f23b539055d178ae24677f3a164567441ecfdcf73a\",\"urls\":[\"bzz-raw://06f36f585a8b82eb388ccccc4e8c483718a99a07f5f12d3217afc254ab139a68\",\"dweb:/ipfs/Qmedr3aAH6F3ZTgZJ3enoP92ZD8yNwiCStwtGknNXhiK8v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol": {
				"IUniswapV2Callee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV2Call",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV2Call(address,uint256,uint256,bytes)": "10d1e85c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV2Call\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol\":\"IUniswapV2Callee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0x514f1fef54c3ec96f0a9b4fbf4980ad71e8ffb237cfc8e872f18ad5d7a199cac\",\"urls\":[\"bzz-raw://33ea4f734ba9e3435cda61424cd7ed392d4b915b5fba33e8625807b08c6b9f77\",\"dweb:/ipfs/QmfSZ3J1ZJHfdX1RUFc3sKn4vpWJRBpaJnvLTgQLUsggcQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0xda3ed72159ac8321b9ee8b67893e0d42ac6f8180b8e1112e8724a9093a409541\",\"urls\":[\"bzz-raw://db4c5c04309ae947a14a464f22f37b76225749248eff9a6a9e184f314531533e\",\"dweb:/ipfs/QmaNHx4uQ79xhQ3SgCK4NodQR11oc4DRtkPGLqGSpB7jei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToGrowth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToGrowth",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToGrowth()": "cf8e9a70",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToGrowth(address)": "2e5b9745",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToGrowth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToGrowth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x8bd197946e428740334fbb3244168d45977aeb692ac08576a57068f8a450454f\",\"urls\":[\"bzz-raw://8a40e12a5f06d1f28f33db9b00a6e4a04a42a9c8b579e1573085b6016363eb1a\",\"dweb:/ipfs/QmXchdVFLZ5okWwduCiEge6mSBdzTLTtU9fBhAjeEk7K8f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x6e301cd1c669825e95796a549af46ea9214abad484a2d687c9a8f4d3953457af\",\"urls\":[\"bzz-raw://1de1663b461dd369ecf043124025f4ce78fe281d6e972180012423584b9bb1ed\",\"dweb:/ipfs/QmNfYrPwNekvVs8nJLXp9v2b5AUMNUm7T7nNd9xdqozX7L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":83:623  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":83:623  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158207628988ae1359274e816846f4efb10dffaaad9e3a16e09f54ecb23db541c153b64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207628988ae1359274e816846f4efb10dffaaad9e3a16e09f54ecb23db541c153b64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH23 0x28988AE1359274E816846F4EFB10DFFAAAD9E3A16E09F5 0x4E 0xCB 0x23 0xDB SLOAD SHR ISZERO EXTCODESIZE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "83:540:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207628988ae1359274e816846f4efb10dffaaad9e3a16e09f54ecb23db541c153b64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH23 0x28988AE1359274E816846F4EFB10DFFAAAD9E3A16E09F5 0x4E 0xCB 0x23 0xDB SLOAD SHR ISZERO EXTCODESIZE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "83:540:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 83,
									"end": 623,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 623,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207628988ae1359274e816846f4efb10dffaaad9e3a16e09f54ecb23db541c153b64736f6c63430005100032",
									".code": [
										{
											"begin": 83,
											"end": 623,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "ADDRESS"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "EQ"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 83,
											"end": 623,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol\":{\"keccak256\":\"0x59371bbb24653eabdec42dd004bc94c70536bd655b007b3175c89561597b258b\",\"urls\":[\"bzz-raw://a17afc98200f4dacc7a1b15adcdc6515abfbf42d78354d530e9df5966c301976\",\"dweb:/ipfs/QmeNz4PfMKN2nAmNxSBqVrWw6g1b3EpRa4ZuDpHq7kafh7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":137:579  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":137:579  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582086ee2a59015226f5130950a3d0afe4982e3ea6b171f62fae2ea5d3b48ae05d3f64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582086ee2a59015226f5130950a3d0afe4982e3ea6b171f62fae2ea5d3b48ae05d3f64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP7 0xEE 0x2A MSIZE ADD MSTORE 0x26 CREATE2 SGT MULMOD POP LOG3 0xD0 0xAF 0xE4 SWAP9 0x2E RETURNDATACOPY 0xA6 0xB1 PUSH18 0xF62FAE2EA5D3B48AE05D3F64736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "137:442:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582086ee2a59015226f5130950a3d0afe4982e3ea6b171f62fae2ea5d3b48ae05d3f64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP7 0xEE 0x2A MSIZE ADD MSTORE 0x26 CREATE2 SGT MULMOD POP LOG3 0xD0 0xAF 0xE4 SWAP9 0x2E RETURNDATACOPY 0xA6 0xB1 PUSH18 0xF62FAE2EA5D3B48AE05D3F64736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "137:442:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 579,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 579,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582086ee2a59015226f5130950a3d0afe4982e3ea6b171f62fae2ea5d3b48ae05d3f64736f6c63430005100032",
									".code": [
										{
											"begin": 137,
											"end": 579,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "ADDRESS"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "EQ"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "DUP1"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xfe46a92953b0ebf82fc2a9f21f995beb60e845aaa7223bfb37711a3b41d6dc11\",\"urls\":[\"bzz-raw://06272423f21f7b375d85d3d4c0cb280a278b1f7f312af2bf002278e16bf48432\",\"dweb:/ipfs/QmXGGm8wvt8pZu2ob1HFk8qLTRATasvomjkaYBvcH3qU57\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":190:596  library UQ112x112 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":190:596  library UQ112x112 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820f986198b817da8e867815f5be38ac360ce87dca68e6e116d0de8c4019b75b3b964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f986198b817da8e867815f5be38ac360ce87dca68e6e116d0de8c4019b75b3b964736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF9 DUP7 NOT DUP12 DUP2 PUSH30 0xA8E867815F5BE38AC360CE87DCA68E6E116D0DE8C4019B75B3B964736F6C PUSH4 0x43000510 STOP ORIGIN ",
							"sourceMap": "190:406:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f986198b817da8e867815f5be38ac360ce87dca68e6e116d0de8c4019b75b3b964736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF9 DUP7 NOT DUP12 DUP2 PUSH30 0xA8E867815F5BE38AC360CE87DCA68E6E116D0DE8C4019B75B3B964736F6C PUSH4 0x43000510 STOP ORIGIN ",
							"sourceMap": "190:406:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 190,
									"end": 596,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 596,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f986198b817da8e867815f5be38ac360ce87dca68e6e116d0de8c4019b75b3b964736f6c63430005100032",
									".code": [
										{
											"begin": 190,
											"end": 596,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "ADDRESS"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "EQ"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 596,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0xe3bebc29aac628026f0eb6d0dd10d463b0b796fadfa0a1cfad1ae603c7d56539\",\"urls\":[\"bzz-raw://64b8a2f0b01eb74df50a00182874db88b10104deb8aa51f9125ac138cf394b89\",\"dweb:/ipfs/QmUYuj73nr6hxK5xmHdsq7wQjHuLC9iH6c89pcn9pDPhLF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol",
					"exportedSymbols": {
						"UniswapV2ERC20": [
							384
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol",
							"file": "./interfaces/IUniswapV2ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 1687,
							"src": "29:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 2153,
							"src": "73:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IUniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1686,
										"src": "138:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2ERC20_$1686",
											"typeString": "contract IUniswapV2ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "138:15:0"
								}
							],
							"contractDependencies": [
								1686
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								1686
							],
							"name": "UniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2152,
										"src": "167:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2152",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "161:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "180:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "193:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "193:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "467669766520546f6b656e",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:13:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0dd2b0c3ae82cd452ec4523efbf188d2aa2ead0a653fbc87a1ab70af7fc7fc29",
											"typeString": "literal_string \"Fvive Token\""
										},
										"value": "Fvive Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "243:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "243:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4656495645",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "275:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8d9e080863d1e251871168e0fa343fec610319ae1ff4d42e1855ae9a15b1a5ee",
											"typeString": "literal_string \"FVIVE\""
										},
										"value": "FVIVE"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "289:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "289:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "322:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "331:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "331:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "362:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "362:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "381:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "410:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "410:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "437:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "429:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "448:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "480:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "480:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "623:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "665:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "738:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "746:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "738:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "757:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "800:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "823:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "848:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "799:60:0"
									},
									"src": "785:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "881:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "903:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "923:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "923:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "880:54:0"
									},
									"src": "866:69:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "964:437:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "975:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "975:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1022:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "998:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1061:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1143:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "1133:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1133:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1263:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1257:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1257:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "1247:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1247:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1304:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1298:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1298:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "1288:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1288:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1328:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2227,
																				"src": "1362:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$384",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$384",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1354:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1354:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "1104:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1104:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1104:278:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "1080:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1080:313:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1061:332:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1061:332:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:0:0"
									},
									"scope": 384,
									"src": "943:458:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1457:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1468:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1482:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2101,
															"src": "1482:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1482:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1468:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1468:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1515:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1525:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1515:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1549:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1531:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1541:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1531:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2101,
															"src": "1531:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1531:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1515:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1515:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1588:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1580:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1580:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1592:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1596:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1571:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1566:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1424:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1436:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:24:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:0"
									},
									"scope": 384,
									"src": "1409:201:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1668:159:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1679:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1689:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1679:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1717:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1697:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1707:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1697:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2123,
															"src": "1697:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1697:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1679:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1679:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1734:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1764:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2123,
															"src": "1748:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1748:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1734:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1734:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1809:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1801:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1801:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1786:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1781:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1633:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1647:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1632:26:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1668:0:0"
									},
									"scope": 384,
									"src": "1618:209:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1905:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1916:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1916:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1916:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1944:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1916:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1916:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1974:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "1965:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1965:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1960:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1853:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1885:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1885:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1852:44:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:0:0"
									},
									"scope": 384,
									"src": "1835:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2077:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2088:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2088:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2126:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2106:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2116:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2106:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2123,
															"src": "2106:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2106:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2088:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2088:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2143:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2153:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2143:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2159:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2169:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2159:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2101,
															"src": "2159:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2159:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2143:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2143:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2208:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2214:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2218:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2194:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2031:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2045:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2057:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2057:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2030:38:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:0"
									},
									"scope": 384,
									"src": "2012:220:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2310:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "2330:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2330:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2321:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2375:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2368:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2257:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2274:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2274:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2256:29:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2304:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2303:6:0"
									},
									"scope": 384,
									"src": "2240:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 1631,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2461:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "2482:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2482:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2494:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2498:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2472:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2472:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2522:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2515:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2413:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2425:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2412:24:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2455:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2454:6:0"
									},
									"scope": 384,
									"src": "2395:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 1640,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2626:217:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2641:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2651:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2641:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "2657:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2657:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2641:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2677:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2678:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2672:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2641:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "2637:140:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "2682:95:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2697:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 281,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 278,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2707:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2697:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 279,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "2713:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2713:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2697:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "2759:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 283,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2727:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 285,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 284,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2737:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2727:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 286,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2209,
																					"src": "2743:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2743:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2727:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2123,
																		"src": "2727:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2727:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2697:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "2697:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 297,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2797:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2803:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2807:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2787:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2787:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2787:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2831:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 303,
												"nodeType": "Return",
												"src": "2824:11:0"
											}
										]
									},
									"documentation": null,
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2564:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2578:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2590:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2563:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2620:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2619:6:0"
									},
									"scope": 384,
									"src": "2542:301:0",
									"stateMutability": "nonpayable",
									"superFunction": 1651,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2966:559:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 323,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2985:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "2997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2997:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2985:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3014:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "2977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2977:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2977:58:0"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3046:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 330,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3122:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 336,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3151:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 340,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3207:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 341,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 307,
																					"src": "3224:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 342,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3231:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 343,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "3240:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3247:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 344,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3247:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 346,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 345,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "3254:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3247:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 348,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "3264:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 338,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2196,
																					"src": "3196:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3196:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3196:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 337,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "3186:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3186:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "3087:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3087:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3087:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "3063:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:237:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3046:254:0"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3311:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 354,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3311:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3356:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3359:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3362:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "3338:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3338:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3311:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3383:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3411:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3403:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3403:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3383:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3417:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3437:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3417:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3383:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3444:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "3375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3375:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3495:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3511:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3486:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3486:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3486:31:0"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2867:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2882:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2899:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2899:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2946:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2866:90:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2966:0:0"
									},
									"scope": 384,
									"src": "2851:674:0",
									"stateMutability": "nonpayable",
									"superFunction": 1685,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "111:3417:0"
						}
					],
					"src": "0:3530:0"
				},
				"id": 0
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2Pair.sol",
					"exportedSymbols": {
						"UniswapV2Pair": [
							1470
						]
					},
					"id": 1471,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:1"
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol",
							"file": "./interfaces/IUniswapV2Pair.sol",
							"id": 387,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 2002,
							"src": "29:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/UniswapV2ERC20.sol",
							"file": "./UniswapV2ERC20.sol",
							"id": 388,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 385,
							"src": "72:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 389,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 2078,
							"src": "104:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol",
							"file": "./libraries/UQ112x112.sol",
							"id": 390,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 2195,
							"src": "136:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 391,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 1555,
							"src": "173:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol",
							"file": "./interfaces/IUniswapV2Factory.sol",
							"id": 392,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 1760,
							"src": "208:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol",
							"file": "./interfaces/IUniswapV2Callee.sol",
							"id": 393,
							"nodeType": "ImportDirective",
							"scope": 1471,
							"sourceUnit": 1569,
							"src": "254:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 394,
										"name": "IUniswapV2Pair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2001,
										"src": "327:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Pair_$2001",
											"typeString": "contract IUniswapV2Pair"
										}
									},
									"id": 395,
									"nodeType": "InheritanceSpecifier",
									"src": "327:14:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 396,
										"name": "UniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 384,
										"src": "343:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UniswapV2ERC20_$384",
											"typeString": "contract UniswapV2ERC20"
										}
									},
									"id": 397,
									"nodeType": "InheritanceSpecifier",
									"src": "343:14:1"
								}
							],
							"contractDependencies": [
								384,
								1686,
								2001
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1470,
							"linearizedBaseContracts": [
								1470,
								384,
								1686,
								2001
							],
							"name": "UniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 400,
									"libraryName": {
										"contractScope": null,
										"id": 398,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2152,
										"src": "371:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2152",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "365:25:1",
									"typeName": {
										"id": 399,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "385:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 403,
									"libraryName": {
										"contractScope": null,
										"id": 401,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2194,
										"src": "402:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2194",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "396:28:1",
									"typeName": {
										"id": 402,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "416:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": true,
									"id": 408,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "432:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 404,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "432:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 405,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "473:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "477:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "473:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 417,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "485:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 409,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "485:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "543:27:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "537:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "537:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 411,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2203,
													"src": "527:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 415,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "527:45:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 410,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "520:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "520:53:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 419,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "582:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 418,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "582:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "611:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 423,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "639:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 422,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "639:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 425,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "669:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 424,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "766:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 426,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "766:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "863:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 428,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "863:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "962:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "962:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 433,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "1001:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 432,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1001:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 435,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "1040:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 434,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1040:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 438,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 1470,
									"src": "1146:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 436,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1146:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1170:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1194:120:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1213:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1225:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1213:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a204c4f434b4544",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1228:19:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cc87f075f04bdfaccb0dc54ec0b98f9169b1507a7e83ec8ee97e34d6a77db4a",
																"typeString": "literal_string \"UniswapV2: LOCKED\""
															},
															"value": "UniswapV2: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cc87f075f04bdfaccb0dc54ec0b98f9169b1507a7e83ec8ee97e34d6a77db4a",
																"typeString": "literal_string \"UniswapV2: LOCKED\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "1205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1205:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "1205:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1259:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1259:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1259:12:1"
											},
											{
												"id": 451,
												"nodeType": "PlaceholderStatement",
												"src": "1282:1:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1294:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1305:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1294:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1294:12:1"
											}
										]
									},
									"documentation": null,
									"id": 457,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:2:1"
									},
									"src": "1178:136:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "1432:121:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 466,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1443:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 467,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1455:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1443:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "1443:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 470,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1474:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 471,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1486:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1474:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "1474:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1505:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 475,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1527:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1505:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1505:40:1"
											}
										]
									},
									"documentation": null,
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:2:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1366:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 459,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1385:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 461,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1404:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 463,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1365:66:1"
									},
									"scope": 1470,
									"src": "1322:231:1",
									"stateMutability": "view",
									"superFunction": 1943,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1631:217:1",
										"statements": [
											{
												"assignments": [
													489,
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "1643:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 488,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1643:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 491,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "1657:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 490,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1657:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 501,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 496,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1712:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 497,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "1722:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "1726:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "1689:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1689:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 492,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1678:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1678:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1642:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 503,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1752:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 504,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "1764:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1764:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1779:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1764:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 510,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "1795:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1802:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 512,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1801:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 508,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2196,
																					"src": "1784:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1784:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1764:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 515,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1763:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1752:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a205452414e534645525f4641494c4544",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1811:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8733df98393ec23d211b1de22ecb14bb9ce352e147cbbbe19c11e12e90b7ff2",
																"typeString": "literal_string \"UniswapV2: TRANSFER_FAILED\""
															},
															"value": "UniswapV2: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8733df98393ec23d211b1de22ecb14bb9ce352e147cbbbe19c11e12e90b7ff2",
																"typeString": "literal_string \"UniswapV2: TRANSFER_FAILED\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "1744:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:96:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1744:96:1"
											}
										]
									},
									"documentation": null,
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1584:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1599:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1611:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1611:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1583:39:1"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:0:1"
									},
									"scope": 1470,
									"src": "1561:287:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 529,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1867:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1891:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1891:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1905:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1866:52:1"
									},
									"src": "1856:63:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 539,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1936:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1960:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1960:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1974:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1988:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1935:72:1"
									},
									"src": "1925:83:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 553,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2035:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2068:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2068:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2093:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2093:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2118:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2144:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2144:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2170:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2024:171:1"
									},
									"src": "2014:182:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 559,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2213:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 554,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2231:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 556,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:36:1"
									},
									"src": "2202:47:1"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2278:39:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 562,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 563,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "2299:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2299:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2289:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2289:20:1"
											}
										]
									},
									"documentation": null,
									"id": 568,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:2:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2278:0:1"
									},
									"scope": 1470,
									"src": "2257:60:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "2445:147:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 576,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "2464:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2464:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 578,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2478:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2464:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20464f5242494444454e",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2487:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
																"typeString": "literal_string \"UniswapV2: FORBIDDEN\""
															},
															"value": "UniswapV2: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
																"typeString": "literal_string \"UniswapV2: FORBIDDEN\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "2456:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2456:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "2456:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 583,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 584,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "2550:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "2541:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 587,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2568:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 588,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "2577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2568:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2568:16:1"
											}
										]
									},
									"documentation": null,
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2402:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2419:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2401:34:1"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2445:0:1"
									},
									"scope": 1470,
									"src": "2382:210:1",
									"stateMutability": "nonpayable",
									"superFunction": 2000,
									"visibility": "external"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "2770:767:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 604,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "2789:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2809:2:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2810:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2801:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2801:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2789:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 610,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "2816:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2836:2:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2837:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2828:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2828:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2816:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2789:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a204f564552464c4f57",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2841:21:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5d1f08cd66a1a59e841a286c7f2c877311b5d331d2315cd2fe3c5f05e833928",
																"typeString": "literal_string \"UniswapV2: OVERFLOW\""
															},
															"value": "UniswapV2: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5d1f08cd66a1a59e841a286c7f2c877311b5d331d2315cd2fe3c5f05e833928",
																"typeString": "literal_string \"UniswapV2: OVERFLOW\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "2781:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "2781:82:1"
											},
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "2874:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 620,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2874:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 623,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "2905:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2905:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2923:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2926:2:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2923:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "2905:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2898:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2874:55:1"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "2940:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 631,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2940:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 633,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2961:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 634,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "2978:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2961:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2940:56:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 637,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3034:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3048:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3034:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 640,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "3053:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3066:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3053:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3034:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 644,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3071:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3084:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3071:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3034:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 677,
												"nodeType": "IfStatement",
												"src": "3030:336:1",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "3087:279:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 648,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3163:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 655,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 598,
																						"src": "3226:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 652,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "3209:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 650,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2194,
																								"src": "3192:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2194_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2175,
																							"src": "3192:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 653,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3192:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2193,
																					"src": "3192:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3192:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3187:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3187:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "3240:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3187:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3163:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 661,
															"nodeType": "ExpressionStatement",
															"src": "3163:88:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 662,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3266:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 669,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "3329:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 666,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 598,
																								"src": "3312:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 664,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2194,
																								"src": "3295:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2194_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 665,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2175,
																							"src": "3295:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 667,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3295:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2193,
																					"src": "3295:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3295:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3290:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3290:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 672,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "3343:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3290:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3266:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 675,
															"nodeType": "ExpressionStatement",
															"src": "3266:88:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 678,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "3376:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 680,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "3395:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3387:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3376:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3376:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3415:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 686,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "3434:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3426:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3426:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3415:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "3415:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 690,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3454:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 691,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3475:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3454:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "3454:35:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 695,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3510:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 696,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3520:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 694,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															559
														],
														"referencedDeclaration": 559,
														"src": "3505:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3505:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "3500:29:1"
											}
										]
									},
									"documentation": null,
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2694:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2709:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2709:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2724:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 597,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2743:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 599,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2693:68:1"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2770:0:1"
									},
									"scope": 1470,
									"src": "2677:860:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3712:1303:1",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "3723:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 709,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3723:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 712,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3757:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 711,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "3739:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1759_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3739:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1759",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1703,
														"src": "3739:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3723:50:1"
											},
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"name": "feeToGrowth",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "3784:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 717,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3784:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 720,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3824:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 719,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "3806:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1759_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3806:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1759",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeToGrowth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1708,
														"src": "3806:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3806:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3784:62:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 725,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3857:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 726,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3865:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3882:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3874:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3874:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "3865:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3857:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "3857:27:1"
											},
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "3895:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3895:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"argumentTypes": null,
													"id": 735,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3909:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3895:19:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 737,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 707,
													"src": "3944:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 840,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4959:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4969:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4959:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 848,
													"nodeType": "IfStatement",
													"src": "4955:53:1",
													"trueBody": {
														"id": 847,
														"nodeType": "Block",
														"src": "4972:36:1",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 843,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "4987:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4995:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4987:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 846,
																"nodeType": "ExpressionStatement",
																"src": "4987:9:1"
															}
														]
													}
												},
												"id": 849,
												"nodeType": "IfStatement",
												"src": "3940:1068:1",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "3951:998:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 738,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "3970:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3980:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3970:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 838,
															"nodeType": "IfStatement",
															"src": "3966:972:1",
															"trueBody": {
																"id": 837,
																"nodeType": "Block",
																"src": "3983:955:1",
																"statements": [
																	{
																		"assignments": [
																			742
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 742,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 837,
																				"src": "4002:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 741,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4002:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 752,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 749,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 704,
																							"src": "4045:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 746,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 702,
																									"src": "4030:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 745,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4025:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 747,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4025:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 748,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2151,
																						"src": "4025:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4025:30:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 743,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2077,
																					"src": "4015:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2077_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2076,
																				"src": "4015:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4015:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4002:54:1"
																	},
																	{
																		"assignments": [
																			754
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 754,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 837,
																				"src": "4075:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 753,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4075:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 759,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 757,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "4102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 755,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2077,
																					"src": "4092:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2077_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2076,
																				"src": "4092:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4092:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4075:34:1"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 760,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "4132:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 761,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 754,
																				"src": "4140:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4132:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 836,
																		"nodeType": "IfStatement",
																		"src": "4128:795:1",
																		"trueBody": {
																			"id": 835,
																			"nodeType": "Block",
																			"src": "4151:772:1",
																			"statements": [
																				{
																					"assignments": [
																						764
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 764,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 835,
																							"src": "4174:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 763,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4174:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 772,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 769,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 754,
																										"src": "4217:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 767,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 742,
																										"src": "4207:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 768,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2123,
																									"src": "4207:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 770,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4207:20:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 765,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 19,
																								"src": "4191:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 766,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2151,
																							"src": "4191:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4191:37:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4174:54:1"
																				},
																				{
																					"assignments": [
																						774
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 774,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 835,
																							"src": "4251:16:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 773,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4251:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 782,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 780,
																								"name": "rootKLast",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 754,
																								"src": "4287:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "35",
																										"id": 777,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4280:1:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 775,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 742,
																										"src": "4270:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 776,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2151,
																									"src": "4270:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 778,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4270:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 779,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2101,
																							"src": "4270:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 781,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4270:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4251:46:1"
																				},
																				{
																					"assignments": [
																						784
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 784,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 835,
																							"src": "4320:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 783,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4320:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 788,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 785,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 764,
																							"src": "4337:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 786,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 774,
																							"src": "4349:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4337:23:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4320:40:1"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 789,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 784,
																							"src": "4387:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 790,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4399:1:1",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4387:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 834,
																					"nodeType": "IfStatement",
																					"src": "4383:521:1",
																					"trueBody": {
																						"id": 833,
																						"nodeType": "Block",
																						"src": "4402:502:1",
																						"statements": [
																							{
																								"condition": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 796,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 792,
																										"name": "feeToGrowth",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 718,
																										"src": "4433:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"hexValue": "30",
																												"id": 794,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "4456:1:1",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 793,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "4448:7:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": "address"
																										},
																										"id": 795,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4448:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address_payable",
																											"typeString": "address payable"
																										}
																									},
																									"src": "4433:25:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"falseBody": {
																									"id": 831,
																									"nodeType": "Block",
																									"src": "4573:308:1",
																									"statements": [
																										{
																											"assignments": [
																												804
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 804,
																													"name": "liquidity_protocol",
																													"nodeType": "VariableDeclaration",
																													"scope": 831,
																													"src": "4604:23:1",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 803,
																														"name": "uint",
																														"nodeType": "ElementaryTypeName",
																														"src": "4604:4:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"value": null,
																													"visibility": "internal"
																												}
																											],
																											"id": 811,
																											"initialValue": {
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 810,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 807,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"id": 805,
																																"name": "liquidity",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 784,
																																"src": "4631:9:1",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "/",
																															"rightExpression": {
																																"argumentTypes": null,
																																"hexValue": "35",
																																"id": 806,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "4643:1:1",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_5_by_1",
																																	"typeString": "int_const 5"
																																},
																																"value": "5"
																															},
																															"src": "4631:13:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 808,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "4630:15:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "33",
																													"id": 809,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "4648:1:1",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_3_by_1",
																														"typeString": "int_const 3"
																													},
																													"value": "3"
																												},
																												"src": "4630:19:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "4604:45:1"
																										},
																										{
																											"assignments": [
																												813
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 813,
																													"name": "liquidity_growth",
																													"nodeType": "VariableDeclaration",
																													"scope": 831,
																													"src": "4680:21:1",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 812,
																														"name": "uint",
																														"nodeType": "ElementaryTypeName",
																														"src": "4680:4:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"value": null,
																													"visibility": "internal"
																												}
																											],
																											"id": 820,
																											"initialValue": {
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 819,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 816,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"id": 814,
																																"name": "liquidity",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 784,
																																"src": "4705:9:1",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "/",
																															"rightExpression": {
																																"argumentTypes": null,
																																"hexValue": "35",
																																"id": 815,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "4717:1:1",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_5_by_1",
																																	"typeString": "int_const 5"
																																},
																																"value": "5"
																															},
																															"src": "4705:13:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 817,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "4704:15:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"hexValue": "32",
																													"id": 818,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "4722:1:1",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_2_by_1",
																														"typeString": "int_const 2"
																													},
																													"value": "2"
																												},
																												"src": "4704:19:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "4680:43:1"
																										},
																										{
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 822,
																														"name": "feeTo",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 710,
																														"src": "4760:5:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"argumentTypes": null,
																														"id": 823,
																														"name": "liquidity_protocol",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 804,
																														"src": "4767:18:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 821,
																													"name": "_mint",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 121,
																													"src": "4754:5:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																														"typeString": "function (address,uint256)"
																													}
																												},
																												"id": 824,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4754:32:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_tuple$__$",
																													"typeString": "tuple()"
																												}
																											},
																											"id": 825,
																											"nodeType": "ExpressionStatement",
																											"src": "4754:32:1"
																										},
																										{
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 827,
																														"name": "feeToGrowth",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 718,
																														"src": "4823:11:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"argumentTypes": null,
																														"id": 828,
																														"name": "liquidity_growth",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 813,
																														"src": "4836:16:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 826,
																													"name": "_mint",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 121,
																													"src": "4817:5:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																														"typeString": "function (address,uint256)"
																													}
																												},
																												"id": 829,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4817:36:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_tuple$__$",
																													"typeString": "tuple()"
																												}
																											},
																											"id": 830,
																											"nodeType": "ExpressionStatement",
																											"src": "4817:36:1"
																										}
																									]
																								},
																								"id": 832,
																								"nodeType": "IfStatement",
																								"src": "4429:452:1",
																								"trueBody": {
																									"id": 802,
																									"nodeType": "Block",
																									"src": "4460:82:1",
																									"statements": [
																										{
																											"expression": {
																												"argumentTypes": null,
																												"arguments": [
																													{
																														"argumentTypes": null,
																														"id": 798,
																														"name": "feeTo",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 710,
																														"src": "4497:5:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"argumentTypes": null,
																														"id": 799,
																														"name": "liquidity",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 784,
																														"src": "4504:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 797,
																													"name": "_mint",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 121,
																													"src": "4491:5:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																														"typeString": "function (address,uint256)"
																													}
																												},
																												"id": 800,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4491:23:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_tuple$__$",
																													"typeString": "tuple()"
																												}
																											},
																											"id": 801,
																											"nodeType": "ExpressionStatement",
																											"src": "4491:23:1"
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3645:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 701,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3664:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 703,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3644:38:1"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3700:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3700:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3699:12:1"
									},
									"scope": 1470,
									"src": "3627:1388:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "5192:1175:1",
										"statements": [
											{
												"assignments": [
													861,
													863,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5204:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 860,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5223:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 862,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5223:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 866,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 864,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "5245:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5245:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:55:1"
											},
											{
												"assignments": [
													868
												],
												"declarations": [
													{
														"constant": false,
														"id": 868,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5284:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 867,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5284:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 874,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "5333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5325:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 870,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "5307:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 869,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "5300:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5300:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1554",
																"typeString": "contract IERC20"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1515,
														"src": "5300:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5300:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:55:1"
											},
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5350:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 878,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5350:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 885,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "5399:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5391:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5391:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 881,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "5373:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 880,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "5366:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5366:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1554",
																"typeString": "contract IERC20"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1515,
														"src": "5366:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5350:55:1"
											},
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5416:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 889,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5416:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 893,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "5444:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 891,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "5431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2123,
														"src": "5431:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5431:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5416:38:1"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5465:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5465:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 900,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5493:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 898,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "5480:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2123,
														"src": "5480:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5465:38:1"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5516:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 903,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5516:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 906,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "5538:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 907,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5549:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 905,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "5529:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5516:43:1"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "5570:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5570:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"argumentTypes": null,
													"id": 912,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "5590:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5570:31:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 914,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "5694:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5694:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "5917:125:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 938,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "5932:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 943,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 911,
																						"src": "5965:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 941,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 890,
																						"src": "5953:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "5953:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5953:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 945,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "5981:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5953:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 949,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 911,
																						"src": "6004:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 947,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 897,
																						"src": "5992:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 948,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "5992:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5992:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 951,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "6020:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5992:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 939,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "5944:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2077_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2022,
																		"src": "5944:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5944:86:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5932:98:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 955,
															"nodeType": "ExpressionStatement",
															"src": "5932:98:1"
														}
													]
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "5690:352:1",
												"trueBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "5713:198:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 917,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "5728:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 926,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "5776:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 922,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 897,
																							"src": "5762:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 920,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 890,
																							"src": "5750:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 921,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2151,
																						"src": "5750:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5750:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 918,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2077,
																					"src": "5740:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2077_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2076,
																				"src": "5740:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5740:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2123,
																		"src": "5740:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5740:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5728:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "5728:66:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5822:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5814:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5814:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 934,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "5826:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 930,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "5808:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5808:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 936,
															"nodeType": "ExpressionStatement",
															"src": "5808:36:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 959,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "6060:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6072:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6060:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6075:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "6052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6052:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "6052:66:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 966,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "6135:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 967,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "6139:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 965,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "6129:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "6129:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 971,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "6170:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 972,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "6180:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 973,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "6190:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 974,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6201:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 970,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6162:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "6162:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 977,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "6226:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 987,
												"nodeType": "IfStatement",
												"src": "6222:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 978,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "6233:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 983,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6260:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 980,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "6246:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6241:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6241:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2151,
																"src": "6241:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6241:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6233:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 986,
													"nodeType": "ExpressionStatement",
													"src": "6233:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 989,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "6330:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6330:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 991,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "6342:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 992,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6351:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															529
														],
														"referencedDeclaration": 529,
														"src": "6325:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6325:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "EmitStatement",
												"src": "6320:39:1"
											}
										]
									},
									"documentation": null,
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 856,
											"modifierName": {
												"argumentTypes": null,
												"id": 855,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "5162:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5162:4:1"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "5141:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5140:12:1"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "5176:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5175:16:1"
									},
									"scope": 1470,
									"src": "5127:1240:1",
									"stateMutability": "nonpayable",
									"superFunction": 1965,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "6556:1389:1",
										"statements": [
											{
												"assignments": [
													1008,
													1010,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6568:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1007,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6568:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1010,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6587:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1009,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6587:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1013,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1011,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "6609:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6609:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6567:55:1"
											},
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6648:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1014,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6648:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"argumentTypes": null,
													"id": 1016,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "6666:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6648:24:1"
											},
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6729:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1018,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6729:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"argumentTypes": null,
													"id": 1020,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "6747:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6729:24:1"
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6810:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1022,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6810:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1029,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "6860:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6852:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6852:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "6833:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1024,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "6826:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6826:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1554",
																"typeString": "contract IERC20"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1515,
														"src": "6826:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6826:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6810:56:1"
											},
											{
												"assignments": [
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6877:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1033,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6877:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1043,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1040,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "6927:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6919:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6919:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1036,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "6900:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1035,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "6893:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6893:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1554",
																"typeString": "contract IERC20"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1515,
														"src": "6893:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6893:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:56:1"
											},
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6944:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1044,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1046,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "6961:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1050,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1048,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "6979:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																	"typeString": "contract UniswapV2Pair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																	"typeString": "contract UniswapV2Pair"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6971:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6971:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6961:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6944:41:1"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "6998:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1052,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6998:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1058,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1055,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "7020:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1056,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "7031:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1054,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "7011:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7011:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6998:43:1"
											},
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "7052:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1059,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7052:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"argumentTypes": null,
													"id": 1061,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "7072:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7052:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1063,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "7172:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1066,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "7196:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1064,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "7182:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2151,
																"src": "7182:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7182:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1068,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "7208:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7182:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7172:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "7172:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1072,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "7279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1075,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "7303:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1073,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "7289:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2151,
																"src": "7289:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7289:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1077,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "7315:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7289:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7279:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "7279:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1082,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "7394:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7404:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7394:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1085,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "7409:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7419:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7409:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7394:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7422:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57ebfb4dd8b5082cdba0f23c17077e3b0ecb9782a51e0e9a15e9bc8c4b30c562",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57ebfb4dd8b5082cdba0f23c17077e3b0ecb9782a51e0e9a15e9bc8c4b30c562",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "7386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7386:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "7386:79:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1094,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "7490:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																		"typeString": "contract UniswapV2Pair"
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7482:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7482:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1096,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "7497:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1092,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "7476:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7476:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "7476:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1100,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "7532:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1101,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "7541:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1102,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "7545:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "7518:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7518:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "7518:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1106,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "7578:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "7587:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1108,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7591:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1105,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "7564:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7564:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "7564:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1111,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "7610:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1117,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "7655:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																			"typeString": "contract UniswapV2Pair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																			"typeString": "contract UniswapV2Pair"
																		}
																	],
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7647:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1113,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "7628:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "7621:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7621:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1554",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1515,
															"src": "7621:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7621:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7610:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "7610:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1122,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "7672:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1128,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "7717:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																			"typeString": "contract UniswapV2Pair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																			"typeString": "contract UniswapV2Pair"
																		}
																	],
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7709:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7709:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1124,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "7690:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1123,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "7683:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1554",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1515,
															"src": "7683:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7683:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7672:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "7672:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1134,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7744:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1135,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "7754:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1136,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "7764:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1137,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "7775:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1133,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7736:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7736:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "7736:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1140,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1053,
													"src": "7800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "7796:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1141,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "7807:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1146,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "7834:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1143,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "7820:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7815:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7815:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2151,
																"src": "7815:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7815:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7807:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1149,
													"nodeType": "ExpressionStatement",
													"src": "7807:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "7904:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7904:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1154,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "7916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1155,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7925:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "7934:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1151,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															539
														],
														"referencedDeclaration": 539,
														"src": "7899:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7899:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "EmitStatement",
												"src": "7894:43:1"
											}
										]
									},
									"documentation": null,
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1001,
											"modifierName": {
												"argumentTypes": null,
												"id": 1000,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "6514:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6514:4:1"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6493:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6492:12:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6528:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6528:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6542:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6542:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6527:28:1"
									},
									"scope": 1470,
									"src": "6479:1466:1",
									"stateMutability": "nonpayable",
									"superFunction": 1974,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "8152:1794:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1174,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "8171:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8184:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8171:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1177,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "8189:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8202:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8189:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8171:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8205:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "8163:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "8163:82:1"
											},
											{
												"assignments": [
													1185,
													1187,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "8257:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1184,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "8257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1187,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "8276:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1186,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "8276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1190,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1188,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "8298:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8298:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8256:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1192,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "8345:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "8358:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "8345:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "8371:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1196,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "8384:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "8371:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8345:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4c4951554944495459",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8395:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f354ef449b2a9b081220ce21f57691008110b653edc191d8288e60cef58bb5f",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "UniswapV2: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f354ef449b2a9b081220ce21f57691008110b653edc191d8288e60cef58bb5f",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "8337:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8337:94:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "8337:94:1"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "8444:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8444:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8444:13:1"
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "8468:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1205,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8468:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8468:13:1"
											},
											{
												"id": 1285,
												"nodeType": "Block",
												"src": "8492:650:1",
												"statements": [
													{
														"assignments": [
															1209
														],
														"declarations": [
															{
																"constant": false,
																"id": 1209,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "8558:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8558:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1211,
														"initialValue": {
															"argumentTypes": null,
															"id": 1210,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "8576:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8558:24:1"
													},
													{
														"assignments": [
															1213
														],
														"declarations": [
															{
																"constant": false,
																"id": 1213,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "8593:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1212,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8593:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1215,
														"initialValue": {
															"argumentTypes": null,
															"id": 1214,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8611:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8593:24:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1217,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "8636:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1218,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "8642:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8636:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1220,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "8653:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1221,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "8659:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8653:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8636:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "556e697377617056323a20494e56414c49445f544f",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8668:23:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_25d395026e6e4dd4e9808c7d6d3dd1f45abaf4874ae71f7161fff58de03154d3",
																		"typeString": "literal_string \"UniswapV2: INVALID_TO\""
																	},
																	"value": "UniswapV2: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_25d395026e6e4dd4e9808c7d6d3dd1f45abaf4874ae71f7161fff58de03154d3",
																		"typeString": "literal_string \"UniswapV2: INVALID_TO\""
																	}
																],
																"id": 1216,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2212,
																	2213
																],
																"referencedDeclaration": 2213,
																"src": "8628:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8628:64:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1226,
														"nodeType": "ExpressionStatement",
														"src": "8628:64:1"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1227,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "8707:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8720:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8707:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1236,
														"nodeType": "IfStatement",
														"src": "8703:58:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1231,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "8737:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1232,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "8746:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1233,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "8750:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1230,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "8723:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8723:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "8723:38:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1237,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "8810:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8823:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8810:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1246,
														"nodeType": "IfStatement",
														"src": "8806:58:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1241,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "8840:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "8849:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1243,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "8853:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1240,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "8826:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8826:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "8826:38:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1247,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "8913:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8913:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8927:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8913:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1262,
														"nodeType": "IfStatement",
														"src": "8909:97:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1255,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "8965:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8965:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1257,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "8977:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1258,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "8989:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1259,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "9001:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1252,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1166,
																				"src": "8947:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1251,
																			"name": "IUniswapV2Callee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "8930:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV2Callee_$1568_$",
																				"typeString": "type(contract IUniswapV2Callee)"
																			}
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8930:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Callee_$1568",
																			"typeString": "contract IUniswapV2Callee"
																		}
																	},
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "uniswapV2Call",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1567,
																	"src": "8930:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8930:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1261,
															"nodeType": "ExpressionStatement",
															"src": "8930:76:1"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1263,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "9017:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1269,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2241,
																				"src": "9062:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																					"typeString": "contract UniswapV2Pair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																					"typeString": "contract UniswapV2Pair"
																				}
																			],
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9054:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9054:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1265,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1209,
																				"src": "9035:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1264,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "9028:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9028:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1554",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1515,
																	"src": "9028:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9028:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9017:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1273,
														"nodeType": "ExpressionStatement",
														"src": "9017:51:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1274,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "9079:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1280,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2241,
																				"src": "9124:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																					"typeString": "contract UniswapV2Pair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																					"typeString": "contract UniswapV2Pair"
																				}
																			],
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9116:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9116:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1276,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "9097:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1275,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "9090:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9090:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1554",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1515,
																	"src": "9090:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9090:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9079:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1284,
														"nodeType": "ExpressionStatement",
														"src": "9079:51:1"
													}
												]
											},
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "9152:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1286,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9152:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1301,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1288,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "9169:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1289,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "9180:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1290,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "9192:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9180:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9169:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9243:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9169:75:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1293,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "9205:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1294,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "9217:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1295,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "9229:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9217:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9216:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9205:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9152:92:1"
											},
											{
												"assignments": [
													1303
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "9255:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1302,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9255:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1304,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "9272:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1305,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "9283:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1306,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "9295:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9283:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9272:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9346:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9272:75:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1309,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "9308:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1310,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "9320:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1311,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "9332:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9320:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1313,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9319:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9308:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9255:92:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1319,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "9366:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9378:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9366:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1322,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "9383:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9395:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9383:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9366:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9398:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10e2efc32d8a31d3b2c11a545b3ed09c2dbabc58ef6de4033929d0002e425b67",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10e2efc32d8a31d3b2c11a545b3ed09c2dbabc58ef6de4033929d0002e425b67",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "9358:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9358:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "9358:79:1"
											},
											{
												"id": 1375,
												"nodeType": "Block",
												"src": "9448:347:1",
												"statements": [
													{
														"assignments": [
															1330
														],
														"declarations": [
															{
																"constant": false,
																"id": 1330,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1375,
																"src": "9523:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1329,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "9523:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1341,
														"initialValue": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9584:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1336,
																			"name": "amount0In",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "9570:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2151,
																		"src": "9570:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9570:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31303030",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9560:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1331,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "9547:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2151,
																		"src": "9547:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9547:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2123,
																"src": "9547:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9547:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9523:64:1"
													},
													{
														"assignments": [
															1343
														],
														"declarations": [
															{
																"constant": false,
																"id": 1343,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1375,
																"src": "9598:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1342,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "9598:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1354,
														"initialValue": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9659:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1349,
																			"name": "amount1In",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "9645:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2151,
																		"src": "9645:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9645:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31303030",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9635:4:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1344,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "9622:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2151,
																		"src": "9622:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9622:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2123,
																"src": "9622:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9622:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9598:64:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1358,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "9702:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1356,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1330,
																				"src": "9681:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2151,
																			"src": "9681:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9681:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				},
																				"id": 1369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "31303030",
																					"id": 1367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9758:4:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9764:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "9758:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1364,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "9743:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1361,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1185,
																								"src": "9728:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 1360,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9723:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9723:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "9723:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9723:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2151,
																			"src": "9723:34:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9723:43:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9681:85:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "556e697377617056323a204b",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9768:14:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
																		"typeString": "literal_string \"UniswapV2: K\""
																	},
																	"value": "UniswapV2: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
																		"typeString": "literal_string \"UniswapV2: K\""
																	}
																],
																"id": 1355,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2212,
																	2213
																],
																"referencedDeclaration": 2213,
																"src": "9673:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9673:110:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1374,
														"nodeType": "ExpressionStatement",
														"src": "9673:110:1"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1377,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "9815:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1378,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "9825:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1379,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "9835:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1380,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "9846:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1376,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "9807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9807:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "9807:49:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "9877:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9877:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1386,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "9889:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1387,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "9900:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1388,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "9911:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1389,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "9923:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1390,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "9935:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1383,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															553
														],
														"referencedDeclaration": 553,
														"src": "9872:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9872:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "EmitStatement",
												"src": "9867:71:1"
											}
										]
									},
									"documentation": null,
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1171,
											"modifierName": {
												"argumentTypes": null,
												"id": 1170,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "8147:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8147:4:1"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "8071:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "8088:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "8105:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "8117:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8117:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8070:67:1"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8152:0:1"
									},
									"scope": 1470,
									"src": "8057:1889:1",
									"stateMutability": "nonpayable",
									"superFunction": 1985,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "10035:294:1",
										"statements": [
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1441,
														"src": "10046:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1401,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10046:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"argumentTypes": null,
													"id": 1403,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 421,
													"src": "10064:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10046:24:1"
											},
											{
												"assignments": [
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1441,
														"src": "10096:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1405,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10096:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"argumentTypes": null,
													"id": 1407,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "10114:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10096:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "10160:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1411,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "10169:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1421,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "10218:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1417,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2241,
																					"src": "10207:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																						"typeString": "contract UniswapV2Pair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																						"typeString": "contract UniswapV2Pair"
																					}
																				],
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10199:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10199:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1413,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1402,
																					"src": "10180:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1412,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "10173:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10173:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1554",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1515,
																		"src": "10173:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10173:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2123,
																"src": "10173:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10173:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1409,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "10146:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10146:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "10146:82:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1426,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "10253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "10262:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1437,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "10311:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1433,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2241,
																					"src": "10300:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																						"typeString": "contract UniswapV2Pair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																						"typeString": "contract UniswapV2Pair"
																					}
																				],
																				"id": 1432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10292:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10292:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1429,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1406,
																					"src": "10273:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1428,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "10266:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10266:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1554",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1515,
																		"src": "10266:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10266:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2123,
																"src": "10266:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10266:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "10239:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10239:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "10239:82:1"
											}
										]
									},
									"documentation": null,
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1399,
											"modifierName": {
												"argumentTypes": null,
												"id": 1398,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "10030:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10030:4:1"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "10009:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10009:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10008:12:1"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10035:0:1"
									},
									"scope": 1470,
									"src": "9995:334:1",
									"stateMutability": "nonpayable",
									"superFunction": 1990,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "10408:128:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1453,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2241,
																			"src": "10460:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																				"typeString": "contract UniswapV2Pair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																				"typeString": "contract UniswapV2Pair"
																			}
																		],
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10452:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10452:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1449,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "10434:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1448,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "10427:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10427:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1554",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1515,
																"src": "10427:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10427:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1461,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2241,
																			"src": "10501:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																				"typeString": "contract UniswapV2Pair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UniswapV2Pair_$1470",
																				"typeString": "contract UniswapV2Pair"
																			}
																		],
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10493:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10493:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1457,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "10475:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1456,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "10468:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1554_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10468:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1554",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1515,
																"src": "10468:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10468:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1464,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "10509:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1465,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "10519:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1447,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "10419:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10419:109:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "10419:109:1"
											}
										]
									},
									"documentation": null,
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1445,
											"modifierName": {
												"argumentTypes": null,
												"id": 1444,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 457,
												"src": "10403:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10403:4:1"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10391:2:1"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 1470,
									"src": "10378:158:1",
									"stateMutability": "nonpayable",
									"superFunction": 1993,
									"visibility": "external"
								}
							],
							"scope": 1471,
							"src": "301:10238:1"
						}
					],
					"src": "0:10541:1"
				},
				"id": 1
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1554
						]
					},
					"id": 1555,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1472,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1554,
							"linearizedBaseContracts": [
								1554
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1480,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "67:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "90:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "90:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "115:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "66:60:2"
									},
									"src": "52:75:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1488,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "148:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "170:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "190:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "190:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "147:54:2"
									},
									"src": "133:69:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:2:2"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "249:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "249:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "248:15:2"
									},
									"scope": 1554,
									"src": "210:54:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:2"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "311:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "310:15:2"
									},
									"scope": 1554,
									"src": "270:56:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:2"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "375:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1500,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:7:2"
									},
									"scope": 1554,
									"src": "332:50:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:2"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "434:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:2"
									},
									"scope": 1554,
									"src": "388:52:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:15:2"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "503:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:6:2"
									},
									"scope": 1554,
									"src": "446:63:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "534:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "549:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "533:32:2"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "589:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:6:2"
									},
									"scope": 1554,
									"src": "515:80:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "620:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "637:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:29:2"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "667:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "667:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:6:2"
									},
									"scope": 1554,
									"src": "603:70:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "697:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "709:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "696:24:2"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:6:2"
									},
									"scope": 1554,
									"src": "679:66:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "773:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "787:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "799:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "799:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "772:38:2"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "829:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:6:2"
									},
									"scope": 1554,
									"src": "751:84:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1555,
							"src": "28:810:2"
						}
					],
					"src": "0:840:2"
				},
				"id": 2
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Callee.sol",
					"exportedSymbols": {
						"IUniswapV2Callee": [
							1568
						]
					},
					"id": 1569,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1556,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1568,
							"linearizedBaseContracts": [
								1568
							],
							"name": "IUniswapV2Callee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV2Call",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "85:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "85:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "101:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "101:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "115:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "129:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "129:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "84:65:3"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:0:3"
									},
									"scope": 1568,
									"src": "62:97:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1569,
							"src": "28:134:3"
						}
					],
					"src": "0:164:3"
				},
				"id": 3
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							1686
						]
					},
					"id": 1687,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1570,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1686,
							"linearizedBaseContracts": [
								1686
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1578,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "76:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "99:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "99:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "124:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "75:60:4"
									},
									"src": "61:75:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1586,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "157:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "179:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "199:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "199:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "156:54:4"
									},
									"src": "142:69:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:4"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "258:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "258:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "257:15:4"
									},
									"scope": 1686,
									"src": "219:54:4",
									"stateMutability": "pure",
									"superFunction": 1782,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:4"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "320:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "320:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:15:4"
									},
									"scope": 1686,
									"src": "279:56:4",
									"stateMutability": "pure",
									"superFunction": 1787,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:4"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "384:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1598,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "384:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:7:4"
									},
									"scope": 1686,
									"src": "341:50:4",
									"stateMutability": "pure",
									"superFunction": 1792,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:4"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "443:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "443:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "442:6:4"
									},
									"scope": 1686,
									"src": "397:52:4",
									"stateMutability": "view",
									"superFunction": 1797,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "474:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "473:15:4"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "512:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "512:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "511:6:4"
									},
									"scope": 1686,
									"src": "455:63:4",
									"stateMutability": "view",
									"superFunction": 1804,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "543:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "558:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "542:32:4"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "598:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "597:6:4"
									},
									"scope": 1686,
									"src": "524:80:4",
									"stateMutability": "view",
									"superFunction": 1813,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "629:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "646:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "628:29:4"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "676:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "676:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:6:4"
									},
									"scope": 1686,
									"src": "612:70:4",
									"stateMutability": "nonpayable",
									"superFunction": 1822,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "706:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "718:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "718:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:24:4"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "748:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:6:4"
									},
									"scope": 1686,
									"src": "688:66:4",
									"stateMutability": "nonpayable",
									"superFunction": 1831,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "782:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "796:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "781:38:4"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "838:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "837:6:4"
									},
									"scope": 1686,
									"src": "760:84:4",
									"stateMutability": "nonpayable",
									"superFunction": 1842,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:2:4"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "903:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "902:9:4"
									},
									"scope": 1686,
									"src": "852:60:4",
									"stateMutability": "view",
									"superFunction": 1847,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:2:4"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "968:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "967:9:4"
									},
									"scope": 1686,
									"src": "918:59:4",
									"stateMutability": "pure",
									"superFunction": 1852,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "998:15:4"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1037:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1037:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1036:6:4"
									},
									"scope": 1686,
									"src": "983:60:4",
									"stateMutability": "view",
									"superFunction": 1859,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1067:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1082:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1099:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1111:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1126:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1677,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1126:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:90:4"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:4"
									},
									"scope": 1686,
									"src": "1051:115:4",
									"stateMutability": "nonpayable",
									"superFunction": 1876,
									"visibility": "external"
								}
							],
							"scope": 1687,
							"src": "28:1141:4"
						}
					],
					"src": "0:1171:4"
				},
				"id": 4
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1759
						]
					},
					"id": 1760,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1688,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1759,
							"linearizedBaseContracts": [
								1759
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1698,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "81:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "105:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "129:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "143:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "143:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "80:68:5"
									},
									"src": "63:86:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:2:5"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "197:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "196:9:5"
									},
									"scope": 1759,
									"src": "157:49:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToGrowth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:5"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "258:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "257:9:5"
									},
									"scope": 1759,
									"src": "212:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:5"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "319:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:9:5"
									},
									"scope": 1759,
									"src": "273:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "353:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "369:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:32:5"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "408:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:14:5"
									},
									"scope": 1759,
									"src": "336:86:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "446:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "445:6:5"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "475:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "474:14:5"
									},
									"scope": 1759,
									"src": "428:61:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:5"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "544:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "543:6:5"
									},
									"scope": 1759,
									"src": "495:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "578:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "594:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:32:5"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "628:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "627:14:5"
									},
									"scope": 1759,
									"src": "558:84:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "668:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "667:9:5"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:0:5"
									},
									"scope": 1759,
									"src": "650:36:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToGrowth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "716:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:9:5"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:5"
									},
									"scope": 1759,
									"src": "692:42:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "764:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "763:9:5"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:0:5"
									},
									"scope": 1759,
									"src": "740:42:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1760,
							"src": "28:757:5"
						}
					],
					"src": "0:787:5"
				},
				"id": 5
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							2001
						]
					},
					"id": 2002,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1761,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2001,
							"linearizedBaseContracts": [
								2001
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1769,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "75:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "98:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "98:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "123:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "123:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "74:60:6"
									},
									"src": "60:75:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1777,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "156:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "178:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "198:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "198:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "155:54:6"
									},
									"src": "141:69:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:2:6"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "257:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "256:15:6"
									},
									"scope": 2001,
									"src": "218:54:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:6"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "319:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "319:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:15:6"
									},
									"scope": 2001,
									"src": "278:56:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:6"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "383:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1789,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "383:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:7:6"
									},
									"scope": 2001,
									"src": "340:50:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:6"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "442:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:6:6"
									},
									"scope": 2001,
									"src": "396:52:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "511:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "510:6:6"
									},
									"scope": 2001,
									"src": "454:63:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "557:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:32:6"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "597:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "597:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "596:6:6"
									},
									"scope": 2001,
									"src": "523:80:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "645:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "627:29:6"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:6:6"
									},
									"scope": 2001,
									"src": "611:70:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "705:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "717:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "717:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:24:6"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "747:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "747:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:6:6"
									},
									"scope": 2001,
									"src": "687:66:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "781:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "795:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "807:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "807:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "780:38:6"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "837:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "836:6:6"
									},
									"scope": 2001,
									"src": "759:84:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:2:6"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "902:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "901:9:6"
									},
									"scope": 2001,
									"src": "851:60:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:2:6"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "967:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1849,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "966:9:6"
									},
									"scope": 2001,
									"src": "917:59:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "998:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "997:15:6"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1036:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1036:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1035:6:6"
									},
									"scope": 2001,
									"src": "982:60:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1066:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1081:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1098:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1098:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1110:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1125:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1868,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1125:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1134:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1145:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1065:90:6"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:0:6"
									},
									"scope": 2001,
									"src": "1050:115:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1884,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1184:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1208:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1183:52:6"
									},
									"src": "1173:63:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1894,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1253:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1277:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1291:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1305:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1252:72:6"
									},
									"src": "1242:83:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1908,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1352:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1385:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1410:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1410:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1435:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1435:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1461:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1461:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1487:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1341:171:6"
									},
									"src": "1331:182:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1914,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1530:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1909,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1548:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1911,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1529:36:6"
									},
									"src": "1519:47:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:2:6"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "1626:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1626:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1625:6:6"
									},
									"scope": 2001,
									"src": "1574:58:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:2:6"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1680:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:9:6"
									},
									"scope": 2001,
									"src": "1638:51:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:6"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "1736:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1735:9:6"
									},
									"scope": 2001,
									"src": "1695:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:2:6"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1792:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:9:6"
									},
									"scope": 2001,
									"src": "1751:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:2:6"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "1853:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1936,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "1871:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1938,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "1889:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1940,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1889:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1852:63:6"
									},
									"scope": 2001,
									"src": "1807:109:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:2:6"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1977:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1977:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1976:6:6"
									},
									"scope": 2001,
									"src": "1922:61:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2018:2:6"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "2044:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2044:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2043:6:6"
									},
									"scope": 2001,
									"src": "1989:61:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:6"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2096:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2096:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2095:6:6"
									},
									"scope": 2001,
									"src": "2056:46:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "2124:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2123:12:6"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "2154:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2153:16:6"
									},
									"scope": 2001,
									"src": "2110:60:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1974,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2190:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2189:12:6"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2220:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2220:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2234:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2234:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2219:28:6"
									},
									"scope": 2001,
									"src": "2176:72:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "2268:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "2285:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2285:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "2302:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "2314:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2314:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2267:67:6"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:0:6"
									},
									"scope": 2001,
									"src": "2254:90:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2364:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:12:6"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:6"
									},
									"scope": 2001,
									"src": "2350:35:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:2:6"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2415:0:6"
									},
									"scope": 2001,
									"src": "2391:25:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2444:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2453:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2443:18:6"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 2001,
									"src": "2424:47:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2002,
							"src": "28:2446:6"
						}
					],
					"src": "0:2476:6"
				},
				"id": 6
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							2077
						]
					},
					"id": 2078,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2003,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2077,
							"linearizedBaseContracts": [
								2077
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "163:36:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2012,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "174:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2013,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2005,
																"src": "178:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2014,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "182:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "178:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 2017,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "190:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "178:13:7",
														"trueExpression": {
															"argumentTypes": null,
															"id": 2016,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "186:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "174:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "174:17:7"
											}
										]
									},
									"documentation": null,
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "116:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "116:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "124:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "115:16:7"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "155:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "155:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "154:8:7"
									},
									"scope": 2077,
									"src": "103:96:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "370:250:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2029,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2024,
														"src": "385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "389:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "385:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2065,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "573:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "578:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "573:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2073,
													"nodeType": "IfStatement",
													"src": "569:44:7",
													"trueBody": {
														"id": 2072,
														"nodeType": "Block",
														"src": "581:32:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 2068,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2027,
																		"src": "596:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "600:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "596:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2071,
																"nodeType": "ExpressionStatement",
																"src": "596:5:7"
															}
														]
													}
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "381:232:7",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "392:171:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2032,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "407:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 2033,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "411:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "407:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2035,
															"nodeType": "ExpressionStatement",
															"src": "407:5:7"
														},
														{
															"assignments": [
																2037
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2037,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 2064,
																	"src": "427:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2036,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "427:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2043,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2038,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2024,
																		"src": "436:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "440:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "436:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "444:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "436:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "427:18:7"
														},
														{
															"body": {
																"id": 2062,
																"nodeType": "Block",
																"src": "474:78:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2047,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2027,
																				"src": "493:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2048,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2037,
																				"src": "497:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "493:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2050,
																		"nodeType": "ExpressionStatement",
																		"src": "493:5:7"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2051,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2037,
																				"src": "517:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2056,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2054,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2052,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2024,
																									"src": "522:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 2053,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2037,
																									"src": "526:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "522:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2055,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2037,
																								"src": "530:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "522:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2057,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "521:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "535:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "521:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "517:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2061,
																		"nodeType": "ExpressionStatement",
																		"src": "517:19:7"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2044,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "467:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2045,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "471:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "467:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2063,
															"nodeType": "WhileStatement",
															"src": "460:92:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "331:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "331:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "330:8:7"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "362:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "362:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:8:7"
									},
									"scope": 2077,
									"src": "317:303:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2078,
							"src": "83:540:7"
						}
					],
					"src": "0:625:7"
				},
				"id": 7
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2152
						]
					},
					"id": 2153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2079,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2152,
							"linearizedBaseContracts": [
								2152
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "221:68:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2089,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2086,
																			"src": "241:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2090,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2081,
																				"src": "245:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2091,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2083,
																				"src": "249:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "245:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "241:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "240:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2095,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2081,
																"src": "255:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "240:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "258:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "232:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "232:49:8"
											}
										]
									},
									"documentation": null,
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "174:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "174:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "182:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "182:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "173:16:8"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "213:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "213:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "212:8:8"
									},
									"scope": 2152,
									"src": "161:128:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "357:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2111,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2108,
																			"src": "377:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2112,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2103,
																				"src": "381:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2113,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2105,
																				"src": "385:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "381:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "377:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "376:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2117,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "391:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "376:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "394:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "368:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "368:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "368:50:8"
											}
										]
									},
									"documentation": null,
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "310:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "310:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "318:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "318:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "309:16:8"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "349:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "348:8:8"
									},
									"scope": 2152,
									"src": "297:129:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "494:82:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2133,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2127,
																	"src": "513:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "518:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "513:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2136,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2130,
																					"src": "524:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2137,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2125,
																						"src": "528:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2138,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2127,
																						"src": "532:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "528:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "524:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2141,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "523:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2142,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2127,
																		"src": "537:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "523:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2144,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "542:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "523:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "513:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "545:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2212,
															2213
														],
														"referencedDeclaration": 2213,
														"src": "505:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "505:63:8"
											}
										]
									},
									"documentation": null,
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "447:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "447:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "455:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "455:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:16:8"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "486:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "486:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:8:8"
									},
									"scope": 2152,
									"src": "434:142:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2153,
							"src": "137:442:8"
						}
					],
					"src": "0:581:8"
				},
				"id": 8
			},
			"godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol": {
				"ast": {
					"absolutePath": "godwoken_is_nervos/smart_contracts/v2-core-master/contracts/libraries/UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2194
						]
					},
					"id": 2195,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2154,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2194,
							"linearizedBaseContracts": [
								2194
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2159,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2194,
									"src": "215:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2155,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2158,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2156,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "239:1:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2157,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "242:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "239:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "355:59:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2166,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2164,
														"src": "366:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2168,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "378:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "370:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "370:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2170,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "383:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "370:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "366:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "366:21:9"
											}
										]
									},
									"documentation": null,
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "310:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2160,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "309:11:9"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "344:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2163,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "343:11:9"
									},
									"scope": 2194,
									"src": "294:120:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "556:37:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2184,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2182,
														"src": "567:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2185,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "571:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2187,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "583:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "575:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "575:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "571:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "567:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "567:18:9"
											}
										]
									},
									"documentation": null,
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "500:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2176,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "511:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2178,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "499:22:9"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "545:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2181,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "544:11:9"
									},
									"scope": 2194,
									"src": "485:108:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2195,
							"src": "190:406:9"
						}
					],
					"src": "0:598:9"
				},
				"id": 9
			}
		}
	}
}